name: Presubmit
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  format:
    name: Code formatting check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check format
        shell: bash
        run: |
          set -x
          find -name *.rs -exec rustfmt {} \+
          git diff --exit-code
  build:
    name: Test ${{ matrix.project }}
    needs: format
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        project: [clvk, mesa, OpenCL-CTS, angle, clpeak]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Ninja
        shell: bash
        run: |
          set -x
          sudo apt install ninja-build
      - name: Setup environement variables
        shell: bash
        run: |
          set -x
          echo "android=$(realpath ${{ github.workspace }}/../android)" >> $GITHUB_ENV
          echo "tmp_dir=$(realpath ${{ github.workspace }}/../tmp)" >> $GITHUB_ENV
          if [ "${{ matrix.project }}" == "clvk" ]; then
            echo "key=$(git log -1 --format='%h' .github/workflows/*.yml tests/clvk/*.sh tests/clspv/*.sh tests/llvm-project/*.sh tests/SPIRV-Tools/*.sh tests/SPIRV-Headers/*.sh)-clvk" >> $GITHUB_ENV
            echo "projects=clvk clspv llvm-project SPIRV-Tools SPIRV-Headers" >> $GITHUB_ENV
          elif [ "${{ matrix.project }}" == "mesa" ]; then
            echo "key=$(git log -1 --format='%h' .github/workflows/*.yml tests/mesa3d/desktop-intel/*.sh tests/mesa3d/desktop-panvk/*.sh)-mesa" >> $GITHUB_ENV
            echo "projects=mesa3d/desktop-intel mesa3d/desktop-panvk" >> $GITHUB_ENV
          elif [ "${{ matrix.project }}" == "OpenCL-CTS" ]; then
            echo "key=$(git log -1 --format='%h' .github/workflows/*.yml tests/OpenCL-CTS/*.sh)-OpenCL-CTS" >> $GITHUB_ENV
            echo "projects=OpenCL-CTS" >> $GITHUB_ENV
          elif [ "${{ matrix.project }}" == "angle" ]; then
            echo "key=$(git log -1 --format='%h' .github/workflows/*.yml tests/angle/*.sh tests/angle/build)-angle" >> $GITHUB_ENV
            echo "projects=angle" >> $GITHUB_ENV
          elif [ "${{ matrix.project }}" == "clpeak" ]; then
            echo "key=$(git log -1 --format='%h' .github/workflows/*.yml tests/clpeak/*.sh)-clpeak" >> $GITHUB_ENV
            echo "projects=clpeak" >> $GITHUB_ENV
          fi
      - name: Get repositories from cache
        id: checkout-repositories
        uses: actions/cache@v4
        with:
          path: ${{ env.tmp_dir }}
          key: ${{ env.key }}
      - name: Checkout
        shell: bash
        run: |
          set -x
          mkdir -p "${{ env.android }}"
          for checkout in ${{ env.projects }}
          do
            bash "tests/${checkout}/checkout.sh" "${{ env.android }}"
          done
      - name: Tests w/o cache
        if: steps.checkout-repositories.outputs.cache-hit != 'true'
        shell: bash
        env:
          N2S_TMP_PATH: ${{ env.tmp_dir }}
          N2S_NDK_PATH: ${{ env.android }}
        run: |
          set -x
          PATH="${{ env.android }}/depot_tools:${PATH}" cargo run --features debug_project --release -- --skip-build --aosp-path "${{ env.android }}" ${{ env.projects }}
      - name: Tests w/ cache
        if: steps.checkout-repositories.outputs.cache-hit == 'true'
        shell: bash
        env:
          N2S_TMP_PATH: ${{ env.tmp_dir }}
          N2S_NDK_PATH: ${{ env.android }}
        run: |
          set -x
          PATH="${{ env.android }}/depot_tools:${PATH}" cargo run --features debug_project --release -- --skip-gen-ninja --aosp-path "${{ env.android }}" ${{ env.projects }}
      - name: Check generated files
        shell: bash
        run: |
          set -x
          git diff --exit-code
