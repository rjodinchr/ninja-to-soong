//
// This file has been auto-generated by ninja-to-soong
//
// ******************************
// *** DO NOT MODIFY MANUALLY ***
// ******************************
//
// https://github.com/rjodinchr/ninja-to-soong
//

package {
    default_visibility: ["//visibility:public"],
    default_applicable_licenses: ["llvm-project_license_txt"],
}

license {
    name: "llvm-project_license_txt",
    visibility: [":__subpackages__"],
    license_kinds: ["SPDX-license-identifier-Apache-2.0"],
    license_text: ["LICENSE.TXT"],
}

cc_library_static {
    name: "llvm-project_lib_libclangSupport_a",
    srcs: ["clang/lib/Support/RISCVVIntrinsicUtils.cpp"],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "clang/include",
        "clang/lib/Support",
        "cmake_generated/include",
        "cmake_generated/tools/clang/include",
        "llvm/include",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMSupport_a",
    srcs: [
        "llvm/lib/Support/ABIBreak.cpp",
        "llvm/lib/Support/AMDGPUMetadata.cpp",
        "llvm/lib/Support/APFixedPoint.cpp",
        "llvm/lib/Support/APFloat.cpp",
        "llvm/lib/Support/APInt.cpp",
        "llvm/lib/Support/APSInt.cpp",
        "llvm/lib/Support/ARMAttributeParser.cpp",
        "llvm/lib/Support/ARMBuildAttrs.cpp",
        "llvm/lib/Support/ARMWinEH.cpp",
        "llvm/lib/Support/Allocator.cpp",
        "llvm/lib/Support/Atomic.cpp",
        "llvm/lib/Support/AutoConvert.cpp",
        "llvm/lib/Support/BLAKE3/blake3.c",
        "llvm/lib/Support/BLAKE3/blake3_dispatch.c",
        "llvm/lib/Support/BLAKE3/blake3_neon.c",
        "llvm/lib/Support/BLAKE3/blake3_portable.c",
        "llvm/lib/Support/BalancedPartitioning.cpp",
        "llvm/lib/Support/Base64.cpp",
        "llvm/lib/Support/BinaryStreamError.cpp",
        "llvm/lib/Support/BinaryStreamReader.cpp",
        "llvm/lib/Support/BinaryStreamRef.cpp",
        "llvm/lib/Support/BinaryStreamWriter.cpp",
        "llvm/lib/Support/BlockFrequency.cpp",
        "llvm/lib/Support/BranchProbability.cpp",
        "llvm/lib/Support/BuryPointer.cpp",
        "llvm/lib/Support/COM.cpp",
        "llvm/lib/Support/CRC.cpp",
        "llvm/lib/Support/CSKYAttributeParser.cpp",
        "llvm/lib/Support/CSKYAttributes.cpp",
        "llvm/lib/Support/CachePruning.cpp",
        "llvm/lib/Support/Caching.cpp",
        "llvm/lib/Support/Chrono.cpp",
        "llvm/lib/Support/CodeGenCoverage.cpp",
        "llvm/lib/Support/CommandLine.cpp",
        "llvm/lib/Support/Compression.cpp",
        "llvm/lib/Support/ConvertEBCDIC.cpp",
        "llvm/lib/Support/ConvertUTF.cpp",
        "llvm/lib/Support/ConvertUTFWrapper.cpp",
        "llvm/lib/Support/CrashRecoveryContext.cpp",
        "llvm/lib/Support/DAGDeltaAlgorithm.cpp",
        "llvm/lib/Support/DJB.cpp",
        "llvm/lib/Support/DataExtractor.cpp",
        "llvm/lib/Support/Debug.cpp",
        "llvm/lib/Support/DebugCounter.cpp",
        "llvm/lib/Support/DeltaAlgorithm.cpp",
        "llvm/lib/Support/DeltaTree.cpp",
        "llvm/lib/Support/DivisionByConstantInfo.cpp",
        "llvm/lib/Support/DynamicAPInt.cpp",
        "llvm/lib/Support/DynamicLibrary.cpp",
        "llvm/lib/Support/ELFAttributeParser.cpp",
        "llvm/lib/Support/ELFAttributes.cpp",
        "llvm/lib/Support/Errno.cpp",
        "llvm/lib/Support/Error.cpp",
        "llvm/lib/Support/ErrorHandling.cpp",
        "llvm/lib/Support/ExponentialBackoff.cpp",
        "llvm/lib/Support/ExtensibleRTTI.cpp",
        "llvm/lib/Support/FileCollector.cpp",
        "llvm/lib/Support/FileOutputBuffer.cpp",
        "llvm/lib/Support/FileUtilities.cpp",
        "llvm/lib/Support/FloatingPointMode.cpp",
        "llvm/lib/Support/FoldingSet.cpp",
        "llvm/lib/Support/FormatVariadic.cpp",
        "llvm/lib/Support/FormattedStream.cpp",
        "llvm/lib/Support/GlobPattern.cpp",
        "llvm/lib/Support/GraphWriter.cpp",
        "llvm/lib/Support/HexagonAttributeParser.cpp",
        "llvm/lib/Support/HexagonAttributes.cpp",
        "llvm/lib/Support/InitLLVM.cpp",
        "llvm/lib/Support/InstructionCost.cpp",
        "llvm/lib/Support/IntEqClasses.cpp",
        "llvm/lib/Support/IntervalMap.cpp",
        "llvm/lib/Support/JSON.cpp",
        "llvm/lib/Support/KnownBits.cpp",
        "llvm/lib/Support/LEB128.cpp",
        "llvm/lib/Support/LineIterator.cpp",
        "llvm/lib/Support/Locale.cpp",
        "llvm/lib/Support/LockFileManager.cpp",
        "llvm/lib/Support/MD5.cpp",
        "llvm/lib/Support/MSP430AttributeParser.cpp",
        "llvm/lib/Support/MSP430Attributes.cpp",
        "llvm/lib/Support/ManagedStatic.cpp",
        "llvm/lib/Support/MathExtras.cpp",
        "llvm/lib/Support/MemAlloc.cpp",
        "llvm/lib/Support/Memory.cpp",
        "llvm/lib/Support/MemoryBuffer.cpp",
        "llvm/lib/Support/MemoryBufferRef.cpp",
        "llvm/lib/Support/ModRef.cpp",
        "llvm/lib/Support/NativeFormatting.cpp",
        "llvm/lib/Support/OptimizedStructLayout.cpp",
        "llvm/lib/Support/OptionStrCmp.cpp",
        "llvm/lib/Support/Optional.cpp",
        "llvm/lib/Support/PGOOptions.cpp",
        "llvm/lib/Support/Parallel.cpp",
        "llvm/lib/Support/Path.cpp",
        "llvm/lib/Support/PluginLoader.cpp",
        "llvm/lib/Support/PrettyStackTrace.cpp",
        "llvm/lib/Support/Process.cpp",
        "llvm/lib/Support/Program.cpp",
        "llvm/lib/Support/RISCVAttributeParser.cpp",
        "llvm/lib/Support/RISCVAttributes.cpp",
        "llvm/lib/Support/RISCVISAUtils.cpp",
        "llvm/lib/Support/RWMutex.cpp",
        "llvm/lib/Support/RandomNumberGenerator.cpp",
        "llvm/lib/Support/Regex.cpp",
        "llvm/lib/Support/RewriteBuffer.cpp",
        "llvm/lib/Support/RewriteRope.cpp",
        "llvm/lib/Support/SHA1.cpp",
        "llvm/lib/Support/SHA256.cpp",
        "llvm/lib/Support/ScaledNumber.cpp",
        "llvm/lib/Support/ScopedPrinter.cpp",
        "llvm/lib/Support/Signals.cpp",
        "llvm/lib/Support/Signposts.cpp",
        "llvm/lib/Support/SipHash.cpp",
        "llvm/lib/Support/SlowDynamicAPInt.cpp",
        "llvm/lib/Support/SmallPtrSet.cpp",
        "llvm/lib/Support/SmallVector.cpp",
        "llvm/lib/Support/SourceMgr.cpp",
        "llvm/lib/Support/SpecialCaseList.cpp",
        "llvm/lib/Support/Statistic.cpp",
        "llvm/lib/Support/StringExtras.cpp",
        "llvm/lib/Support/StringMap.cpp",
        "llvm/lib/Support/StringRef.cpp",
        "llvm/lib/Support/StringSaver.cpp",
        "llvm/lib/Support/SuffixTree.cpp",
        "llvm/lib/Support/SuffixTreeNode.cpp",
        "llvm/lib/Support/SystemUtils.cpp",
        "llvm/lib/Support/TarWriter.cpp",
        "llvm/lib/Support/ThreadPool.cpp",
        "llvm/lib/Support/Threading.cpp",
        "llvm/lib/Support/TimeProfiler.cpp",
        "llvm/lib/Support/Timer.cpp",
        "llvm/lib/Support/ToolOutputFile.cpp",
        "llvm/lib/Support/TrieRawHashMap.cpp",
        "llvm/lib/Support/Twine.cpp",
        "llvm/lib/Support/TypeSize.cpp",
        "llvm/lib/Support/Unicode.cpp",
        "llvm/lib/Support/UnicodeCaseFold.cpp",
        "llvm/lib/Support/UnicodeNameToCodepoint.cpp",
        "llvm/lib/Support/UnicodeNameToCodepointGenerated.cpp",
        "llvm/lib/Support/Valgrind.cpp",
        "llvm/lib/Support/VersionTuple.cpp",
        "llvm/lib/Support/VirtualFileSystem.cpp",
        "llvm/lib/Support/Watchdog.cpp",
        "llvm/lib/Support/WithColor.cpp",
        "llvm/lib/Support/YAMLParser.cpp",
        "llvm/lib/Support/YAMLTraits.cpp",
        "llvm/lib/Support/Z3Solver.cpp",
        "llvm/lib/Support/circular_raw_ostream.cpp",
        "llvm/lib/Support/raw_os_ostream.cpp",
        "llvm/lib/Support/raw_ostream.cpp",
        "llvm/lib/Support/raw_socket_stream.cpp",
        "llvm/lib/Support/regcomp.c",
        "llvm/lib/Support/regerror.c",
        "llvm/lib/Support/regexec.c",
        "llvm/lib/Support/regfree.c",
        "llvm/lib/Support/regstrlcpy.c",
        "llvm/lib/Support/xxhash.cpp",
    ],
    cflags: [
        "-DBLAKE3_NO_AVX2",
        "-DBLAKE3_NO_AVX512",
        "-DBLAKE3_NO_SSE2",
        "-DBLAKE3_NO_SSE41",
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    shared_libs: ["libz"],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/Support",
        "llvm/lib/Support/BLAKE3",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMDemangle_a",
    srcs: [
        "llvm/lib/Demangle/DLangDemangle.cpp",
        "llvm/lib/Demangle/Demangle.cpp",
        "llvm/lib/Demangle/ItaniumDemangle.cpp",
        "llvm/lib/Demangle/MicrosoftDemangle.cpp",
        "llvm/lib/Demangle/MicrosoftDemangleNodes.cpp",
        "llvm/lib/Demangle/RustDemangle.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/Demangle",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libclangSerialization_a",
    srcs: [
        "clang/lib/Serialization/ASTCommon.cpp",
        "clang/lib/Serialization/ASTReader.cpp",
        "clang/lib/Serialization/ASTReaderDecl.cpp",
        "clang/lib/Serialization/ASTReaderStmt.cpp",
        "clang/lib/Serialization/ASTWriter.cpp",
        "clang/lib/Serialization/ASTWriterDecl.cpp",
        "clang/lib/Serialization/ASTWriterStmt.cpp",
        "clang/lib/Serialization/GeneratePCH.cpp",
        "clang/lib/Serialization/GlobalModuleIndex.cpp",
        "clang/lib/Serialization/InMemoryModuleCache.cpp",
        "clang/lib/Serialization/ModuleFile.cpp",
        "clang/lib/Serialization/ModuleFileExtension.cpp",
        "clang/lib/Serialization/ModuleManager.cpp",
        "clang/lib/Serialization/ObjectFilePCHContainerReader.cpp",
        "clang/lib/Serialization/PCHContainerOperations.cpp",
        "clang/lib/Serialization/TemplateArgumentHasher.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "clang/include",
        "clang/lib/Serialization",
        "cmake_generated/include",
        "cmake_generated/tools/clang/include",
        "llvm/include",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libclangSema_a",
    srcs: [
        "clang/lib/Sema/AnalysisBasedWarnings.cpp",
        "clang/lib/Sema/CheckExprLifetime.cpp",
        "clang/lib/Sema/CodeCompleteConsumer.cpp",
        "clang/lib/Sema/DeclSpec.cpp",
        "clang/lib/Sema/DelayedDiagnostic.cpp",
        "clang/lib/Sema/HLSLExternalSemaSource.cpp",
        "clang/lib/Sema/IdentifierResolver.cpp",
        "clang/lib/Sema/JumpDiagnostics.cpp",
        "clang/lib/Sema/MultiplexExternalSemaSource.cpp",
        "clang/lib/Sema/ParsedAttr.cpp",
        "clang/lib/Sema/Scope.cpp",
        "clang/lib/Sema/ScopeInfo.cpp",
        "clang/lib/Sema/Sema.cpp",
        "clang/lib/Sema/SemaAMDGPU.cpp",
        "clang/lib/Sema/SemaAPINotes.cpp",
        "clang/lib/Sema/SemaARM.cpp",
        "clang/lib/Sema/SemaAVR.cpp",
        "clang/lib/Sema/SemaAccess.cpp",
        "clang/lib/Sema/SemaAttr.cpp",
        "clang/lib/Sema/SemaAvailability.cpp",
        "clang/lib/Sema/SemaBPF.cpp",
        "clang/lib/Sema/SemaBase.cpp",
        "clang/lib/Sema/SemaBoundsSafety.cpp",
        "clang/lib/Sema/SemaCUDA.cpp",
        "clang/lib/Sema/SemaCXXScopeSpec.cpp",
        "clang/lib/Sema/SemaCast.cpp",
        "clang/lib/Sema/SemaChecking.cpp",
        "clang/lib/Sema/SemaCodeComplete.cpp",
        "clang/lib/Sema/SemaConcept.cpp",
        "clang/lib/Sema/SemaConsumer.cpp",
        "clang/lib/Sema/SemaCoroutine.cpp",
        "clang/lib/Sema/SemaDecl.cpp",
        "clang/lib/Sema/SemaDeclAttr.cpp",
        "clang/lib/Sema/SemaDeclCXX.cpp",
        "clang/lib/Sema/SemaDeclObjC.cpp",
        "clang/lib/Sema/SemaExceptionSpec.cpp",
        "clang/lib/Sema/SemaExpr.cpp",
        "clang/lib/Sema/SemaExprCXX.cpp",
        "clang/lib/Sema/SemaExprMember.cpp",
        "clang/lib/Sema/SemaExprObjC.cpp",
        "clang/lib/Sema/SemaFixItUtils.cpp",
        "clang/lib/Sema/SemaFunctionEffects.cpp",
        "clang/lib/Sema/SemaHLSL.cpp",
        "clang/lib/Sema/SemaHexagon.cpp",
        "clang/lib/Sema/SemaInit.cpp",
        "clang/lib/Sema/SemaLambda.cpp",
        "clang/lib/Sema/SemaLookup.cpp",
        "clang/lib/Sema/SemaLoongArch.cpp",
        "clang/lib/Sema/SemaM68k.cpp",
        "clang/lib/Sema/SemaMIPS.cpp",
        "clang/lib/Sema/SemaMSP430.cpp",
        "clang/lib/Sema/SemaModule.cpp",
        "clang/lib/Sema/SemaNVPTX.cpp",
        "clang/lib/Sema/SemaObjC.cpp",
        "clang/lib/Sema/SemaObjCProperty.cpp",
        "clang/lib/Sema/SemaOpenACC.cpp",
        "clang/lib/Sema/SemaOpenCL.cpp",
        "clang/lib/Sema/SemaOpenMP.cpp",
        "clang/lib/Sema/SemaOverload.cpp",
        "clang/lib/Sema/SemaPPC.cpp",
        "clang/lib/Sema/SemaPseudoObject.cpp",
        "clang/lib/Sema/SemaRISCV.cpp",
        "clang/lib/Sema/SemaSYCL.cpp",
        "clang/lib/Sema/SemaStmt.cpp",
        "clang/lib/Sema/SemaStmtAsm.cpp",
        "clang/lib/Sema/SemaStmtAttr.cpp",
        "clang/lib/Sema/SemaSwift.cpp",
        "clang/lib/Sema/SemaSystemZ.cpp",
        "clang/lib/Sema/SemaTemplate.cpp",
        "clang/lib/Sema/SemaTemplateDeduction.cpp",
        "clang/lib/Sema/SemaTemplateDeductionGuide.cpp",
        "clang/lib/Sema/SemaTemplateInstantiate.cpp",
        "clang/lib/Sema/SemaTemplateInstantiateDecl.cpp",
        "clang/lib/Sema/SemaTemplateVariadic.cpp",
        "clang/lib/Sema/SemaType.cpp",
        "clang/lib/Sema/SemaWasm.cpp",
        "clang/lib/Sema/SemaX86.cpp",
        "clang/lib/Sema/TypeLocBuilder.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "clang/include",
        "clang/lib/Sema",
        "cmake_generated/include",
        "cmake_generated/tools/clang/include",
        "cmake_generated/tools/clang/lib/Sema",
        "llvm/include",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libclangLex_a",
    srcs: [
        "clang/lib/Lex/DependencyDirectivesScanner.cpp",
        "clang/lib/Lex/HeaderMap.cpp",
        "clang/lib/Lex/HeaderSearch.cpp",
        "clang/lib/Lex/InitHeaderSearch.cpp",
        "clang/lib/Lex/Lexer.cpp",
        "clang/lib/Lex/LiteralSupport.cpp",
        "clang/lib/Lex/MacroArgs.cpp",
        "clang/lib/Lex/MacroInfo.cpp",
        "clang/lib/Lex/ModuleMap.cpp",
        "clang/lib/Lex/PPCaching.cpp",
        "clang/lib/Lex/PPCallbacks.cpp",
        "clang/lib/Lex/PPConditionalDirectiveRecord.cpp",
        "clang/lib/Lex/PPDirectives.cpp",
        "clang/lib/Lex/PPExpressions.cpp",
        "clang/lib/Lex/PPLexerChange.cpp",
        "clang/lib/Lex/PPMacroExpansion.cpp",
        "clang/lib/Lex/Pragma.cpp",
        "clang/lib/Lex/PreprocessingRecord.cpp",
        "clang/lib/Lex/Preprocessor.cpp",
        "clang/lib/Lex/PreprocessorLexer.cpp",
        "clang/lib/Lex/ScratchBuffer.cpp",
        "clang/lib/Lex/TokenConcatenation.cpp",
        "clang/lib/Lex/TokenLexer.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "clang/include",
        "clang/lib/Lex",
        "cmake_generated/include",
        "cmake_generated/tools/clang/include",
        "llvm/include",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libclangBasic_a",
    srcs: [
        "clang/lib/Basic/ASTSourceDescriptor.cpp",
        "clang/lib/Basic/Attributes.cpp",
        "clang/lib/Basic/Builtins.cpp",
        "clang/lib/Basic/CLWarnings.cpp",
        "clang/lib/Basic/CharInfo.cpp",
        "clang/lib/Basic/CodeGenOptions.cpp",
        "clang/lib/Basic/Cuda.cpp",
        "clang/lib/Basic/DarwinSDKInfo.cpp",
        "clang/lib/Basic/Diagnostic.cpp",
        "clang/lib/Basic/DiagnosticIDs.cpp",
        "clang/lib/Basic/DiagnosticOptions.cpp",
        "clang/lib/Basic/ExpressionTraits.cpp",
        "clang/lib/Basic/FileEntry.cpp",
        "clang/lib/Basic/FileManager.cpp",
        "clang/lib/Basic/FileSystemStatCache.cpp",
        "clang/lib/Basic/IdentifierTable.cpp",
        "clang/lib/Basic/LangOptions.cpp",
        "clang/lib/Basic/LangStandards.cpp",
        "clang/lib/Basic/MakeSupport.cpp",
        "clang/lib/Basic/Module.cpp",
        "clang/lib/Basic/NoSanitizeList.cpp",
        "clang/lib/Basic/ObjCRuntime.cpp",
        "clang/lib/Basic/OpenCLOptions.cpp",
        "clang/lib/Basic/OpenMPKinds.cpp",
        "clang/lib/Basic/OperatorPrecedence.cpp",
        "clang/lib/Basic/ParsedAttrInfo.cpp",
        "clang/lib/Basic/ProfileList.cpp",
        "clang/lib/Basic/SanitizerSpecialCaseList.cpp",
        "clang/lib/Basic/Sanitizers.cpp",
        "clang/lib/Basic/Sarif.cpp",
        "clang/lib/Basic/SourceLocation.cpp",
        "clang/lib/Basic/SourceManager.cpp",
        "clang/lib/Basic/SourceMgrAdapter.cpp",
        "clang/lib/Basic/Stack.cpp",
        "clang/lib/Basic/StackExhaustionHandler.cpp",
        "clang/lib/Basic/TargetID.cpp",
        "clang/lib/Basic/TargetInfo.cpp",
        "clang/lib/Basic/Targets.cpp",
        "clang/lib/Basic/Targets/AArch64.cpp",
        "clang/lib/Basic/Targets/AMDGPU.cpp",
        "clang/lib/Basic/Targets/ARC.cpp",
        "clang/lib/Basic/Targets/ARM.cpp",
        "clang/lib/Basic/Targets/AVR.cpp",
        "clang/lib/Basic/Targets/BPF.cpp",
        "clang/lib/Basic/Targets/CSKY.cpp",
        "clang/lib/Basic/Targets/DirectX.cpp",
        "clang/lib/Basic/Targets/Hexagon.cpp",
        "clang/lib/Basic/Targets/Lanai.cpp",
        "clang/lib/Basic/Targets/LoongArch.cpp",
        "clang/lib/Basic/Targets/M68k.cpp",
        "clang/lib/Basic/Targets/MSP430.cpp",
        "clang/lib/Basic/Targets/Mips.cpp",
        "clang/lib/Basic/Targets/NVPTX.cpp",
        "clang/lib/Basic/Targets/OSTargets.cpp",
        "clang/lib/Basic/Targets/PNaCl.cpp",
        "clang/lib/Basic/Targets/PPC.cpp",
        "clang/lib/Basic/Targets/RISCV.cpp",
        "clang/lib/Basic/Targets/SPIR.cpp",
        "clang/lib/Basic/Targets/Sparc.cpp",
        "clang/lib/Basic/Targets/SystemZ.cpp",
        "clang/lib/Basic/Targets/TCE.cpp",
        "clang/lib/Basic/Targets/VE.cpp",
        "clang/lib/Basic/Targets/WebAssembly.cpp",
        "clang/lib/Basic/Targets/X86.cpp",
        "clang/lib/Basic/Targets/XCore.cpp",
        "clang/lib/Basic/TokenKinds.cpp",
        "clang/lib/Basic/TypeTraits.cpp",
        "clang/lib/Basic/Version.cpp",
        "clang/lib/Basic/Warnings.cpp",
        "clang/lib/Basic/XRayInstr.cpp",
        "clang/lib/Basic/XRayLists.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "clang/include",
        "clang/lib/Basic",
        "cmake_generated/include",
        "cmake_generated/tools/clang/include",
        "cmake_generated/tools/clang/lib/Basic",
        "llvm/include",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMTransformUtils_a",
    srcs: [
        "llvm/lib/Transforms/Utils/AMDGPUEmitPrintf.cpp",
        "llvm/lib/Transforms/Utils/ASanStackFrameLayout.cpp",
        "llvm/lib/Transforms/Utils/AddDiscriminators.cpp",
        "llvm/lib/Transforms/Utils/AssumeBundleBuilder.cpp",
        "llvm/lib/Transforms/Utils/BasicBlockUtils.cpp",
        "llvm/lib/Transforms/Utils/BreakCriticalEdges.cpp",
        "llvm/lib/Transforms/Utils/BuildLibCalls.cpp",
        "llvm/lib/Transforms/Utils/BypassSlowDivision.cpp",
        "llvm/lib/Transforms/Utils/CallGraphUpdater.cpp",
        "llvm/lib/Transforms/Utils/CallPromotionUtils.cpp",
        "llvm/lib/Transforms/Utils/CanonicalizeAliases.cpp",
        "llvm/lib/Transforms/Utils/CanonicalizeFreezeInLoops.cpp",
        "llvm/lib/Transforms/Utils/CloneFunction.cpp",
        "llvm/lib/Transforms/Utils/CloneModule.cpp",
        "llvm/lib/Transforms/Utils/CodeExtractor.cpp",
        "llvm/lib/Transforms/Utils/CodeLayout.cpp",
        "llvm/lib/Transforms/Utils/CodeMoverUtils.cpp",
        "llvm/lib/Transforms/Utils/ControlFlowUtils.cpp",
        "llvm/lib/Transforms/Utils/CountVisits.cpp",
        "llvm/lib/Transforms/Utils/CtorUtils.cpp",
        "llvm/lib/Transforms/Utils/DXILUpgrade.cpp",
        "llvm/lib/Transforms/Utils/Debugify.cpp",
        "llvm/lib/Transforms/Utils/DemoteRegToStack.cpp",
        "llvm/lib/Transforms/Utils/EntryExitInstrumenter.cpp",
        "llvm/lib/Transforms/Utils/EscapeEnumerator.cpp",
        "llvm/lib/Transforms/Utils/Evaluator.cpp",
        "llvm/lib/Transforms/Utils/FixIrreducible.cpp",
        "llvm/lib/Transforms/Utils/FlattenCFG.cpp",
        "llvm/lib/Transforms/Utils/FunctionComparator.cpp",
        "llvm/lib/Transforms/Utils/FunctionImportUtils.cpp",
        "llvm/lib/Transforms/Utils/GlobalStatus.cpp",
        "llvm/lib/Transforms/Utils/GuardUtils.cpp",
        "llvm/lib/Transforms/Utils/HelloWorld.cpp",
        "llvm/lib/Transforms/Utils/IRNormalizer.cpp",
        "llvm/lib/Transforms/Utils/InjectTLIMappings.cpp",
        "llvm/lib/Transforms/Utils/InlineFunction.cpp",
        "llvm/lib/Transforms/Utils/InstructionNamer.cpp",
        "llvm/lib/Transforms/Utils/Instrumentation.cpp",
        "llvm/lib/Transforms/Utils/IntegerDivision.cpp",
        "llvm/lib/Transforms/Utils/LCSSA.cpp",
        "llvm/lib/Transforms/Utils/LibCallsShrinkWrap.cpp",
        "llvm/lib/Transforms/Utils/Local.cpp",
        "llvm/lib/Transforms/Utils/LoopConstrainer.cpp",
        "llvm/lib/Transforms/Utils/LoopPeel.cpp",
        "llvm/lib/Transforms/Utils/LoopRotationUtils.cpp",
        "llvm/lib/Transforms/Utils/LoopSimplify.cpp",
        "llvm/lib/Transforms/Utils/LoopUnroll.cpp",
        "llvm/lib/Transforms/Utils/LoopUnrollAndJam.cpp",
        "llvm/lib/Transforms/Utils/LoopUnrollRuntime.cpp",
        "llvm/lib/Transforms/Utils/LoopUtils.cpp",
        "llvm/lib/Transforms/Utils/LoopVersioning.cpp",
        "llvm/lib/Transforms/Utils/LowerAtomic.cpp",
        "llvm/lib/Transforms/Utils/LowerGlobalDtors.cpp",
        "llvm/lib/Transforms/Utils/LowerIFunc.cpp",
        "llvm/lib/Transforms/Utils/LowerInvoke.cpp",
        "llvm/lib/Transforms/Utils/LowerMemIntrinsics.cpp",
        "llvm/lib/Transforms/Utils/LowerSwitch.cpp",
        "llvm/lib/Transforms/Utils/MatrixUtils.cpp",
        "llvm/lib/Transforms/Utils/Mem2Reg.cpp",
        "llvm/lib/Transforms/Utils/MemoryOpRemark.cpp",
        "llvm/lib/Transforms/Utils/MemoryTaggingSupport.cpp",
        "llvm/lib/Transforms/Utils/MetaRenamer.cpp",
        "llvm/lib/Transforms/Utils/MisExpect.cpp",
        "llvm/lib/Transforms/Utils/ModuleUtils.cpp",
        "llvm/lib/Transforms/Utils/MoveAutoInit.cpp",
        "llvm/lib/Transforms/Utils/NameAnonGlobals.cpp",
        "llvm/lib/Transforms/Utils/PredicateInfo.cpp",
        "llvm/lib/Transforms/Utils/PromoteMemoryToRegister.cpp",
        "llvm/lib/Transforms/Utils/RelLookupTableConverter.cpp",
        "llvm/lib/Transforms/Utils/SCCPSolver.cpp",
        "llvm/lib/Transforms/Utils/SSAUpdater.cpp",
        "llvm/lib/Transforms/Utils/SSAUpdaterBulk.cpp",
        "llvm/lib/Transforms/Utils/SampleProfileInference.cpp",
        "llvm/lib/Transforms/Utils/SampleProfileLoaderBaseUtil.cpp",
        "llvm/lib/Transforms/Utils/SanitizerStats.cpp",
        "llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp",
        "llvm/lib/Transforms/Utils/SimplifyCFG.cpp",
        "llvm/lib/Transforms/Utils/SimplifyIndVar.cpp",
        "llvm/lib/Transforms/Utils/SimplifyLibCalls.cpp",
        "llvm/lib/Transforms/Utils/SizeOpts.cpp",
        "llvm/lib/Transforms/Utils/SplitModule.cpp",
        "llvm/lib/Transforms/Utils/StripGCRelocates.cpp",
        "llvm/lib/Transforms/Utils/StripNonLineTableDebugInfo.cpp",
        "llvm/lib/Transforms/Utils/SymbolRewriter.cpp",
        "llvm/lib/Transforms/Utils/UnifyFunctionExitNodes.cpp",
        "llvm/lib/Transforms/Utils/UnifyLoopExits.cpp",
        "llvm/lib/Transforms/Utils/Utils.cpp",
        "llvm/lib/Transforms/Utils/VNCoercion.cpp",
        "llvm/lib/Transforms/Utils/ValueMapper.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/Transforms/Utils",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMTextAPI_a",
    srcs: [
        "llvm/lib/TextAPI/Architecture.cpp",
        "llvm/lib/TextAPI/ArchitectureSet.cpp",
        "llvm/lib/TextAPI/InterfaceFile.cpp",
        "llvm/lib/TextAPI/PackedVersion.cpp",
        "llvm/lib/TextAPI/Platform.cpp",
        "llvm/lib/TextAPI/RecordVisitor.cpp",
        "llvm/lib/TextAPI/RecordsSlice.cpp",
        "llvm/lib/TextAPI/Symbol.cpp",
        "llvm/lib/TextAPI/SymbolSet.cpp",
        "llvm/lib/TextAPI/Target.cpp",
        "llvm/lib/TextAPI/TextAPIError.cpp",
        "llvm/lib/TextAPI/TextStub.cpp",
        "llvm/lib/TextAPI/TextStubCommon.cpp",
        "llvm/lib/TextAPI/TextStubV5.cpp",
        "llvm/lib/TextAPI/Utils.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/TextAPI",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMTargetParser_a",
    srcs: [
        "llvm/lib/TargetParser/AArch64TargetParser.cpp",
        "llvm/lib/TargetParser/ARMTargetParser.cpp",
        "llvm/lib/TargetParser/ARMTargetParserCommon.cpp",
        "llvm/lib/TargetParser/CSKYTargetParser.cpp",
        "llvm/lib/TargetParser/Host.cpp",
        "llvm/lib/TargetParser/LoongArchTargetParser.cpp",
        "llvm/lib/TargetParser/PPCTargetParser.cpp",
        "llvm/lib/TargetParser/RISCVISAInfo.cpp",
        "llvm/lib/TargetParser/RISCVTargetParser.cpp",
        "llvm/lib/TargetParser/SubtargetFeature.cpp",
        "llvm/lib/TargetParser/TargetParser.cpp",
        "llvm/lib/TargetParser/Triple.cpp",
        "llvm/lib/TargetParser/X86TargetParser.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/TargetParser",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMBinaryFormat_a",
    srcs: [
        "llvm/lib/BinaryFormat/AMDGPUMetadataVerifier.cpp",
        "llvm/lib/BinaryFormat/COFF.cpp",
        "llvm/lib/BinaryFormat/DXContainer.cpp",
        "llvm/lib/BinaryFormat/Dwarf.cpp",
        "llvm/lib/BinaryFormat/ELF.cpp",
        "llvm/lib/BinaryFormat/MachO.cpp",
        "llvm/lib/BinaryFormat/Magic.cpp",
        "llvm/lib/BinaryFormat/Minidump.cpp",
        "llvm/lib/BinaryFormat/MsgPackDocument.cpp",
        "llvm/lib/BinaryFormat/MsgPackDocumentYAML.cpp",
        "llvm/lib/BinaryFormat/MsgPackReader.cpp",
        "llvm/lib/BinaryFormat/MsgPackWriter.cpp",
        "llvm/lib/BinaryFormat/Wasm.cpp",
        "llvm/lib/BinaryFormat/XCOFF.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/BinaryFormat",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMSymbolize_a",
    srcs: [
        "llvm/lib/DebugInfo/Symbolize/DIPrinter.cpp",
        "llvm/lib/DebugInfo/Symbolize/Markup.cpp",
        "llvm/lib/DebugInfo/Symbolize/MarkupFilter.cpp",
        "llvm/lib/DebugInfo/Symbolize/SymbolizableObjectFile.cpp",
        "llvm/lib/DebugInfo/Symbolize/Symbolize.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/DebugInfo/Symbolize",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMRemarks_a",
    srcs: [
        "llvm/lib/Remarks/BitstreamRemarkParser.cpp",
        "llvm/lib/Remarks/BitstreamRemarkSerializer.cpp",
        "llvm/lib/Remarks/Remark.cpp",
        "llvm/lib/Remarks/RemarkFormat.cpp",
        "llvm/lib/Remarks/RemarkLinker.cpp",
        "llvm/lib/Remarks/RemarkParser.cpp",
        "llvm/lib/Remarks/RemarkSerializer.cpp",
        "llvm/lib/Remarks/RemarkStreamer.cpp",
        "llvm/lib/Remarks/RemarkStringTable.cpp",
        "llvm/lib/Remarks/YAMLRemarkParser.cpp",
        "llvm/lib/Remarks/YAMLRemarkSerializer.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/Remarks",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMBitstreamReader_a",
    srcs: ["llvm/lib/Bitstream/Reader/BitstreamReader.cpp"],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/Bitstream/Reader",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMObject_a",
    srcs: [
        "llvm/lib/Object/Archive.cpp",
        "llvm/lib/Object/ArchiveWriter.cpp",
        "llvm/lib/Object/Binary.cpp",
        "llvm/lib/Object/BuildID.cpp",
        "llvm/lib/Object/COFFImportFile.cpp",
        "llvm/lib/Object/COFFModuleDefinition.cpp",
        "llvm/lib/Object/COFFObjectFile.cpp",
        "llvm/lib/Object/DXContainer.cpp",
        "llvm/lib/Object/Decompressor.cpp",
        "llvm/lib/Object/ELF.cpp",
        "llvm/lib/Object/ELFObjectFile.cpp",
        "llvm/lib/Object/Error.cpp",
        "llvm/lib/Object/FaultMapParser.cpp",
        "llvm/lib/Object/GOFFObjectFile.cpp",
        "llvm/lib/Object/IRObjectFile.cpp",
        "llvm/lib/Object/IRSymtab.cpp",
        "llvm/lib/Object/MachOObjectFile.cpp",
        "llvm/lib/Object/MachOUniversal.cpp",
        "llvm/lib/Object/MachOUniversalWriter.cpp",
        "llvm/lib/Object/Minidump.cpp",
        "llvm/lib/Object/ModuleSymbolTable.cpp",
        "llvm/lib/Object/Object.cpp",
        "llvm/lib/Object/ObjectFile.cpp",
        "llvm/lib/Object/OffloadBinary.cpp",
        "llvm/lib/Object/RecordStreamer.cpp",
        "llvm/lib/Object/RelocationResolver.cpp",
        "llvm/lib/Object/SymbolSize.cpp",
        "llvm/lib/Object/SymbolicFile.cpp",
        "llvm/lib/Object/TapiFile.cpp",
        "llvm/lib/Object/TapiUniversal.cpp",
        "llvm/lib/Object/WasmObjectFile.cpp",
        "llvm/lib/Object/WindowsMachineFlag.cpp",
        "llvm/lib/Object/WindowsResource.cpp",
        "llvm/lib/Object/XCOFFObjectFile.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/Object",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMMCParser_a",
    srcs: [
        "llvm/lib/MC/MCParser/AsmLexer.cpp",
        "llvm/lib/MC/MCParser/AsmParser.cpp",
        "llvm/lib/MC/MCParser/COFFAsmParser.cpp",
        "llvm/lib/MC/MCParser/COFFMasmParser.cpp",
        "llvm/lib/MC/MCParser/DarwinAsmParser.cpp",
        "llvm/lib/MC/MCParser/ELFAsmParser.cpp",
        "llvm/lib/MC/MCParser/GOFFAsmParser.cpp",
        "llvm/lib/MC/MCParser/MCAsmLexer.cpp",
        "llvm/lib/MC/MCParser/MCAsmParser.cpp",
        "llvm/lib/MC/MCParser/MCAsmParserExtension.cpp",
        "llvm/lib/MC/MCParser/MCTargetAsmParser.cpp",
        "llvm/lib/MC/MCParser/MasmParser.cpp",
        "llvm/lib/MC/MCParser/WasmAsmParser.cpp",
        "llvm/lib/MC/MCParser/XCOFFAsmParser.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/MC/MCParser",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMMC_a",
    srcs: [
        "llvm/lib/MC/ConstantPools.cpp",
        "llvm/lib/MC/DXContainerPSVInfo.cpp",
        "llvm/lib/MC/ELFObjectWriter.cpp",
        "llvm/lib/MC/GOFFObjectWriter.cpp",
        "llvm/lib/MC/MCAsmBackend.cpp",
        "llvm/lib/MC/MCAsmInfo.cpp",
        "llvm/lib/MC/MCAsmInfoCOFF.cpp",
        "llvm/lib/MC/MCAsmInfoDarwin.cpp",
        "llvm/lib/MC/MCAsmInfoELF.cpp",
        "llvm/lib/MC/MCAsmInfoGOFF.cpp",
        "llvm/lib/MC/MCAsmInfoWasm.cpp",
        "llvm/lib/MC/MCAsmInfoXCOFF.cpp",
        "llvm/lib/MC/MCAsmMacro.cpp",
        "llvm/lib/MC/MCAsmStreamer.cpp",
        "llvm/lib/MC/MCAssembler.cpp",
        "llvm/lib/MC/MCCodeEmitter.cpp",
        "llvm/lib/MC/MCCodeView.cpp",
        "llvm/lib/MC/MCContext.cpp",
        "llvm/lib/MC/MCDXContainerStreamer.cpp",
        "llvm/lib/MC/MCDXContainerWriter.cpp",
        "llvm/lib/MC/MCDwarf.cpp",
        "llvm/lib/MC/MCELFObjectTargetWriter.cpp",
        "llvm/lib/MC/MCELFStreamer.cpp",
        "llvm/lib/MC/MCExpr.cpp",
        "llvm/lib/MC/MCFragment.cpp",
        "llvm/lib/MC/MCGOFFStreamer.cpp",
        "llvm/lib/MC/MCInst.cpp",
        "llvm/lib/MC/MCInstPrinter.cpp",
        "llvm/lib/MC/MCInstrAnalysis.cpp",
        "llvm/lib/MC/MCInstrDesc.cpp",
        "llvm/lib/MC/MCInstrInfo.cpp",
        "llvm/lib/MC/MCLabel.cpp",
        "llvm/lib/MC/MCLinkerOptimizationHint.cpp",
        "llvm/lib/MC/MCMachOStreamer.cpp",
        "llvm/lib/MC/MCMachObjectTargetWriter.cpp",
        "llvm/lib/MC/MCNullStreamer.cpp",
        "llvm/lib/MC/MCObjectFileInfo.cpp",
        "llvm/lib/MC/MCObjectStreamer.cpp",
        "llvm/lib/MC/MCObjectWriter.cpp",
        "llvm/lib/MC/MCPseudoProbe.cpp",
        "llvm/lib/MC/MCRegisterInfo.cpp",
        "llvm/lib/MC/MCSPIRVStreamer.cpp",
        "llvm/lib/MC/MCSchedule.cpp",
        "llvm/lib/MC/MCSection.cpp",
        "llvm/lib/MC/MCSectionCOFF.cpp",
        "llvm/lib/MC/MCSectionDXContainer.cpp",
        "llvm/lib/MC/MCSectionELF.cpp",
        "llvm/lib/MC/MCSectionMachO.cpp",
        "llvm/lib/MC/MCSectionWasm.cpp",
        "llvm/lib/MC/MCSectionXCOFF.cpp",
        "llvm/lib/MC/MCStreamer.cpp",
        "llvm/lib/MC/MCSubtargetInfo.cpp",
        "llvm/lib/MC/MCSymbol.cpp",
        "llvm/lib/MC/MCSymbolELF.cpp",
        "llvm/lib/MC/MCSymbolXCOFF.cpp",
        "llvm/lib/MC/MCTargetOptions.cpp",
        "llvm/lib/MC/MCTargetOptionsCommandFlags.cpp",
        "llvm/lib/MC/MCValue.cpp",
        "llvm/lib/MC/MCWasmObjectTargetWriter.cpp",
        "llvm/lib/MC/MCWasmStreamer.cpp",
        "llvm/lib/MC/MCWin64EH.cpp",
        "llvm/lib/MC/MCWinCOFFStreamer.cpp",
        "llvm/lib/MC/MCWinEH.cpp",
        "llvm/lib/MC/MCXCOFFObjectTargetWriter.cpp",
        "llvm/lib/MC/MCXCOFFStreamer.cpp",
        "llvm/lib/MC/MachObjectWriter.cpp",
        "llvm/lib/MC/SPIRVObjectWriter.cpp",
        "llvm/lib/MC/StringTableBuilder.cpp",
        "llvm/lib/MC/TargetRegistry.cpp",
        "llvm/lib/MC/WasmObjectWriter.cpp",
        "llvm/lib/MC/WinCOFFObjectWriter.cpp",
        "llvm/lib/MC/XCOFFObjectWriter.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/MC",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMIRReader_a",
    srcs: ["llvm/lib/IRReader/IRReader.cpp"],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/IRReader",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMCore_a",
    srcs: [
        "llvm/lib/IR/AbstractCallSite.cpp",
        "llvm/lib/IR/AsmWriter.cpp",
        "llvm/lib/IR/Assumptions.cpp",
        "llvm/lib/IR/Attributes.cpp",
        "llvm/lib/IR/AutoUpgrade.cpp",
        "llvm/lib/IR/BasicBlock.cpp",
        "llvm/lib/IR/BuiltinGCs.cpp",
        "llvm/lib/IR/Comdat.cpp",
        "llvm/lib/IR/ConstantFPRange.cpp",
        "llvm/lib/IR/ConstantFold.cpp",
        "llvm/lib/IR/ConstantRange.cpp",
        "llvm/lib/IR/ConstantRangeList.cpp",
        "llvm/lib/IR/Constants.cpp",
        "llvm/lib/IR/ConvergenceVerifier.cpp",
        "llvm/lib/IR/Core.cpp",
        "llvm/lib/IR/CycleInfo.cpp",
        "llvm/lib/IR/DIBuilder.cpp",
        "llvm/lib/IR/DIExpressionOptimizer.cpp",
        "llvm/lib/IR/DataLayout.cpp",
        "llvm/lib/IR/DebugInfo.cpp",
        "llvm/lib/IR/DebugInfoMetadata.cpp",
        "llvm/lib/IR/DebugLoc.cpp",
        "llvm/lib/IR/DebugProgramInstruction.cpp",
        "llvm/lib/IR/DiagnosticHandler.cpp",
        "llvm/lib/IR/DiagnosticInfo.cpp",
        "llvm/lib/IR/DiagnosticPrinter.cpp",
        "llvm/lib/IR/Dominators.cpp",
        "llvm/lib/IR/EHPersonalities.cpp",
        "llvm/lib/IR/FPEnv.cpp",
        "llvm/lib/IR/Function.cpp",
        "llvm/lib/IR/GCStrategy.cpp",
        "llvm/lib/IR/GVMaterializer.cpp",
        "llvm/lib/IR/Globals.cpp",
        "llvm/lib/IR/IRBuilder.cpp",
        "llvm/lib/IR/IRPrintingPasses.cpp",
        "llvm/lib/IR/InlineAsm.cpp",
        "llvm/lib/IR/Instruction.cpp",
        "llvm/lib/IR/Instructions.cpp",
        "llvm/lib/IR/IntrinsicInst.cpp",
        "llvm/lib/IR/Intrinsics.cpp",
        "llvm/lib/IR/LLVMContext.cpp",
        "llvm/lib/IR/LLVMContextImpl.cpp",
        "llvm/lib/IR/LLVMRemarkStreamer.cpp",
        "llvm/lib/IR/LegacyPassManager.cpp",
        "llvm/lib/IR/MDBuilder.cpp",
        "llvm/lib/IR/Mangler.cpp",
        "llvm/lib/IR/MemoryModelRelaxationAnnotations.cpp",
        "llvm/lib/IR/Metadata.cpp",
        "llvm/lib/IR/Module.cpp",
        "llvm/lib/IR/ModuleSummaryIndex.cpp",
        "llvm/lib/IR/Operator.cpp",
        "llvm/lib/IR/OptBisect.cpp",
        "llvm/lib/IR/Pass.cpp",
        "llvm/lib/IR/PassInstrumentation.cpp",
        "llvm/lib/IR/PassManager.cpp",
        "llvm/lib/IR/PassRegistry.cpp",
        "llvm/lib/IR/PassTimingInfo.cpp",
        "llvm/lib/IR/PrintPasses.cpp",
        "llvm/lib/IR/ProfDataUtils.cpp",
        "llvm/lib/IR/ProfileSummary.cpp",
        "llvm/lib/IR/PseudoProbe.cpp",
        "llvm/lib/IR/ReplaceConstant.cpp",
        "llvm/lib/IR/RuntimeLibcalls.cpp",
        "llvm/lib/IR/SSAContext.cpp",
        "llvm/lib/IR/SafepointIRVerifier.cpp",
        "llvm/lib/IR/Statepoint.cpp",
        "llvm/lib/IR/StructuralHash.cpp",
        "llvm/lib/IR/Type.cpp",
        "llvm/lib/IR/TypeFinder.cpp",
        "llvm/lib/IR/TypedPointerType.cpp",
        "llvm/lib/IR/Use.cpp",
        "llvm/lib/IR/User.cpp",
        "llvm/lib/IR/VFABIDemangler.cpp",
        "llvm/lib/IR/Value.cpp",
        "llvm/lib/IR/ValueSymbolTable.cpp",
        "llvm/lib/IR/VectorBuilder.cpp",
        "llvm/lib/IR/Verifier.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/IR",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMBitReader_a",
    srcs: [
        "llvm/lib/Bitcode/Reader/BitReader.cpp",
        "llvm/lib/Bitcode/Reader/BitcodeAnalyzer.cpp",
        "llvm/lib/Bitcode/Reader/BitcodeReader.cpp",
        "llvm/lib/Bitcode/Reader/MetadataLoader.cpp",
        "llvm/lib/Bitcode/Reader/ValueList.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/Bitcode/Reader",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMAsmParser_a",
    srcs: [
        "llvm/lib/AsmParser/LLLexer.cpp",
        "llvm/lib/AsmParser/LLParser.cpp",
        "llvm/lib/AsmParser/Parser.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/AsmParser",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMDebugInfoPDB_a",
    srcs: [
        "llvm/lib/DebugInfo/PDB/GenericError.cpp",
        "llvm/lib/DebugInfo/PDB/IPDBSourceFile.cpp",
        "llvm/lib/DebugInfo/PDB/Native/DbiModuleDescriptor.cpp",
        "llvm/lib/DebugInfo/PDB/Native/DbiModuleDescriptorBuilder.cpp",
        "llvm/lib/DebugInfo/PDB/Native/DbiModuleList.cpp",
        "llvm/lib/DebugInfo/PDB/Native/DbiStream.cpp",
        "llvm/lib/DebugInfo/PDB/Native/DbiStreamBuilder.cpp",
        "llvm/lib/DebugInfo/PDB/Native/EnumTables.cpp",
        "llvm/lib/DebugInfo/PDB/Native/FormatUtil.cpp",
        "llvm/lib/DebugInfo/PDB/Native/GSIStreamBuilder.cpp",
        "llvm/lib/DebugInfo/PDB/Native/GlobalsStream.cpp",
        "llvm/lib/DebugInfo/PDB/Native/Hash.cpp",
        "llvm/lib/DebugInfo/PDB/Native/HashTable.cpp",
        "llvm/lib/DebugInfo/PDB/Native/InfoStream.cpp",
        "llvm/lib/DebugInfo/PDB/Native/InfoStreamBuilder.cpp",
        "llvm/lib/DebugInfo/PDB/Native/InjectedSourceStream.cpp",
        "llvm/lib/DebugInfo/PDB/Native/InputFile.cpp",
        "llvm/lib/DebugInfo/PDB/Native/LinePrinter.cpp",
        "llvm/lib/DebugInfo/PDB/Native/ModuleDebugStream.cpp",
        "llvm/lib/DebugInfo/PDB/Native/NamedStreamMap.cpp",
        "llvm/lib/DebugInfo/PDB/Native/NativeCompilandSymbol.cpp",
        "llvm/lib/DebugInfo/PDB/Native/NativeEnumGlobals.cpp",
        "llvm/lib/DebugInfo/PDB/Native/NativeEnumInjectedSources.cpp",
        "llvm/lib/DebugInfo/PDB/Native/NativeEnumLineNumbers.cpp",
        "llvm/lib/DebugInfo/PDB/Native/NativeEnumModules.cpp",
        "llvm/lib/DebugInfo/PDB/Native/NativeEnumSymbols.cpp",
        "llvm/lib/DebugInfo/PDB/Native/NativeEnumTypes.cpp",
        "llvm/lib/DebugInfo/PDB/Native/NativeExeSymbol.cpp",
        "llvm/lib/DebugInfo/PDB/Native/NativeFunctionSymbol.cpp",
        "llvm/lib/DebugInfo/PDB/Native/NativeInlineSiteSymbol.cpp",
        "llvm/lib/DebugInfo/PDB/Native/NativeLineNumber.cpp",
        "llvm/lib/DebugInfo/PDB/Native/NativePublicSymbol.cpp",
        "llvm/lib/DebugInfo/PDB/Native/NativeRawSymbol.cpp",
        "llvm/lib/DebugInfo/PDB/Native/NativeSession.cpp",
        "llvm/lib/DebugInfo/PDB/Native/NativeSourceFile.cpp",
        "llvm/lib/DebugInfo/PDB/Native/NativeSymbolEnumerator.cpp",
        "llvm/lib/DebugInfo/PDB/Native/NativeTypeArray.cpp",
        "llvm/lib/DebugInfo/PDB/Native/NativeTypeBuiltin.cpp",
        "llvm/lib/DebugInfo/PDB/Native/NativeTypeEnum.cpp",
        "llvm/lib/DebugInfo/PDB/Native/NativeTypeFunctionSig.cpp",
        "llvm/lib/DebugInfo/PDB/Native/NativeTypePointer.cpp",
        "llvm/lib/DebugInfo/PDB/Native/NativeTypeTypedef.cpp",
        "llvm/lib/DebugInfo/PDB/Native/NativeTypeUDT.cpp",
        "llvm/lib/DebugInfo/PDB/Native/NativeTypeVTShape.cpp",
        "llvm/lib/DebugInfo/PDB/Native/PDBFile.cpp",
        "llvm/lib/DebugInfo/PDB/Native/PDBFileBuilder.cpp",
        "llvm/lib/DebugInfo/PDB/Native/PDBStringTable.cpp",
        "llvm/lib/DebugInfo/PDB/Native/PDBStringTableBuilder.cpp",
        "llvm/lib/DebugInfo/PDB/Native/PublicsStream.cpp",
        "llvm/lib/DebugInfo/PDB/Native/RawError.cpp",
        "llvm/lib/DebugInfo/PDB/Native/SymbolCache.cpp",
        "llvm/lib/DebugInfo/PDB/Native/SymbolStream.cpp",
        "llvm/lib/DebugInfo/PDB/Native/TpiHashing.cpp",
        "llvm/lib/DebugInfo/PDB/Native/TpiStream.cpp",
        "llvm/lib/DebugInfo/PDB/Native/TpiStreamBuilder.cpp",
        "llvm/lib/DebugInfo/PDB/PDB.cpp",
        "llvm/lib/DebugInfo/PDB/PDBContext.cpp",
        "llvm/lib/DebugInfo/PDB/PDBExtras.cpp",
        "llvm/lib/DebugInfo/PDB/PDBInterfaceAnchors.cpp",
        "llvm/lib/DebugInfo/PDB/PDBSymDumper.cpp",
        "llvm/lib/DebugInfo/PDB/PDBSymbol.cpp",
        "llvm/lib/DebugInfo/PDB/PDBSymbolAnnotation.cpp",
        "llvm/lib/DebugInfo/PDB/PDBSymbolBlock.cpp",
        "llvm/lib/DebugInfo/PDB/PDBSymbolCompiland.cpp",
        "llvm/lib/DebugInfo/PDB/PDBSymbolCompilandDetails.cpp",
        "llvm/lib/DebugInfo/PDB/PDBSymbolCompilandEnv.cpp",
        "llvm/lib/DebugInfo/PDB/PDBSymbolCustom.cpp",
        "llvm/lib/DebugInfo/PDB/PDBSymbolData.cpp",
        "llvm/lib/DebugInfo/PDB/PDBSymbolExe.cpp",
        "llvm/lib/DebugInfo/PDB/PDBSymbolFunc.cpp",
        "llvm/lib/DebugInfo/PDB/PDBSymbolFuncDebugEnd.cpp",
        "llvm/lib/DebugInfo/PDB/PDBSymbolFuncDebugStart.cpp",
        "llvm/lib/DebugInfo/PDB/PDBSymbolLabel.cpp",
        "llvm/lib/DebugInfo/PDB/PDBSymbolPublicSymbol.cpp",
        "llvm/lib/DebugInfo/PDB/PDBSymbolThunk.cpp",
        "llvm/lib/DebugInfo/PDB/PDBSymbolTypeArray.cpp",
        "llvm/lib/DebugInfo/PDB/PDBSymbolTypeBaseClass.cpp",
        "llvm/lib/DebugInfo/PDB/PDBSymbolTypeBuiltin.cpp",
        "llvm/lib/DebugInfo/PDB/PDBSymbolTypeCustom.cpp",
        "llvm/lib/DebugInfo/PDB/PDBSymbolTypeDimension.cpp",
        "llvm/lib/DebugInfo/PDB/PDBSymbolTypeEnum.cpp",
        "llvm/lib/DebugInfo/PDB/PDBSymbolTypeFriend.cpp",
        "llvm/lib/DebugInfo/PDB/PDBSymbolTypeFunctionArg.cpp",
        "llvm/lib/DebugInfo/PDB/PDBSymbolTypeFunctionSig.cpp",
        "llvm/lib/DebugInfo/PDB/PDBSymbolTypeManaged.cpp",
        "llvm/lib/DebugInfo/PDB/PDBSymbolTypePointer.cpp",
        "llvm/lib/DebugInfo/PDB/PDBSymbolTypeTypedef.cpp",
        "llvm/lib/DebugInfo/PDB/PDBSymbolTypeUDT.cpp",
        "llvm/lib/DebugInfo/PDB/PDBSymbolTypeVTable.cpp",
        "llvm/lib/DebugInfo/PDB/PDBSymbolTypeVTableShape.cpp",
        "llvm/lib/DebugInfo/PDB/PDBSymbolUnknown.cpp",
        "llvm/lib/DebugInfo/PDB/PDBSymbolUsingNamespace.cpp",
        "llvm/lib/DebugInfo/PDB/UDTLayout.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/DebugInfo/PDB",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMDebugInfoMSF_a",
    srcs: [
        "llvm/lib/DebugInfo/MSF/MSFBuilder.cpp",
        "llvm/lib/DebugInfo/MSF/MSFCommon.cpp",
        "llvm/lib/DebugInfo/MSF/MSFError.cpp",
        "llvm/lib/DebugInfo/MSF/MappedBlockStream.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/DebugInfo/MSF",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMDebugInfoCodeView_a",
    srcs: [
        "llvm/lib/DebugInfo/CodeView/AppendingTypeTableBuilder.cpp",
        "llvm/lib/DebugInfo/CodeView/CVSymbolVisitor.cpp",
        "llvm/lib/DebugInfo/CodeView/CVTypeVisitor.cpp",
        "llvm/lib/DebugInfo/CodeView/CodeViewError.cpp",
        "llvm/lib/DebugInfo/CodeView/CodeViewRecordIO.cpp",
        "llvm/lib/DebugInfo/CodeView/ContinuationRecordBuilder.cpp",
        "llvm/lib/DebugInfo/CodeView/DebugChecksumsSubsection.cpp",
        "llvm/lib/DebugInfo/CodeView/DebugCrossExSubsection.cpp",
        "llvm/lib/DebugInfo/CodeView/DebugCrossImpSubsection.cpp",
        "llvm/lib/DebugInfo/CodeView/DebugFrameDataSubsection.cpp",
        "llvm/lib/DebugInfo/CodeView/DebugInlineeLinesSubsection.cpp",
        "llvm/lib/DebugInfo/CodeView/DebugLinesSubsection.cpp",
        "llvm/lib/DebugInfo/CodeView/DebugStringTableSubsection.cpp",
        "llvm/lib/DebugInfo/CodeView/DebugSubsection.cpp",
        "llvm/lib/DebugInfo/CodeView/DebugSubsectionRecord.cpp",
        "llvm/lib/DebugInfo/CodeView/DebugSubsectionVisitor.cpp",
        "llvm/lib/DebugInfo/CodeView/DebugSymbolRVASubsection.cpp",
        "llvm/lib/DebugInfo/CodeView/DebugSymbolsSubsection.cpp",
        "llvm/lib/DebugInfo/CodeView/EnumTables.cpp",
        "llvm/lib/DebugInfo/CodeView/Formatters.cpp",
        "llvm/lib/DebugInfo/CodeView/GlobalTypeTableBuilder.cpp",
        "llvm/lib/DebugInfo/CodeView/LazyRandomTypeCollection.cpp",
        "llvm/lib/DebugInfo/CodeView/Line.cpp",
        "llvm/lib/DebugInfo/CodeView/MergingTypeTableBuilder.cpp",
        "llvm/lib/DebugInfo/CodeView/RecordName.cpp",
        "llvm/lib/DebugInfo/CodeView/RecordSerialization.cpp",
        "llvm/lib/DebugInfo/CodeView/SimpleTypeSerializer.cpp",
        "llvm/lib/DebugInfo/CodeView/StringsAndChecksums.cpp",
        "llvm/lib/DebugInfo/CodeView/SymbolDumper.cpp",
        "llvm/lib/DebugInfo/CodeView/SymbolRecordHelpers.cpp",
        "llvm/lib/DebugInfo/CodeView/SymbolRecordMapping.cpp",
        "llvm/lib/DebugInfo/CodeView/SymbolSerializer.cpp",
        "llvm/lib/DebugInfo/CodeView/TypeDumpVisitor.cpp",
        "llvm/lib/DebugInfo/CodeView/TypeHashing.cpp",
        "llvm/lib/DebugInfo/CodeView/TypeIndex.cpp",
        "llvm/lib/DebugInfo/CodeView/TypeIndexDiscovery.cpp",
        "llvm/lib/DebugInfo/CodeView/TypeRecordHelpers.cpp",
        "llvm/lib/DebugInfo/CodeView/TypeRecordMapping.cpp",
        "llvm/lib/DebugInfo/CodeView/TypeStreamMerger.cpp",
        "llvm/lib/DebugInfo/CodeView/TypeTableCollection.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/DebugInfo/CodeView",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMDebugInfoDWARF_a",
    srcs: [
        "llvm/lib/DebugInfo/DWARF/DWARFAbbreviationDeclaration.cpp",
        "llvm/lib/DebugInfo/DWARF/DWARFAcceleratorTable.cpp",
        "llvm/lib/DebugInfo/DWARF/DWARFAddressRange.cpp",
        "llvm/lib/DebugInfo/DWARF/DWARFCompileUnit.cpp",
        "llvm/lib/DebugInfo/DWARF/DWARFContext.cpp",
        "llvm/lib/DebugInfo/DWARF/DWARFDataExtractor.cpp",
        "llvm/lib/DebugInfo/DWARF/DWARFDebugAbbrev.cpp",
        "llvm/lib/DebugInfo/DWARF/DWARFDebugAddr.cpp",
        "llvm/lib/DebugInfo/DWARF/DWARFDebugArangeSet.cpp",
        "llvm/lib/DebugInfo/DWARF/DWARFDebugAranges.cpp",
        "llvm/lib/DebugInfo/DWARF/DWARFDebugFrame.cpp",
        "llvm/lib/DebugInfo/DWARF/DWARFDebugInfoEntry.cpp",
        "llvm/lib/DebugInfo/DWARF/DWARFDebugLine.cpp",
        "llvm/lib/DebugInfo/DWARF/DWARFDebugLoc.cpp",
        "llvm/lib/DebugInfo/DWARF/DWARFDebugMacro.cpp",
        "llvm/lib/DebugInfo/DWARF/DWARFDebugPubTable.cpp",
        "llvm/lib/DebugInfo/DWARF/DWARFDebugRangeList.cpp",
        "llvm/lib/DebugInfo/DWARF/DWARFDebugRnglists.cpp",
        "llvm/lib/DebugInfo/DWARF/DWARFDie.cpp",
        "llvm/lib/DebugInfo/DWARF/DWARFExpression.cpp",
        "llvm/lib/DebugInfo/DWARF/DWARFFormValue.cpp",
        "llvm/lib/DebugInfo/DWARF/DWARFGdbIndex.cpp",
        "llvm/lib/DebugInfo/DWARF/DWARFListTable.cpp",
        "llvm/lib/DebugInfo/DWARF/DWARFLocationExpression.cpp",
        "llvm/lib/DebugInfo/DWARF/DWARFTypeUnit.cpp",
        "llvm/lib/DebugInfo/DWARF/DWARFUnit.cpp",
        "llvm/lib/DebugInfo/DWARF/DWARFUnitIndex.cpp",
        "llvm/lib/DebugInfo/DWARF/DWARFVerifier.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/DebugInfo/DWARF",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMDebugInfoBTF_a",
    srcs: [
        "llvm/lib/DebugInfo/BTF/BTFContext.cpp",
        "llvm/lib/DebugInfo/BTF/BTFParser.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/DebugInfo/BTF",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMProfileData_a",
    srcs: [
        "llvm/lib/ProfileData/GCOV.cpp",
        "llvm/lib/ProfileData/InstrProf.cpp",
        "llvm/lib/ProfileData/InstrProfCorrelator.cpp",
        "llvm/lib/ProfileData/InstrProfReader.cpp",
        "llvm/lib/ProfileData/InstrProfWriter.cpp",
        "llvm/lib/ProfileData/ItaniumManglingCanonicalizer.cpp",
        "llvm/lib/ProfileData/MemProf.cpp",
        "llvm/lib/ProfileData/MemProfReader.cpp",
        "llvm/lib/ProfileData/PGOCtxProfReader.cpp",
        "llvm/lib/ProfileData/PGOCtxProfWriter.cpp",
        "llvm/lib/ProfileData/ProfileSummaryBuilder.cpp",
        "llvm/lib/ProfileData/SampleProf.cpp",
        "llvm/lib/ProfileData/SampleProfReader.cpp",
        "llvm/lib/ProfileData/SampleProfWriter.cpp",
        "llvm/lib/ProfileData/SymbolRemappingReader.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/ProfileData",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMAnalysis_a",
    srcs: [
        "llvm/lib/Analysis/AliasAnalysis.cpp",
        "llvm/lib/Analysis/AliasAnalysisEvaluator.cpp",
        "llvm/lib/Analysis/AliasSetTracker.cpp",
        "llvm/lib/Analysis/Analysis.cpp",
        "llvm/lib/Analysis/AssumeBundleQueries.cpp",
        "llvm/lib/Analysis/AssumptionCache.cpp",
        "llvm/lib/Analysis/BasicAliasAnalysis.cpp",
        "llvm/lib/Analysis/BlockFrequencyInfo.cpp",
        "llvm/lib/Analysis/BlockFrequencyInfoImpl.cpp",
        "llvm/lib/Analysis/BranchProbabilityInfo.cpp",
        "llvm/lib/Analysis/CFG.cpp",
        "llvm/lib/Analysis/CFGPrinter.cpp",
        "llvm/lib/Analysis/CFGSCCPrinter.cpp",
        "llvm/lib/Analysis/CGSCCPassManager.cpp",
        "llvm/lib/Analysis/CallGraph.cpp",
        "llvm/lib/Analysis/CallGraphSCCPass.cpp",
        "llvm/lib/Analysis/CallPrinter.cpp",
        "llvm/lib/Analysis/CaptureTracking.cpp",
        "llvm/lib/Analysis/CmpInstAnalysis.cpp",
        "llvm/lib/Analysis/CodeMetrics.cpp",
        "llvm/lib/Analysis/ConstantFolding.cpp",
        "llvm/lib/Analysis/ConstraintSystem.cpp",
        "llvm/lib/Analysis/CostModel.cpp",
        "llvm/lib/Analysis/CtxProfAnalysis.cpp",
        "llvm/lib/Analysis/CycleAnalysis.cpp",
        "llvm/lib/Analysis/DDG.cpp",
        "llvm/lib/Analysis/DDGPrinter.cpp",
        "llvm/lib/Analysis/DXILMetadataAnalysis.cpp",
        "llvm/lib/Analysis/DXILResource.cpp",
        "llvm/lib/Analysis/Delinearization.cpp",
        "llvm/lib/Analysis/DemandedBits.cpp",
        "llvm/lib/Analysis/DependenceAnalysis.cpp",
        "llvm/lib/Analysis/DependenceGraphBuilder.cpp",
        "llvm/lib/Analysis/DevelopmentModeInlineAdvisor.cpp",
        "llvm/lib/Analysis/DomConditionCache.cpp",
        "llvm/lib/Analysis/DomPrinter.cpp",
        "llvm/lib/Analysis/DomTreeUpdater.cpp",
        "llvm/lib/Analysis/DominanceFrontier.cpp",
        "llvm/lib/Analysis/FunctionPropertiesAnalysis.cpp",
        "llvm/lib/Analysis/GlobalsModRef.cpp",
        "llvm/lib/Analysis/GuardUtils.cpp",
        "llvm/lib/Analysis/HeatUtils.cpp",
        "llvm/lib/Analysis/IRSimilarityIdentifier.cpp",
        "llvm/lib/Analysis/IVDescriptors.cpp",
        "llvm/lib/Analysis/IVUsers.cpp",
        "llvm/lib/Analysis/ImportedFunctionsInliningStatistics.cpp",
        "llvm/lib/Analysis/IndirectCallPromotionAnalysis.cpp",
        "llvm/lib/Analysis/InlineAdvisor.cpp",
        "llvm/lib/Analysis/InlineCost.cpp",
        "llvm/lib/Analysis/InlineOrder.cpp",
        "llvm/lib/Analysis/InlineSizeEstimatorAnalysis.cpp",
        "llvm/lib/Analysis/InstCount.cpp",
        "llvm/lib/Analysis/InstructionPrecedenceTracking.cpp",
        "llvm/lib/Analysis/InstructionSimplify.cpp",
        "llvm/lib/Analysis/InteractiveModelRunner.cpp",
        "llvm/lib/Analysis/LastRunTrackingAnalysis.cpp",
        "llvm/lib/Analysis/LazyBlockFrequencyInfo.cpp",
        "llvm/lib/Analysis/LazyBranchProbabilityInfo.cpp",
        "llvm/lib/Analysis/LazyCallGraph.cpp",
        "llvm/lib/Analysis/LazyValueInfo.cpp",
        "llvm/lib/Analysis/Lint.cpp",
        "llvm/lib/Analysis/Loads.cpp",
        "llvm/lib/Analysis/Local.cpp",
        "llvm/lib/Analysis/LoopAccessAnalysis.cpp",
        "llvm/lib/Analysis/LoopAnalysisManager.cpp",
        "llvm/lib/Analysis/LoopCacheAnalysis.cpp",
        "llvm/lib/Analysis/LoopInfo.cpp",
        "llvm/lib/Analysis/LoopNestAnalysis.cpp",
        "llvm/lib/Analysis/LoopPass.cpp",
        "llvm/lib/Analysis/LoopUnrollAnalyzer.cpp",
        "llvm/lib/Analysis/MLInlineAdvisor.cpp",
        "llvm/lib/Analysis/MemDerefPrinter.cpp",
        "llvm/lib/Analysis/MemoryBuiltins.cpp",
        "llvm/lib/Analysis/MemoryDependenceAnalysis.cpp",
        "llvm/lib/Analysis/MemoryLocation.cpp",
        "llvm/lib/Analysis/MemoryProfileInfo.cpp",
        "llvm/lib/Analysis/MemorySSA.cpp",
        "llvm/lib/Analysis/MemorySSAUpdater.cpp",
        "llvm/lib/Analysis/ModelUnderTrainingRunner.cpp",
        "llvm/lib/Analysis/ModuleDebugInfoPrinter.cpp",
        "llvm/lib/Analysis/ModuleSummaryAnalysis.cpp",
        "llvm/lib/Analysis/MustExecute.cpp",
        "llvm/lib/Analysis/NoInferenceModelRunner.cpp",
        "llvm/lib/Analysis/ObjCARCAliasAnalysis.cpp",
        "llvm/lib/Analysis/ObjCARCAnalysisUtils.cpp",
        "llvm/lib/Analysis/ObjCARCInstKind.cpp",
        "llvm/lib/Analysis/OptimizationRemarkEmitter.cpp",
        "llvm/lib/Analysis/OverflowInstAnalysis.cpp",
        "llvm/lib/Analysis/PHITransAddr.cpp",
        "llvm/lib/Analysis/PhiValues.cpp",
        "llvm/lib/Analysis/PostDominators.cpp",
        "llvm/lib/Analysis/ProfileSummaryInfo.cpp",
        "llvm/lib/Analysis/PtrUseVisitor.cpp",
        "llvm/lib/Analysis/RegionInfo.cpp",
        "llvm/lib/Analysis/RegionPass.cpp",
        "llvm/lib/Analysis/RegionPrinter.cpp",
        "llvm/lib/Analysis/ReplayInlineAdvisor.cpp",
        "llvm/lib/Analysis/ScalarEvolution.cpp",
        "llvm/lib/Analysis/ScalarEvolutionAliasAnalysis.cpp",
        "llvm/lib/Analysis/ScalarEvolutionDivision.cpp",
        "llvm/lib/Analysis/ScalarEvolutionNormalization.cpp",
        "llvm/lib/Analysis/ScopedNoAliasAA.cpp",
        "llvm/lib/Analysis/StackLifetime.cpp",
        "llvm/lib/Analysis/StackSafetyAnalysis.cpp",
        "llvm/lib/Analysis/StructuralHash.cpp",
        "llvm/lib/Analysis/SyntheticCountsUtils.cpp",
        "llvm/lib/Analysis/TFLiteUtils.cpp",
        "llvm/lib/Analysis/TargetLibraryInfo.cpp",
        "llvm/lib/Analysis/TargetTransformInfo.cpp",
        "llvm/lib/Analysis/TensorSpec.cpp",
        "llvm/lib/Analysis/Trace.cpp",
        "llvm/lib/Analysis/TrainingLogger.cpp",
        "llvm/lib/Analysis/TypeBasedAliasAnalysis.cpp",
        "llvm/lib/Analysis/TypeMetadataUtils.cpp",
        "llvm/lib/Analysis/UniformityAnalysis.cpp",
        "llvm/lib/Analysis/ValueLattice.cpp",
        "llvm/lib/Analysis/ValueLatticeUtils.cpp",
        "llvm/lib/Analysis/ValueTracking.cpp",
        "llvm/lib/Analysis/VectorUtils.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/Analysis",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMScalarOpts_a",
    srcs: [
        "llvm/lib/Transforms/Scalar/ADCE.cpp",
        "llvm/lib/Transforms/Scalar/AlignmentFromAssumptions.cpp",
        "llvm/lib/Transforms/Scalar/AnnotationRemarks.cpp",
        "llvm/lib/Transforms/Scalar/BDCE.cpp",
        "llvm/lib/Transforms/Scalar/CallSiteSplitting.cpp",
        "llvm/lib/Transforms/Scalar/ConstantHoisting.cpp",
        "llvm/lib/Transforms/Scalar/ConstraintElimination.cpp",
        "llvm/lib/Transforms/Scalar/CorrelatedValuePropagation.cpp",
        "llvm/lib/Transforms/Scalar/DCE.cpp",
        "llvm/lib/Transforms/Scalar/DFAJumpThreading.cpp",
        "llvm/lib/Transforms/Scalar/DeadStoreElimination.cpp",
        "llvm/lib/Transforms/Scalar/DivRemPairs.cpp",
        "llvm/lib/Transforms/Scalar/EarlyCSE.cpp",
        "llvm/lib/Transforms/Scalar/FlattenCFGPass.cpp",
        "llvm/lib/Transforms/Scalar/Float2Int.cpp",
        "llvm/lib/Transforms/Scalar/GVN.cpp",
        "llvm/lib/Transforms/Scalar/GVNHoist.cpp",
        "llvm/lib/Transforms/Scalar/GVNSink.cpp",
        "llvm/lib/Transforms/Scalar/GuardWidening.cpp",
        "llvm/lib/Transforms/Scalar/IVUsersPrinter.cpp",
        "llvm/lib/Transforms/Scalar/IndVarSimplify.cpp",
        "llvm/lib/Transforms/Scalar/InductiveRangeCheckElimination.cpp",
        "llvm/lib/Transforms/Scalar/InferAddressSpaces.cpp",
        "llvm/lib/Transforms/Scalar/InferAlignment.cpp",
        "llvm/lib/Transforms/Scalar/InstSimplifyPass.cpp",
        "llvm/lib/Transforms/Scalar/JumpTableToSwitch.cpp",
        "llvm/lib/Transforms/Scalar/JumpThreading.cpp",
        "llvm/lib/Transforms/Scalar/LICM.cpp",
        "llvm/lib/Transforms/Scalar/LoopAccessAnalysisPrinter.cpp",
        "llvm/lib/Transforms/Scalar/LoopBoundSplit.cpp",
        "llvm/lib/Transforms/Scalar/LoopDataPrefetch.cpp",
        "llvm/lib/Transforms/Scalar/LoopDeletion.cpp",
        "llvm/lib/Transforms/Scalar/LoopDistribute.cpp",
        "llvm/lib/Transforms/Scalar/LoopFlatten.cpp",
        "llvm/lib/Transforms/Scalar/LoopFuse.cpp",
        "llvm/lib/Transforms/Scalar/LoopIdiomRecognize.cpp",
        "llvm/lib/Transforms/Scalar/LoopInstSimplify.cpp",
        "llvm/lib/Transforms/Scalar/LoopInterchange.cpp",
        "llvm/lib/Transforms/Scalar/LoopLoadElimination.cpp",
        "llvm/lib/Transforms/Scalar/LoopPassManager.cpp",
        "llvm/lib/Transforms/Scalar/LoopPredication.cpp",
        "llvm/lib/Transforms/Scalar/LoopRotation.cpp",
        "llvm/lib/Transforms/Scalar/LoopSimplifyCFG.cpp",
        "llvm/lib/Transforms/Scalar/LoopSink.cpp",
        "llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp",
        "llvm/lib/Transforms/Scalar/LoopTermFold.cpp",
        "llvm/lib/Transforms/Scalar/LoopUnrollAndJamPass.cpp",
        "llvm/lib/Transforms/Scalar/LoopUnrollPass.cpp",
        "llvm/lib/Transforms/Scalar/LoopVersioningLICM.cpp",
        "llvm/lib/Transforms/Scalar/LowerAtomicPass.cpp",
        "llvm/lib/Transforms/Scalar/LowerConstantIntrinsics.cpp",
        "llvm/lib/Transforms/Scalar/LowerExpectIntrinsic.cpp",
        "llvm/lib/Transforms/Scalar/LowerGuardIntrinsic.cpp",
        "llvm/lib/Transforms/Scalar/LowerMatrixIntrinsics.cpp",
        "llvm/lib/Transforms/Scalar/LowerWidenableCondition.cpp",
        "llvm/lib/Transforms/Scalar/MakeGuardsExplicit.cpp",
        "llvm/lib/Transforms/Scalar/MemCpyOptimizer.cpp",
        "llvm/lib/Transforms/Scalar/MergeICmps.cpp",
        "llvm/lib/Transforms/Scalar/MergedLoadStoreMotion.cpp",
        "llvm/lib/Transforms/Scalar/NaryReassociate.cpp",
        "llvm/lib/Transforms/Scalar/NewGVN.cpp",
        "llvm/lib/Transforms/Scalar/PartiallyInlineLibCalls.cpp",
        "llvm/lib/Transforms/Scalar/PlaceSafepoints.cpp",
        "llvm/lib/Transforms/Scalar/Reassociate.cpp",
        "llvm/lib/Transforms/Scalar/Reg2Mem.cpp",
        "llvm/lib/Transforms/Scalar/RewriteStatepointsForGC.cpp",
        "llvm/lib/Transforms/Scalar/SCCP.cpp",
        "llvm/lib/Transforms/Scalar/SROA.cpp",
        "llvm/lib/Transforms/Scalar/Scalar.cpp",
        "llvm/lib/Transforms/Scalar/ScalarizeMaskedMemIntrin.cpp",
        "llvm/lib/Transforms/Scalar/Scalarizer.cpp",
        "llvm/lib/Transforms/Scalar/SeparateConstOffsetFromGEP.cpp",
        "llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp",
        "llvm/lib/Transforms/Scalar/SimplifyCFGPass.cpp",
        "llvm/lib/Transforms/Scalar/Sink.cpp",
        "llvm/lib/Transforms/Scalar/SpeculativeExecution.cpp",
        "llvm/lib/Transforms/Scalar/StraightLineStrengthReduce.cpp",
        "llvm/lib/Transforms/Scalar/StructurizeCFG.cpp",
        "llvm/lib/Transforms/Scalar/TailRecursionElimination.cpp",
        "llvm/lib/Transforms/Scalar/WarnMissedTransforms.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/Transforms/Scalar",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMInstCombine_a",
    srcs: [
        "llvm/lib/Transforms/InstCombine/InstCombineAddSub.cpp",
        "llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp",
        "llvm/lib/Transforms/InstCombine/InstCombineAtomicRMW.cpp",
        "llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp",
        "llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp",
        "llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp",
        "llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp",
        "llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp",
        "llvm/lib/Transforms/InstCombine/InstCombineNegator.cpp",
        "llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp",
        "llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp",
        "llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp",
        "llvm/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp",
        "llvm/lib/Transforms/InstCombine/InstCombineVectorOps.cpp",
        "llvm/lib/Transforms/InstCombine/InstructionCombining.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/Transforms/InstCombine",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMAggressiveInstCombine_a",
    srcs: [
        "llvm/lib/Transforms/AggressiveInstCombine/AggressiveInstCombine.cpp",
        "llvm/lib/Transforms/AggressiveInstCombine/TruncInstCombine.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/Transforms/AggressiveInstCombine",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMFrontendOpenMP_a",
    srcs: [
        "llvm/lib/Frontend/OpenMP/OMP.cpp",
        "llvm/lib/Frontend/OpenMP/OMPContext.cpp",
        "llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/Frontend/OpenMP",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMFrontendOffloading_a",
    srcs: [
        "llvm/lib/Frontend/Offloading/OffloadWrapper.cpp",
        "llvm/lib/Frontend/Offloading/Utility.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/Frontend/Offloading",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libclangEdit_a",
    srcs: [
        "clang/lib/Edit/Commit.cpp",
        "clang/lib/Edit/EditedSource.cpp",
        "clang/lib/Edit/RewriteObjCFoundationAPI.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "clang/include",
        "clang/lib/Edit",
        "cmake_generated/include",
        "cmake_generated/tools/clang/include",
        "llvm/include",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libclangAST_a",
    srcs: [
        "clang/lib/AST/APValue.cpp",
        "clang/lib/AST/ASTConcept.cpp",
        "clang/lib/AST/ASTConsumer.cpp",
        "clang/lib/AST/ASTContext.cpp",
        "clang/lib/AST/ASTDiagnostic.cpp",
        "clang/lib/AST/ASTDumper.cpp",
        "clang/lib/AST/ASTImporter.cpp",
        "clang/lib/AST/ASTImporterLookupTable.cpp",
        "clang/lib/AST/ASTStructuralEquivalence.cpp",
        "clang/lib/AST/ASTTypeTraits.cpp",
        "clang/lib/AST/AttrDocTable.cpp",
        "clang/lib/AST/AttrImpl.cpp",
        "clang/lib/AST/Availability.cpp",
        "clang/lib/AST/ByteCode/BitcastBuffer.cpp",
        "clang/lib/AST/ByteCode/ByteCodeEmitter.cpp",
        "clang/lib/AST/ByteCode/Compiler.cpp",
        "clang/lib/AST/ByteCode/Context.cpp",
        "clang/lib/AST/ByteCode/Descriptor.cpp",
        "clang/lib/AST/ByteCode/Disasm.cpp",
        "clang/lib/AST/ByteCode/DynamicAllocator.cpp",
        "clang/lib/AST/ByteCode/EvalEmitter.cpp",
        "clang/lib/AST/ByteCode/EvaluationResult.cpp",
        "clang/lib/AST/ByteCode/Floating.cpp",
        "clang/lib/AST/ByteCode/Frame.cpp",
        "clang/lib/AST/ByteCode/Function.cpp",
        "clang/lib/AST/ByteCode/FunctionPointer.cpp",
        "clang/lib/AST/ByteCode/Interp.cpp",
        "clang/lib/AST/ByteCode/InterpBlock.cpp",
        "clang/lib/AST/ByteCode/InterpBuiltin.cpp",
        "clang/lib/AST/ByteCode/InterpBuiltinBitCast.cpp",
        "clang/lib/AST/ByteCode/InterpFrame.cpp",
        "clang/lib/AST/ByteCode/InterpShared.cpp",
        "clang/lib/AST/ByteCode/InterpStack.cpp",
        "clang/lib/AST/ByteCode/InterpState.cpp",
        "clang/lib/AST/ByteCode/MemberPointer.cpp",
        "clang/lib/AST/ByteCode/Pointer.cpp",
        "clang/lib/AST/ByteCode/PrimType.cpp",
        "clang/lib/AST/ByteCode/Program.cpp",
        "clang/lib/AST/ByteCode/Record.cpp",
        "clang/lib/AST/ByteCode/Source.cpp",
        "clang/lib/AST/ByteCode/State.cpp",
        "clang/lib/AST/CXXInheritance.cpp",
        "clang/lib/AST/Comment.cpp",
        "clang/lib/AST/CommentBriefParser.cpp",
        "clang/lib/AST/CommentCommandTraits.cpp",
        "clang/lib/AST/CommentLexer.cpp",
        "clang/lib/AST/CommentParser.cpp",
        "clang/lib/AST/CommentSema.cpp",
        "clang/lib/AST/ComparisonCategories.cpp",
        "clang/lib/AST/ComputeDependence.cpp",
        "clang/lib/AST/DataCollection.cpp",
        "clang/lib/AST/Decl.cpp",
        "clang/lib/AST/DeclBase.cpp",
        "clang/lib/AST/DeclCXX.cpp",
        "clang/lib/AST/DeclFriend.cpp",
        "clang/lib/AST/DeclGroup.cpp",
        "clang/lib/AST/DeclObjC.cpp",
        "clang/lib/AST/DeclOpenMP.cpp",
        "clang/lib/AST/DeclPrinter.cpp",
        "clang/lib/AST/DeclTemplate.cpp",
        "clang/lib/AST/DeclarationName.cpp",
        "clang/lib/AST/DynamicRecursiveASTVisitor.cpp",
        "clang/lib/AST/Expr.cpp",
        "clang/lib/AST/ExprCXX.cpp",
        "clang/lib/AST/ExprClassification.cpp",
        "clang/lib/AST/ExprConcepts.cpp",
        "clang/lib/AST/ExprConstant.cpp",
        "clang/lib/AST/ExprObjC.cpp",
        "clang/lib/AST/ExternalASTMerger.cpp",
        "clang/lib/AST/ExternalASTSource.cpp",
        "clang/lib/AST/FormatString.cpp",
        "clang/lib/AST/InheritViz.cpp",
        "clang/lib/AST/ItaniumCXXABI.cpp",
        "clang/lib/AST/ItaniumMangle.cpp",
        "clang/lib/AST/JSONNodeDumper.cpp",
        "clang/lib/AST/Mangle.cpp",
        "clang/lib/AST/MicrosoftCXXABI.cpp",
        "clang/lib/AST/MicrosoftMangle.cpp",
        "clang/lib/AST/NSAPI.cpp",
        "clang/lib/AST/NestedNameSpecifier.cpp",
        "clang/lib/AST/ODRDiagsEmitter.cpp",
        "clang/lib/AST/ODRHash.cpp",
        "clang/lib/AST/OSLog.cpp",
        "clang/lib/AST/OpenACCClause.cpp",
        "clang/lib/AST/OpenMPClause.cpp",
        "clang/lib/AST/ParentMap.cpp",
        "clang/lib/AST/ParentMapContext.cpp",
        "clang/lib/AST/PrintfFormatString.cpp",
        "clang/lib/AST/QualTypeNames.cpp",
        "clang/lib/AST/Randstruct.cpp",
        "clang/lib/AST/RawCommentList.cpp",
        "clang/lib/AST/RecordLayout.cpp",
        "clang/lib/AST/RecordLayoutBuilder.cpp",
        "clang/lib/AST/ScanfFormatString.cpp",
        "clang/lib/AST/SelectorLocationsKind.cpp",
        "clang/lib/AST/Stmt.cpp",
        "clang/lib/AST/StmtCXX.cpp",
        "clang/lib/AST/StmtIterator.cpp",
        "clang/lib/AST/StmtObjC.cpp",
        "clang/lib/AST/StmtOpenACC.cpp",
        "clang/lib/AST/StmtOpenMP.cpp",
        "clang/lib/AST/StmtPrinter.cpp",
        "clang/lib/AST/StmtProfile.cpp",
        "clang/lib/AST/StmtViz.cpp",
        "clang/lib/AST/TemplateBase.cpp",
        "clang/lib/AST/TemplateName.cpp",
        "clang/lib/AST/TextNodeDumper.cpp",
        "clang/lib/AST/Type.cpp",
        "clang/lib/AST/TypeLoc.cpp",
        "clang/lib/AST/TypePrinter.cpp",
        "clang/lib/AST/VTTBuilder.cpp",
        "clang/lib/AST/VTableBuilder.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "clang/include",
        "clang/lib/AST",
        "cmake_generated/include",
        "cmake_generated/tools/clang/include",
        "cmake_generated/tools/clang/lib/AST",
        "llvm/include",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libclangAnalysis_a",
    srcs: [
        "clang/lib/Analysis/AnalysisDeclContext.cpp",
        "clang/lib/Analysis/BodyFarm.cpp",
        "clang/lib/Analysis/CFG.cpp",
        "clang/lib/Analysis/CFGReachabilityAnalysis.cpp",
        "clang/lib/Analysis/CFGStmtMap.cpp",
        "clang/lib/Analysis/CallGraph.cpp",
        "clang/lib/Analysis/CalledOnceCheck.cpp",
        "clang/lib/Analysis/CloneDetection.cpp",
        "clang/lib/Analysis/CocoaConventions.cpp",
        "clang/lib/Analysis/CodeInjector.cpp",
        "clang/lib/Analysis/ConstructionContext.cpp",
        "clang/lib/Analysis/Consumed.cpp",
        "clang/lib/Analysis/Dominators.cpp",
        "clang/lib/Analysis/ExprMutationAnalyzer.cpp",
        "clang/lib/Analysis/IntervalPartition.cpp",
        "clang/lib/Analysis/IssueHash.cpp",
        "clang/lib/Analysis/LiveVariables.cpp",
        "clang/lib/Analysis/MacroExpansionContext.cpp",
        "clang/lib/Analysis/ObjCNoReturn.cpp",
        "clang/lib/Analysis/PathDiagnostic.cpp",
        "clang/lib/Analysis/PostOrderCFGView.cpp",
        "clang/lib/Analysis/ProgramPoint.cpp",
        "clang/lib/Analysis/ReachableCode.cpp",
        "clang/lib/Analysis/RetainSummaryManager.cpp",
        "clang/lib/Analysis/ThreadSafety.cpp",
        "clang/lib/Analysis/ThreadSafetyCommon.cpp",
        "clang/lib/Analysis/ThreadSafetyLogical.cpp",
        "clang/lib/Analysis/ThreadSafetyTIL.cpp",
        "clang/lib/Analysis/UninitializedValues.cpp",
        "clang/lib/Analysis/UnsafeBufferUsage.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "clang/include",
        "clang/lib/Analysis",
        "cmake_generated/include",
        "cmake_generated/tools/clang/include",
        "llvm/include",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libclangASTMatchers_a",
    srcs: [
        "clang/lib/ASTMatchers/ASTMatchFinder.cpp",
        "clang/lib/ASTMatchers/ASTMatchersInternal.cpp",
        "clang/lib/ASTMatchers/GtestMatchers.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "clang/include",
        "clang/lib/ASTMatchers",
        "cmake_generated/include",
        "cmake_generated/tools/clang/include",
        "llvm/include",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libclangAPINotes_a",
    srcs: [
        "clang/lib/APINotes/APINotesManager.cpp",
        "clang/lib/APINotes/APINotesReader.cpp",
        "clang/lib/APINotes/APINotesTypes.cpp",
        "clang/lib/APINotes/APINotesWriter.cpp",
        "clang/lib/APINotes/APINotesYAMLCompiler.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "clang/include",
        "clang/lib/APINotes",
        "cmake_generated/include",
        "cmake_generated/tools/clang/include",
        "llvm/include",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMFrontendHLSL_a",
    srcs: ["llvm/lib/Frontend/HLSL/HLSLResource.cpp"],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/Frontend/HLSL",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libclangParse_a",
    srcs: [
        "clang/lib/Parse/ParseAST.cpp",
        "clang/lib/Parse/ParseCXXInlineMethods.cpp",
        "clang/lib/Parse/ParseDecl.cpp",
        "clang/lib/Parse/ParseDeclCXX.cpp",
        "clang/lib/Parse/ParseExpr.cpp",
        "clang/lib/Parse/ParseExprCXX.cpp",
        "clang/lib/Parse/ParseHLSL.cpp",
        "clang/lib/Parse/ParseInit.cpp",
        "clang/lib/Parse/ParseObjc.cpp",
        "clang/lib/Parse/ParseOpenACC.cpp",
        "clang/lib/Parse/ParseOpenMP.cpp",
        "clang/lib/Parse/ParsePragma.cpp",
        "clang/lib/Parse/ParseStmt.cpp",
        "clang/lib/Parse/ParseStmtAsm.cpp",
        "clang/lib/Parse/ParseTemplate.cpp",
        "clang/lib/Parse/ParseTentative.cpp",
        "clang/lib/Parse/Parser.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "clang/include",
        "clang/lib/Parse",
        "cmake_generated/include",
        "cmake_generated/tools/clang/include",
        "llvm/include",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libclangFrontend_a",
    srcs: [
        "clang/lib/Frontend/ASTConsumers.cpp",
        "clang/lib/Frontend/ASTMerge.cpp",
        "clang/lib/Frontend/ASTUnit.cpp",
        "clang/lib/Frontend/ChainedDiagnosticConsumer.cpp",
        "clang/lib/Frontend/ChainedIncludesSource.cpp",
        "clang/lib/Frontend/CompilerInstance.cpp",
        "clang/lib/Frontend/CompilerInvocation.cpp",
        "clang/lib/Frontend/CreateInvocationFromCommandLine.cpp",
        "clang/lib/Frontend/DependencyFile.cpp",
        "clang/lib/Frontend/DependencyGraph.cpp",
        "clang/lib/Frontend/DiagnosticRenderer.cpp",
        "clang/lib/Frontend/FrontendAction.cpp",
        "clang/lib/Frontend/FrontendActions.cpp",
        "clang/lib/Frontend/FrontendOptions.cpp",
        "clang/lib/Frontend/HeaderIncludeGen.cpp",
        "clang/lib/Frontend/InitPreprocessor.cpp",
        "clang/lib/Frontend/InterfaceStubFunctionsConsumer.cpp",
        "clang/lib/Frontend/LayoutOverrideSource.cpp",
        "clang/lib/Frontend/LogDiagnosticPrinter.cpp",
        "clang/lib/Frontend/ModuleDependencyCollector.cpp",
        "clang/lib/Frontend/MultiplexConsumer.cpp",
        "clang/lib/Frontend/PrecompiledPreamble.cpp",
        "clang/lib/Frontend/PrintPreprocessedOutput.cpp",
        "clang/lib/Frontend/SARIFDiagnostic.cpp",
        "clang/lib/Frontend/SARIFDiagnosticPrinter.cpp",
        "clang/lib/Frontend/SerializedDiagnosticPrinter.cpp",
        "clang/lib/Frontend/SerializedDiagnosticReader.cpp",
        "clang/lib/Frontend/TestModuleFileExtension.cpp",
        "clang/lib/Frontend/TextDiagnostic.cpp",
        "clang/lib/Frontend/TextDiagnosticBuffer.cpp",
        "clang/lib/Frontend/TextDiagnosticPrinter.cpp",
        "clang/lib/Frontend/VerifyDiagnosticConsumer.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "clang/include",
        "clang/lib/Frontend",
        "cmake_generated/include",
        "cmake_generated/tools/clang/include",
        "llvm/include",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libclangDriver_a",
    srcs: [
        "clang/lib/Driver/Action.cpp",
        "clang/lib/Driver/Compilation.cpp",
        "clang/lib/Driver/Distro.cpp",
        "clang/lib/Driver/Driver.cpp",
        "clang/lib/Driver/DriverOptions.cpp",
        "clang/lib/Driver/Job.cpp",
        "clang/lib/Driver/Multilib.cpp",
        "clang/lib/Driver/MultilibBuilder.cpp",
        "clang/lib/Driver/OffloadBundler.cpp",
        "clang/lib/Driver/OptionUtils.cpp",
        "clang/lib/Driver/Phases.cpp",
        "clang/lib/Driver/SanitizerArgs.cpp",
        "clang/lib/Driver/Tool.cpp",
        "clang/lib/Driver/ToolChain.cpp",
        "clang/lib/Driver/ToolChains/AIX.cpp",
        "clang/lib/Driver/ToolChains/AMDGPU.cpp",
        "clang/lib/Driver/ToolChains/AMDGPUOpenMP.cpp",
        "clang/lib/Driver/ToolChains/AVR.cpp",
        "clang/lib/Driver/ToolChains/Arch/AArch64.cpp",
        "clang/lib/Driver/ToolChains/Arch/ARM.cpp",
        "clang/lib/Driver/ToolChains/Arch/CSKY.cpp",
        "clang/lib/Driver/ToolChains/Arch/LoongArch.cpp",
        "clang/lib/Driver/ToolChains/Arch/M68k.cpp",
        "clang/lib/Driver/ToolChains/Arch/Mips.cpp",
        "clang/lib/Driver/ToolChains/Arch/PPC.cpp",
        "clang/lib/Driver/ToolChains/Arch/RISCV.cpp",
        "clang/lib/Driver/ToolChains/Arch/Sparc.cpp",
        "clang/lib/Driver/ToolChains/Arch/SystemZ.cpp",
        "clang/lib/Driver/ToolChains/Arch/VE.cpp",
        "clang/lib/Driver/ToolChains/Arch/X86.cpp",
        "clang/lib/Driver/ToolChains/BareMetal.cpp",
        "clang/lib/Driver/ToolChains/CSKYToolChain.cpp",
        "clang/lib/Driver/ToolChains/Clang.cpp",
        "clang/lib/Driver/ToolChains/CommonArgs.cpp",
        "clang/lib/Driver/ToolChains/CrossWindows.cpp",
        "clang/lib/Driver/ToolChains/Cuda.cpp",
        "clang/lib/Driver/ToolChains/Darwin.cpp",
        "clang/lib/Driver/ToolChains/DragonFly.cpp",
        "clang/lib/Driver/ToolChains/Flang.cpp",
        "clang/lib/Driver/ToolChains/FreeBSD.cpp",
        "clang/lib/Driver/ToolChains/Fuchsia.cpp",
        "clang/lib/Driver/ToolChains/Gnu.cpp",
        "clang/lib/Driver/ToolChains/HIPAMD.cpp",
        "clang/lib/Driver/ToolChains/HIPSPV.cpp",
        "clang/lib/Driver/ToolChains/HIPUtility.cpp",
        "clang/lib/Driver/ToolChains/HLSL.cpp",
        "clang/lib/Driver/ToolChains/Haiku.cpp",
        "clang/lib/Driver/ToolChains/Hexagon.cpp",
        "clang/lib/Driver/ToolChains/Hurd.cpp",
        "clang/lib/Driver/ToolChains/InterfaceStubs.cpp",
        "clang/lib/Driver/ToolChains/Linux.cpp",
        "clang/lib/Driver/ToolChains/MSP430.cpp",
        "clang/lib/Driver/ToolChains/MSVC.cpp",
        "clang/lib/Driver/ToolChains/MinGW.cpp",
        "clang/lib/Driver/ToolChains/MipsLinux.cpp",
        "clang/lib/Driver/ToolChains/NaCl.cpp",
        "clang/lib/Driver/ToolChains/NetBSD.cpp",
        "clang/lib/Driver/ToolChains/OHOS.cpp",
        "clang/lib/Driver/ToolChains/OpenBSD.cpp",
        "clang/lib/Driver/ToolChains/PPCFreeBSD.cpp",
        "clang/lib/Driver/ToolChains/PPCLinux.cpp",
        "clang/lib/Driver/ToolChains/PS4CPU.cpp",
        "clang/lib/Driver/ToolChains/RISCVToolchain.cpp",
        "clang/lib/Driver/ToolChains/SPIRV.cpp",
        "clang/lib/Driver/ToolChains/Solaris.cpp",
        "clang/lib/Driver/ToolChains/TCE.cpp",
        "clang/lib/Driver/ToolChains/UEFI.cpp",
        "clang/lib/Driver/ToolChains/VEToolchain.cpp",
        "clang/lib/Driver/ToolChains/WebAssembly.cpp",
        "clang/lib/Driver/ToolChains/XCore.cpp",
        "clang/lib/Driver/ToolChains/ZOS.cpp",
        "clang/lib/Driver/Types.cpp",
        "clang/lib/Driver/XRayArgs.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "clang/include",
        "clang/lib/Driver",
        "cmake_generated/include",
        "cmake_generated/tools/clang/include",
        "llvm/include",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMWindowsDriver_a",
    srcs: ["llvm/lib/WindowsDriver/MSVCPaths.cpp"],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/WindowsDriver",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMOption_a",
    srcs: [
        "llvm/lib/Option/Arg.cpp",
        "llvm/lib/Option/ArgList.cpp",
        "llvm/lib/Option/OptTable.cpp",
        "llvm/lib/Option/Option.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/Option",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libclangCodeGen_a",
    srcs: [
        "clang/lib/CodeGen/ABIInfo.cpp",
        "clang/lib/CodeGen/ABIInfoImpl.cpp",
        "clang/lib/CodeGen/BackendUtil.cpp",
        "clang/lib/CodeGen/CGAtomic.cpp",
        "clang/lib/CodeGen/CGBlocks.cpp",
        "clang/lib/CodeGen/CGBuiltin.cpp",
        "clang/lib/CodeGen/CGCUDANV.cpp",
        "clang/lib/CodeGen/CGCUDARuntime.cpp",
        "clang/lib/CodeGen/CGCXX.cpp",
        "clang/lib/CodeGen/CGCXXABI.cpp",
        "clang/lib/CodeGen/CGCall.cpp",
        "clang/lib/CodeGen/CGClass.cpp",
        "clang/lib/CodeGen/CGCleanup.cpp",
        "clang/lib/CodeGen/CGCoroutine.cpp",
        "clang/lib/CodeGen/CGDebugInfo.cpp",
        "clang/lib/CodeGen/CGDecl.cpp",
        "clang/lib/CodeGen/CGDeclCXX.cpp",
        "clang/lib/CodeGen/CGException.cpp",
        "clang/lib/CodeGen/CGExpr.cpp",
        "clang/lib/CodeGen/CGExprAgg.cpp",
        "clang/lib/CodeGen/CGExprCXX.cpp",
        "clang/lib/CodeGen/CGExprComplex.cpp",
        "clang/lib/CodeGen/CGExprConstant.cpp",
        "clang/lib/CodeGen/CGExprScalar.cpp",
        "clang/lib/CodeGen/CGGPUBuiltin.cpp",
        "clang/lib/CodeGen/CGHLSLRuntime.cpp",
        "clang/lib/CodeGen/CGLoopInfo.cpp",
        "clang/lib/CodeGen/CGNonTrivialStruct.cpp",
        "clang/lib/CodeGen/CGObjC.cpp",
        "clang/lib/CodeGen/CGObjCGNU.cpp",
        "clang/lib/CodeGen/CGObjCMac.cpp",
        "clang/lib/CodeGen/CGObjCRuntime.cpp",
        "clang/lib/CodeGen/CGOpenCLRuntime.cpp",
        "clang/lib/CodeGen/CGOpenMPRuntime.cpp",
        "clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp",
        "clang/lib/CodeGen/CGPointerAuth.cpp",
        "clang/lib/CodeGen/CGRecordLayoutBuilder.cpp",
        "clang/lib/CodeGen/CGStmt.cpp",
        "clang/lib/CodeGen/CGStmtOpenMP.cpp",
        "clang/lib/CodeGen/CGVTT.cpp",
        "clang/lib/CodeGen/CGVTables.cpp",
        "clang/lib/CodeGen/CodeGenABITypes.cpp",
        "clang/lib/CodeGen/CodeGenAction.cpp",
        "clang/lib/CodeGen/CodeGenFunction.cpp",
        "clang/lib/CodeGen/CodeGenModule.cpp",
        "clang/lib/CodeGen/CodeGenPGO.cpp",
        "clang/lib/CodeGen/CodeGenTBAA.cpp",
        "clang/lib/CodeGen/CodeGenTypes.cpp",
        "clang/lib/CodeGen/ConstantInitBuilder.cpp",
        "clang/lib/CodeGen/CoverageMappingGen.cpp",
        "clang/lib/CodeGen/ItaniumCXXABI.cpp",
        "clang/lib/CodeGen/LinkInModulesPass.cpp",
        "clang/lib/CodeGen/MacroPPCallbacks.cpp",
        "clang/lib/CodeGen/MicrosoftCXXABI.cpp",
        "clang/lib/CodeGen/ModuleBuilder.cpp",
        "clang/lib/CodeGen/ObjectFilePCHContainerWriter.cpp",
        "clang/lib/CodeGen/PatternInit.cpp",
        "clang/lib/CodeGen/SanitizerMetadata.cpp",
        "clang/lib/CodeGen/SwiftCallingConv.cpp",
        "clang/lib/CodeGen/TargetInfo.cpp",
        "clang/lib/CodeGen/Targets/AArch64.cpp",
        "clang/lib/CodeGen/Targets/AMDGPU.cpp",
        "clang/lib/CodeGen/Targets/ARC.cpp",
        "clang/lib/CodeGen/Targets/ARM.cpp",
        "clang/lib/CodeGen/Targets/AVR.cpp",
        "clang/lib/CodeGen/Targets/BPF.cpp",
        "clang/lib/CodeGen/Targets/CSKY.cpp",
        "clang/lib/CodeGen/Targets/DirectX.cpp",
        "clang/lib/CodeGen/Targets/Hexagon.cpp",
        "clang/lib/CodeGen/Targets/Lanai.cpp",
        "clang/lib/CodeGen/Targets/LoongArch.cpp",
        "clang/lib/CodeGen/Targets/M68k.cpp",
        "clang/lib/CodeGen/Targets/MSP430.cpp",
        "clang/lib/CodeGen/Targets/Mips.cpp",
        "clang/lib/CodeGen/Targets/NVPTX.cpp",
        "clang/lib/CodeGen/Targets/PNaCl.cpp",
        "clang/lib/CodeGen/Targets/PPC.cpp",
        "clang/lib/CodeGen/Targets/RISCV.cpp",
        "clang/lib/CodeGen/Targets/SPIR.cpp",
        "clang/lib/CodeGen/Targets/Sparc.cpp",
        "clang/lib/CodeGen/Targets/SystemZ.cpp",
        "clang/lib/CodeGen/Targets/TCE.cpp",
        "clang/lib/CodeGen/Targets/VE.cpp",
        "clang/lib/CodeGen/Targets/WebAssembly.cpp",
        "clang/lib/CodeGen/Targets/X86.cpp",
        "clang/lib/CodeGen/Targets/XCore.cpp",
        "clang/lib/CodeGen/VarBypassDetector.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "clang/include",
        "clang/lib/CodeGen",
        "cmake_generated/include",
        "cmake_generated/tools/clang/include",
        "llvm/include",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMipo_a",
    srcs: [
        "llvm/lib/Transforms/IPO/AlwaysInliner.cpp",
        "llvm/lib/Transforms/IPO/Annotation2Metadata.cpp",
        "llvm/lib/Transforms/IPO/ArgumentPromotion.cpp",
        "llvm/lib/Transforms/IPO/Attributor.cpp",
        "llvm/lib/Transforms/IPO/AttributorAttributes.cpp",
        "llvm/lib/Transforms/IPO/BarrierNoopPass.cpp",
        "llvm/lib/Transforms/IPO/BlockExtractor.cpp",
        "llvm/lib/Transforms/IPO/CalledValuePropagation.cpp",
        "llvm/lib/Transforms/IPO/ConstantMerge.cpp",
        "llvm/lib/Transforms/IPO/CrossDSOCFI.cpp",
        "llvm/lib/Transforms/IPO/DeadArgumentElimination.cpp",
        "llvm/lib/Transforms/IPO/ElimAvailExtern.cpp",
        "llvm/lib/Transforms/IPO/EmbedBitcodePass.cpp",
        "llvm/lib/Transforms/IPO/ExpandVariadics.cpp",
        "llvm/lib/Transforms/IPO/ExtractGV.cpp",
        "llvm/lib/Transforms/IPO/ForceFunctionAttrs.cpp",
        "llvm/lib/Transforms/IPO/FunctionAttrs.cpp",
        "llvm/lib/Transforms/IPO/FunctionImport.cpp",
        "llvm/lib/Transforms/IPO/FunctionSpecialization.cpp",
        "llvm/lib/Transforms/IPO/GlobalDCE.cpp",
        "llvm/lib/Transforms/IPO/GlobalOpt.cpp",
        "llvm/lib/Transforms/IPO/GlobalSplit.cpp",
        "llvm/lib/Transforms/IPO/HotColdSplitting.cpp",
        "llvm/lib/Transforms/IPO/IPO.cpp",
        "llvm/lib/Transforms/IPO/IROutliner.cpp",
        "llvm/lib/Transforms/IPO/InferFunctionAttrs.cpp",
        "llvm/lib/Transforms/IPO/Inliner.cpp",
        "llvm/lib/Transforms/IPO/Internalize.cpp",
        "llvm/lib/Transforms/IPO/LoopExtractor.cpp",
        "llvm/lib/Transforms/IPO/LowerTypeTests.cpp",
        "llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp",
        "llvm/lib/Transforms/IPO/MergeFunctions.cpp",
        "llvm/lib/Transforms/IPO/ModuleInliner.cpp",
        "llvm/lib/Transforms/IPO/OpenMPOpt.cpp",
        "llvm/lib/Transforms/IPO/PartialInlining.cpp",
        "llvm/lib/Transforms/IPO/SCCP.cpp",
        "llvm/lib/Transforms/IPO/SampleContextTracker.cpp",
        "llvm/lib/Transforms/IPO/SampleProfile.cpp",
        "llvm/lib/Transforms/IPO/SampleProfileMatcher.cpp",
        "llvm/lib/Transforms/IPO/SampleProfileProbe.cpp",
        "llvm/lib/Transforms/IPO/StripDeadPrototypes.cpp",
        "llvm/lib/Transforms/IPO/StripSymbols.cpp",
        "llvm/lib/Transforms/IPO/ThinLTOBitcodeWriter.cpp",
        "llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/Transforms/IPO",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMVectorize_a",
    srcs: [
        "llvm/lib/Transforms/Vectorize/LoadStoreVectorizer.cpp",
        "llvm/lib/Transforms/Vectorize/LoopIdiomVectorize.cpp",
        "llvm/lib/Transforms/Vectorize/LoopVectorizationLegality.cpp",
        "llvm/lib/Transforms/Vectorize/LoopVectorize.cpp",
        "llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp",
        "llvm/lib/Transforms/Vectorize/SandboxVectorizer/DependencyGraph.cpp",
        "llvm/lib/Transforms/Vectorize/SandboxVectorizer/Interval.cpp",
        "llvm/lib/Transforms/Vectorize/SandboxVectorizer/Legality.cpp",
        "llvm/lib/Transforms/Vectorize/SandboxVectorizer/Passes/BottomUpVec.cpp",
        "llvm/lib/Transforms/Vectorize/SandboxVectorizer/Passes/RegionsFromMetadata.cpp",
        "llvm/lib/Transforms/Vectorize/SandboxVectorizer/SandboxVectorizer.cpp",
        "llvm/lib/Transforms/Vectorize/SandboxVectorizer/SandboxVectorizerPassBuilder.cpp",
        "llvm/lib/Transforms/Vectorize/SandboxVectorizer/Scheduler.cpp",
        "llvm/lib/Transforms/Vectorize/SandboxVectorizer/SeedCollector.cpp",
        "llvm/lib/Transforms/Vectorize/VPlan.cpp",
        "llvm/lib/Transforms/Vectorize/VPlanAnalysis.cpp",
        "llvm/lib/Transforms/Vectorize/VPlanHCFGBuilder.cpp",
        "llvm/lib/Transforms/Vectorize/VPlanRecipes.cpp",
        "llvm/lib/Transforms/Vectorize/VPlanSLP.cpp",
        "llvm/lib/Transforms/Vectorize/VPlanTransforms.cpp",
        "llvm/lib/Transforms/Vectorize/VPlanUnroll.cpp",
        "llvm/lib/Transforms/Vectorize/VPlanUtils.cpp",
        "llvm/lib/Transforms/Vectorize/VPlanVerifier.cpp",
        "llvm/lib/Transforms/Vectorize/VectorCombine.cpp",
        "llvm/lib/Transforms/Vectorize/Vectorize.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/Transforms/Vectorize",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMSandboxIR_a",
    srcs: [
        "llvm/lib/SandboxIR/Argument.cpp",
        "llvm/lib/SandboxIR/BasicBlock.cpp",
        "llvm/lib/SandboxIR/Constant.cpp",
        "llvm/lib/SandboxIR/Context.cpp",
        "llvm/lib/SandboxIR/Function.cpp",
        "llvm/lib/SandboxIR/Instruction.cpp",
        "llvm/lib/SandboxIR/Module.cpp",
        "llvm/lib/SandboxIR/Pass.cpp",
        "llvm/lib/SandboxIR/PassManager.cpp",
        "llvm/lib/SandboxIR/Region.cpp",
        "llvm/lib/SandboxIR/Tracker.cpp",
        "llvm/lib/SandboxIR/Type.cpp",
        "llvm/lib/SandboxIR/Use.cpp",
        "llvm/lib/SandboxIR/User.cpp",
        "llvm/lib/SandboxIR/Value.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/SandboxIR",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMLinker_a",
    srcs: [
        "llvm/lib/Linker/IRMover.cpp",
        "llvm/lib/Linker/LinkModules.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/Linker",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMInstrumentation_a",
    srcs: [
        "llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp",
        "llvm/lib/Transforms/Instrumentation/BlockCoverageInference.cpp",
        "llvm/lib/Transforms/Instrumentation/BoundsChecking.cpp",
        "llvm/lib/Transforms/Instrumentation/CGProfile.cpp",
        "llvm/lib/Transforms/Instrumentation/ControlHeightReduction.cpp",
        "llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp",
        "llvm/lib/Transforms/Instrumentation/GCOVProfiling.cpp",
        "llvm/lib/Transforms/Instrumentation/HWAddressSanitizer.cpp",
        "llvm/lib/Transforms/Instrumentation/IndirectCallPromotion.cpp",
        "llvm/lib/Transforms/Instrumentation/InstrOrderFile.cpp",
        "llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp",
        "llvm/lib/Transforms/Instrumentation/KCFI.cpp",
        "llvm/lib/Transforms/Instrumentation/LowerAllowCheckPass.cpp",
        "llvm/lib/Transforms/Instrumentation/MemProfiler.cpp",
        "llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp",
        "llvm/lib/Transforms/Instrumentation/NumericalStabilitySanitizer.cpp",
        "llvm/lib/Transforms/Instrumentation/PGOCtxProfFlattening.cpp",
        "llvm/lib/Transforms/Instrumentation/PGOCtxProfLowering.cpp",
        "llvm/lib/Transforms/Instrumentation/PGOForceFunctionAttrs.cpp",
        "llvm/lib/Transforms/Instrumentation/PGOInstrumentation.cpp",
        "llvm/lib/Transforms/Instrumentation/PGOMemOPSizeOpt.cpp",
        "llvm/lib/Transforms/Instrumentation/PoisonChecking.cpp",
        "llvm/lib/Transforms/Instrumentation/RealtimeSanitizer.cpp",
        "llvm/lib/Transforms/Instrumentation/SanitizerBinaryMetadata.cpp",
        "llvm/lib/Transforms/Instrumentation/SanitizerCoverage.cpp",
        "llvm/lib/Transforms/Instrumentation/ThreadSanitizer.cpp",
        "llvm/lib/Transforms/Instrumentation/ValueProfileCollector.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/Transforms/Instrumentation",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMBitWriter_a",
    srcs: [
        "llvm/lib/Bitcode/Writer/BitWriter.cpp",
        "llvm/lib/Bitcode/Writer/BitcodeWriter.cpp",
        "llvm/lib/Bitcode/Writer/BitcodeWriterPass.cpp",
        "llvm/lib/Bitcode/Writer/ValueEnumerator.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/Bitcode/Writer",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMTarget_a",
    srcs: [
        "llvm/lib/Target/Target.cpp",
        "llvm/lib/Target/TargetIntrinsicInfo.cpp",
        "llvm/lib/Target/TargetLoweringObjectFile.cpp",
        "llvm/lib/Target/TargetMachine.cpp",
        "llvm/lib/Target/TargetMachineC.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/Target",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMPasses_a",
    srcs: [
        "llvm/lib/Passes/CodeGenPassBuilder.cpp",
        "llvm/lib/Passes/OptimizationLevel.cpp",
        "llvm/lib/Passes/PassBuilder.cpp",
        "llvm/lib/Passes/PassBuilderBindings.cpp",
        "llvm/lib/Passes/PassBuilderPipelines.cpp",
        "llvm/lib/Passes/PassPlugin.cpp",
        "llvm/lib/Passes/StandardInstrumentations.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/Passes",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMObjCARCOpts_a",
    srcs: [
        "llvm/lib/Transforms/ObjCARC/DependencyAnalysis.cpp",
        "llvm/lib/Transforms/ObjCARC/ObjCARC.cpp",
        "llvm/lib/Transforms/ObjCARC/ObjCARCAPElim.cpp",
        "llvm/lib/Transforms/ObjCARC/ObjCARCContract.cpp",
        "llvm/lib/Transforms/ObjCARC/ObjCARCExpand.cpp",
        "llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp",
        "llvm/lib/Transforms/ObjCARC/ProvenanceAnalysis.cpp",
        "llvm/lib/Transforms/ObjCARC/ProvenanceAnalysisEvaluator.cpp",
        "llvm/lib/Transforms/ObjCARC/PtrState.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/Transforms/ObjCARC",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMIRPrinter_a",
    srcs: ["llvm/lib/IRPrinter/IRPrintingPasses.cpp"],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/IRPrinter",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMHipStdPar_a",
    srcs: ["llvm/lib/Transforms/HipStdPar/HipStdPar.cpp"],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/Transforms/HipStdPar",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMCoroutines_a",
    srcs: [
        "llvm/lib/Transforms/Coroutines/CoroAnnotationElide.cpp",
        "llvm/lib/Transforms/Coroutines/CoroCleanup.cpp",
        "llvm/lib/Transforms/Coroutines/CoroConditionalWrapper.cpp",
        "llvm/lib/Transforms/Coroutines/CoroEarly.cpp",
        "llvm/lib/Transforms/Coroutines/CoroElide.cpp",
        "llvm/lib/Transforms/Coroutines/CoroFrame.cpp",
        "llvm/lib/Transforms/Coroutines/CoroSplit.cpp",
        "llvm/lib/Transforms/Coroutines/Coroutines.cpp",
        "llvm/lib/Transforms/Coroutines/MaterializationUtils.cpp",
        "llvm/lib/Transforms/Coroutines/SpillUtils.cpp",
        "llvm/lib/Transforms/Coroutines/SuspendCrossingInfo.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/Transforms/Coroutines",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMCodeGenTypes_a",
    srcs: ["llvm/lib/CodeGenTypes/LowLevelType.cpp"],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/CodeGenTypes",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMCodeGen_a",
    srcs: [
        "llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp",
        "llvm/lib/CodeGen/AllocationOrder.cpp",
        "llvm/lib/CodeGen/Analysis.cpp",
        "llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp",
        "llvm/lib/CodeGen/AtomicExpandPass.cpp",
        "llvm/lib/CodeGen/BasicBlockPathCloning.cpp",
        "llvm/lib/CodeGen/BasicBlockSections.cpp",
        "llvm/lib/CodeGen/BasicBlockSectionsProfileReader.cpp",
        "llvm/lib/CodeGen/BasicTargetTransformInfo.cpp",
        "llvm/lib/CodeGen/BranchFolding.cpp",
        "llvm/lib/CodeGen/BranchRelaxation.cpp",
        "llvm/lib/CodeGen/BreakFalseDeps.cpp",
        "llvm/lib/CodeGen/CFGuardLongjmp.cpp",
        "llvm/lib/CodeGen/CFIFixup.cpp",
        "llvm/lib/CodeGen/CFIInstrInserter.cpp",
        "llvm/lib/CodeGen/CalcSpillWeights.cpp",
        "llvm/lib/CodeGen/CallBrPrepare.cpp",
        "llvm/lib/CodeGen/CallingConvLower.cpp",
        "llvm/lib/CodeGen/CodeGen.cpp",
        "llvm/lib/CodeGen/CodeGenCommonISel.cpp",
        "llvm/lib/CodeGen/CodeGenPrepare.cpp",
        "llvm/lib/CodeGen/CodeGenTargetMachineImpl.cpp",
        "llvm/lib/CodeGen/CommandFlags.cpp",
        "llvm/lib/CodeGen/ComplexDeinterleavingPass.cpp",
        "llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp",
        "llvm/lib/CodeGen/DFAPacketizer.cpp",
        "llvm/lib/CodeGen/DeadMachineInstructionElim.cpp",
        "llvm/lib/CodeGen/DetectDeadLanes.cpp",
        "llvm/lib/CodeGen/DwarfEHPrepare.cpp",
        "llvm/lib/CodeGen/EHContGuardCatchret.cpp",
        "llvm/lib/CodeGen/EarlyIfConversion.cpp",
        "llvm/lib/CodeGen/EdgeBundles.cpp",
        "llvm/lib/CodeGen/ExecutionDomainFix.cpp",
        "llvm/lib/CodeGen/ExpandLargeDivRem.cpp",
        "llvm/lib/CodeGen/ExpandLargeFpConvert.cpp",
        "llvm/lib/CodeGen/ExpandMemCmp.cpp",
        "llvm/lib/CodeGen/ExpandPostRAPseudos.cpp",
        "llvm/lib/CodeGen/ExpandReductions.cpp",
        "llvm/lib/CodeGen/ExpandVectorPredication.cpp",
        "llvm/lib/CodeGen/FEntryInserter.cpp",
        "llvm/lib/CodeGen/FaultMaps.cpp",
        "llvm/lib/CodeGen/FinalizeISel.cpp",
        "llvm/lib/CodeGen/FixupStatepointCallerSaved.cpp",
        "llvm/lib/CodeGen/FuncletLayout.cpp",
        "llvm/lib/CodeGen/GCEmptyBasicBlocks.cpp",
        "llvm/lib/CodeGen/GCMetadata.cpp",
        "llvm/lib/CodeGen/GCMetadataPrinter.cpp",
        "llvm/lib/CodeGen/GCRootLowering.cpp",
        "llvm/lib/CodeGen/GlobalMerge.cpp",
        "llvm/lib/CodeGen/GlobalMergeFunctions.cpp",
        "llvm/lib/CodeGen/HardwareLoops.cpp",
        "llvm/lib/CodeGen/IfConversion.cpp",
        "llvm/lib/CodeGen/ImplicitNullChecks.cpp",
        "llvm/lib/CodeGen/IndirectBrExpandPass.cpp",
        "llvm/lib/CodeGen/InitUndef.cpp",
        "llvm/lib/CodeGen/InlineSpiller.cpp",
        "llvm/lib/CodeGen/InterferenceCache.cpp",
        "llvm/lib/CodeGen/InterleavedAccessPass.cpp",
        "llvm/lib/CodeGen/InterleavedLoadCombinePass.cpp",
        "llvm/lib/CodeGen/IntrinsicLowering.cpp",
        "llvm/lib/CodeGen/JMCInstrumenter.cpp",
        "llvm/lib/CodeGen/KCFI.cpp",
        "llvm/lib/CodeGen/LatencyPriorityQueue.cpp",
        "llvm/lib/CodeGen/LazyMachineBlockFrequencyInfo.cpp",
        "llvm/lib/CodeGen/LexicalScopes.cpp",
        "llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp",
        "llvm/lib/CodeGen/LiveDebugValues/LiveDebugValues.cpp",
        "llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp",
        "llvm/lib/CodeGen/LiveDebugVariables.cpp",
        "llvm/lib/CodeGen/LiveInterval.cpp",
        "llvm/lib/CodeGen/LiveIntervalCalc.cpp",
        "llvm/lib/CodeGen/LiveIntervalUnion.cpp",
        "llvm/lib/CodeGen/LiveIntervals.cpp",
        "llvm/lib/CodeGen/LivePhysRegs.cpp",
        "llvm/lib/CodeGen/LiveRangeCalc.cpp",
        "llvm/lib/CodeGen/LiveRangeEdit.cpp",
        "llvm/lib/CodeGen/LiveRangeShrink.cpp",
        "llvm/lib/CodeGen/LiveRegMatrix.cpp",
        "llvm/lib/CodeGen/LiveRegUnits.cpp",
        "llvm/lib/CodeGen/LiveStacks.cpp",
        "llvm/lib/CodeGen/LiveVariables.cpp",
        "llvm/lib/CodeGen/LocalStackSlotAllocation.cpp",
        "llvm/lib/CodeGen/LoopTraversal.cpp",
        "llvm/lib/CodeGen/LowLevelTypeUtils.cpp",
        "llvm/lib/CodeGen/LowerEmuTLS.cpp",
        "llvm/lib/CodeGen/MBFIWrapper.cpp",
        "llvm/lib/CodeGen/MIRCanonicalizerPass.cpp",
        "llvm/lib/CodeGen/MIRFSDiscriminator.cpp",
        "llvm/lib/CodeGen/MIRNamerPass.cpp",
        "llvm/lib/CodeGen/MIRPrinter.cpp",
        "llvm/lib/CodeGen/MIRPrintingPass.cpp",
        "llvm/lib/CodeGen/MIRSampleProfile.cpp",
        "llvm/lib/CodeGen/MIRVRegNamerUtils.cpp",
        "llvm/lib/CodeGen/MIRYamlMapping.cpp",
        "llvm/lib/CodeGen/MLRegAllocEvictAdvisor.cpp",
        "llvm/lib/CodeGen/MLRegAllocPriorityAdvisor.cpp",
        "llvm/lib/CodeGen/MachineBasicBlock.cpp",
        "llvm/lib/CodeGen/MachineBlockFrequencyInfo.cpp",
        "llvm/lib/CodeGen/MachineBlockPlacement.cpp",
        "llvm/lib/CodeGen/MachineBranchProbabilityInfo.cpp",
        "llvm/lib/CodeGen/MachineCFGPrinter.cpp",
        "llvm/lib/CodeGen/MachineCSE.cpp",
        "llvm/lib/CodeGen/MachineCheckDebugify.cpp",
        "llvm/lib/CodeGen/MachineCombiner.cpp",
        "llvm/lib/CodeGen/MachineConvergenceVerifier.cpp",
        "llvm/lib/CodeGen/MachineCopyPropagation.cpp",
        "llvm/lib/CodeGen/MachineCycleAnalysis.cpp",
        "llvm/lib/CodeGen/MachineDebugify.cpp",
        "llvm/lib/CodeGen/MachineDomTreeUpdater.cpp",
        "llvm/lib/CodeGen/MachineDominanceFrontier.cpp",
        "llvm/lib/CodeGen/MachineDominators.cpp",
        "llvm/lib/CodeGen/MachineFrameInfo.cpp",
        "llvm/lib/CodeGen/MachineFunction.cpp",
        "llvm/lib/CodeGen/MachineFunctionAnalysis.cpp",
        "llvm/lib/CodeGen/MachineFunctionPass.cpp",
        "llvm/lib/CodeGen/MachineFunctionPrinterPass.cpp",
        "llvm/lib/CodeGen/MachineFunctionSplitter.cpp",
        "llvm/lib/CodeGen/MachineInstr.cpp",
        "llvm/lib/CodeGen/MachineInstrBundle.cpp",
        "llvm/lib/CodeGen/MachineLICM.cpp",
        "llvm/lib/CodeGen/MachineLateInstrsCleanup.cpp",
        "llvm/lib/CodeGen/MachineLoopInfo.cpp",
        "llvm/lib/CodeGen/MachineLoopUtils.cpp",
        "llvm/lib/CodeGen/MachineModuleInfo.cpp",
        "llvm/lib/CodeGen/MachineModuleInfoImpls.cpp",
        "llvm/lib/CodeGen/MachineModuleSlotTracker.cpp",
        "llvm/lib/CodeGen/MachineOperand.cpp",
        "llvm/lib/CodeGen/MachineOptimizationRemarkEmitter.cpp",
        "llvm/lib/CodeGen/MachineOutliner.cpp",
        "llvm/lib/CodeGen/MachinePassManager.cpp",
        "llvm/lib/CodeGen/MachinePipeliner.cpp",
        "llvm/lib/CodeGen/MachinePostDominators.cpp",
        "llvm/lib/CodeGen/MachineRegionInfo.cpp",
        "llvm/lib/CodeGen/MachineRegisterInfo.cpp",
        "llvm/lib/CodeGen/MachineSSAContext.cpp",
        "llvm/lib/CodeGen/MachineSSAUpdater.cpp",
        "llvm/lib/CodeGen/MachineScheduler.cpp",
        "llvm/lib/CodeGen/MachineSink.cpp",
        "llvm/lib/CodeGen/MachineSizeOpts.cpp",
        "llvm/lib/CodeGen/MachineStableHash.cpp",
        "llvm/lib/CodeGen/MachineStripDebug.cpp",
        "llvm/lib/CodeGen/MachineTraceMetrics.cpp",
        "llvm/lib/CodeGen/MachineUniformityAnalysis.cpp",
        "llvm/lib/CodeGen/MachineVerifier.cpp",
        "llvm/lib/CodeGen/MacroFusion.cpp",
        "llvm/lib/CodeGen/ModuloSchedule.cpp",
        "llvm/lib/CodeGen/MultiHazardRecognizer.cpp",
        "llvm/lib/CodeGen/NonRelocatableStringpool.cpp",
        "llvm/lib/CodeGen/OptimizePHIs.cpp",
        "llvm/lib/CodeGen/PHIElimination.cpp",
        "llvm/lib/CodeGen/PHIEliminationUtils.cpp",
        "llvm/lib/CodeGen/PatchableFunction.cpp",
        "llvm/lib/CodeGen/PeepholeOptimizer.cpp",
        "llvm/lib/CodeGen/PostRAHazardRecognizer.cpp",
        "llvm/lib/CodeGen/PostRASchedulerList.cpp",
        "llvm/lib/CodeGen/PreISelIntrinsicLowering.cpp",
        "llvm/lib/CodeGen/ProcessImplicitDefs.cpp",
        "llvm/lib/CodeGen/PrologEpilogInserter.cpp",
        "llvm/lib/CodeGen/PseudoProbeInserter.cpp",
        "llvm/lib/CodeGen/PseudoSourceValue.cpp",
        "llvm/lib/CodeGen/RDFGraph.cpp",
        "llvm/lib/CodeGen/RDFLiveness.cpp",
        "llvm/lib/CodeGen/RDFRegisters.cpp",
        "llvm/lib/CodeGen/ReachingDefAnalysis.cpp",
        "llvm/lib/CodeGen/RegAllocBase.cpp",
        "llvm/lib/CodeGen/RegAllocBasic.cpp",
        "llvm/lib/CodeGen/RegAllocEvictionAdvisor.cpp",
        "llvm/lib/CodeGen/RegAllocFast.cpp",
        "llvm/lib/CodeGen/RegAllocGreedy.cpp",
        "llvm/lib/CodeGen/RegAllocPBQP.cpp",
        "llvm/lib/CodeGen/RegAllocPriorityAdvisor.cpp",
        "llvm/lib/CodeGen/RegAllocScore.cpp",
        "llvm/lib/CodeGen/RegUsageInfoCollector.cpp",
        "llvm/lib/CodeGen/RegUsageInfoPropagate.cpp",
        "llvm/lib/CodeGen/RegisterBank.cpp",
        "llvm/lib/CodeGen/RegisterBankInfo.cpp",
        "llvm/lib/CodeGen/RegisterClassInfo.cpp",
        "llvm/lib/CodeGen/RegisterCoalescer.cpp",
        "llvm/lib/CodeGen/RegisterPressure.cpp",
        "llvm/lib/CodeGen/RegisterScavenging.cpp",
        "llvm/lib/CodeGen/RegisterUsageInfo.cpp",
        "llvm/lib/CodeGen/RemoveLoadsIntoFakeUses.cpp",
        "llvm/lib/CodeGen/RemoveRedundantDebugValues.cpp",
        "llvm/lib/CodeGen/RenameIndependentSubregs.cpp",
        "llvm/lib/CodeGen/ReplaceWithVeclib.cpp",
        "llvm/lib/CodeGen/ResetMachineFunctionPass.cpp",
        "llvm/lib/CodeGen/SafeStack.cpp",
        "llvm/lib/CodeGen/SafeStackLayout.cpp",
        "llvm/lib/CodeGen/SanitizerBinaryMetadata.cpp",
        "llvm/lib/CodeGen/ScheduleDAG.cpp",
        "llvm/lib/CodeGen/ScheduleDAGInstrs.cpp",
        "llvm/lib/CodeGen/ScheduleDAGPrinter.cpp",
        "llvm/lib/CodeGen/ScoreboardHazardRecognizer.cpp",
        "llvm/lib/CodeGen/SelectOptimize.cpp",
        "llvm/lib/CodeGen/ShadowStackGCLowering.cpp",
        "llvm/lib/CodeGen/ShrinkWrap.cpp",
        "llvm/lib/CodeGen/SjLjEHPrepare.cpp",
        "llvm/lib/CodeGen/SlotIndexes.cpp",
        "llvm/lib/CodeGen/SpillPlacement.cpp",
        "llvm/lib/CodeGen/SplitKit.cpp",
        "llvm/lib/CodeGen/StackColoring.cpp",
        "llvm/lib/CodeGen/StackFrameLayoutAnalysisPass.cpp",
        "llvm/lib/CodeGen/StackMapLivenessAnalysis.cpp",
        "llvm/lib/CodeGen/StackMaps.cpp",
        "llvm/lib/CodeGen/StackProtector.cpp",
        "llvm/lib/CodeGen/StackSlotColoring.cpp",
        "llvm/lib/CodeGen/SwiftErrorValueTracking.cpp",
        "llvm/lib/CodeGen/SwitchLoweringUtils.cpp",
        "llvm/lib/CodeGen/TailDuplication.cpp",
        "llvm/lib/CodeGen/TailDuplicator.cpp",
        "llvm/lib/CodeGen/TargetFrameLoweringImpl.cpp",
        "llvm/lib/CodeGen/TargetInstrInfo.cpp",
        "llvm/lib/CodeGen/TargetLoweringBase.cpp",
        "llvm/lib/CodeGen/TargetLoweringObjectFileImpl.cpp",
        "llvm/lib/CodeGen/TargetOptionsImpl.cpp",
        "llvm/lib/CodeGen/TargetPassConfig.cpp",
        "llvm/lib/CodeGen/TargetRegisterInfo.cpp",
        "llvm/lib/CodeGen/TargetSchedule.cpp",
        "llvm/lib/CodeGen/TargetSubtargetInfo.cpp",
        "llvm/lib/CodeGen/TwoAddressInstructionPass.cpp",
        "llvm/lib/CodeGen/TypePromotion.cpp",
        "llvm/lib/CodeGen/UnreachableBlockElim.cpp",
        "llvm/lib/CodeGen/VLIWMachineScheduler.cpp",
        "llvm/lib/CodeGen/ValueTypes.cpp",
        "llvm/lib/CodeGen/VirtRegMap.cpp",
        "llvm/lib/CodeGen/WasmEHPrepare.cpp",
        "llvm/lib/CodeGen/WinEHPrepare.cpp",
        "llvm/lib/CodeGen/WindowScheduler.cpp",
        "llvm/lib/CodeGen/XRayInstrumentation.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/CodeGen",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMCGData_a",
    srcs: [
        "llvm/lib/CGData/CodeGenData.cpp",
        "llvm/lib/CGData/CodeGenDataReader.cpp",
        "llvm/lib/CGData/CodeGenDataWriter.cpp",
        "llvm/lib/CGData/OutlinedHashTree.cpp",
        "llvm/lib/CGData/OutlinedHashTreeRecord.cpp",
        "llvm/lib/CGData/StableFunctionMap.cpp",
        "llvm/lib/CGData/StableFunctionMapRecord.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/CGData",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMCFGuard_a",
    srcs: ["llvm/lib/Transforms/CFGuard/CFGuard.cpp"],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/Transforms/CFGuard",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMLTO_a",
    srcs: [
        "llvm/lib/LTO/LTO.cpp",
        "llvm/lib/LTO/LTOBackend.cpp",
        "llvm/lib/LTO/LTOCodeGenerator.cpp",
        "llvm/lib/LTO/LTOModule.cpp",
        "llvm/lib/LTO/ThinLTOCodeGenerator.cpp",
        "llvm/lib/LTO/UpdateCompilerUsed.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/LTO",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMExtensions_a",
    srcs: ["llvm/lib/Extensions/Extensions.cpp"],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/Extensions",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMFrontendDriver_a",
    srcs: ["llvm/lib/Frontend/Driver/CodeGenOptions.cpp"],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/Frontend/Driver",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_static {
    name: "llvm-project_lib_libLLVMCoverage_a",
    srcs: [
        "llvm/lib/ProfileData/Coverage/CoverageMapping.cpp",
        "llvm/lib/ProfileData/Coverage/CoverageMappingReader.cpp",
        "llvm/lib/ProfileData/Coverage/CoverageMappingWriter.cpp",
    ],
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
        "llvm/lib/ProfileData/Coverage",
    ],
    use_clang_lld: true,
    optimize_for_size: true,
}

cc_library_headers {
    name: "llvm-includes",
    export_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
    ],
}

cc_library_headers {
    name: "clang-includes",
    export_include_dirs: [
        "clang/include",
        "cmake_generated/tools/clang/include",
    ],
}

genrule {
    name: "clang-dep_lib_Headers_opencl-c-base_h",
    cmd: "cp $(in) $(out)",
    srcs: ["clang/lib/Headers/opencl-c-base.h"],
    out: ["opencl-c-base.h"],
}

genrule {
    name: "libclc-dep_tools_libclc_clspv--_bc",
    cmd: "cp $(in) $(out)",
    srcs: ["cmake_generated/tools/libclc/clspv--.bc"],
    out: ["clspv--.bc"],
}

genrule {
    name: "libclc-dep_tools_libclc_clspv64--_bc",
    cmd: "cp $(in) $(out)",
    srcs: ["cmake_generated/tools/libclc/clspv64--.bc"],
    out: ["clspv64--.bc"],
}
