//
// This file has been auto-generated by ninja-to-soong
//
// ******************************
// *** DO NOT MODIFY MANUALLY ***
// ******************************
//
// https://github.com/rjodinchr/ninja-to-soong
//

package {
    default_visibility: [
        "//external/clspv",
        "//external/clvk",
    ],
    default_applicable_licenses: ["llvm-project_license"],
}

license {
    name: "llvm-project_license",
    visibility: [":__subpackages__"],
    license_kinds: ["SPDX-license-identifier-Apache-2.0"],
    license_text: ["LICENSE.TXT"],
}

cc_library_static {
    name: "llvm-project_lib_libclangSupport_a",
    srcs: ["clang/lib/Support/RISCVVIntrinsicUtils.cpp"],
    local_include_dirs: [
        "clang/include",
        "clang/lib/Support",
        "cmake_generated/tools/clang/include",
    ],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMSupport_a",
    srcs: [
        "llvm/lib/Support/*.c",
        "llvm/lib/Support/*.cpp",
        "llvm/lib/Support/BLAKE3/blake3.c",
        "llvm/lib/Support/BLAKE3/blake3_dispatch.c",
        "llvm/lib/Support/BLAKE3/blake3_neon.c",
        "llvm/lib/Support/BLAKE3/blake3_portable.c",
    ],
    cflags: [
        "-DBLAKE3_NO_AVX2",
        "-DBLAKE3_NO_AVX512",
        "-DBLAKE3_NO_SSE2",
        "-DBLAKE3_NO_SSE41",
    ],
    shared_libs: ["libz"],
    local_include_dirs: [
        "llvm/lib/Support",
        "llvm/lib/Support/BLAKE3",
    ],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMDemangle_a",
    srcs: ["llvm/lib/Demangle/*.cpp"],
    local_include_dirs: ["llvm/lib/Demangle"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libclangSerialization_a",
    srcs: ["clang/lib/Serialization/*.cpp"],
    local_include_dirs: [
        "clang/include",
        "clang/lib/Serialization",
        "cmake_generated/tools/clang/include",
    ],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libclangSema_a",
    srcs: ["clang/lib/Sema/*.cpp"],
    local_include_dirs: [
        "clang/include",
        "clang/lib/Sema",
        "cmake_generated/tools/clang/include",
        "cmake_generated/tools/clang/lib/Sema",
    ],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libclangLex_a",
    srcs: ["clang/lib/Lex/*.cpp"],
    local_include_dirs: [
        "clang/include",
        "clang/lib/Lex",
        "cmake_generated/tools/clang/include",
    ],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libclangBasic_a",
    srcs: [
        "clang/lib/Basic/*.cpp",
        "clang/lib/Basic/Targets/*.cpp",
    ],
    local_include_dirs: [
        "clang/include",
        "clang/lib/Basic",
        "cmake_generated/tools/clang/include",
        "cmake_generated/tools/clang/lib/Basic",
    ],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMTransformUtils_a",
    srcs: ["llvm/lib/Transforms/Utils/*.cpp"],
    local_include_dirs: ["llvm/lib/Transforms/Utils"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMTextAPI_a",
    srcs: ["llvm/lib/TextAPI/*.cpp"],
    local_include_dirs: ["llvm/lib/TextAPI"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMTargetParser_a",
    srcs: ["llvm/lib/TargetParser/*.cpp"],
    local_include_dirs: ["llvm/lib/TargetParser"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMBinaryFormat_a",
    srcs: ["llvm/lib/BinaryFormat/*.cpp"],
    local_include_dirs: ["llvm/lib/BinaryFormat"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMSymbolize_a",
    srcs: ["llvm/lib/DebugInfo/Symbolize/*.cpp"],
    local_include_dirs: ["llvm/lib/DebugInfo/Symbolize"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMRemarks_a",
    srcs: ["llvm/lib/Remarks/*.cpp"],
    local_include_dirs: ["llvm/lib/Remarks"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMBitstreamReader_a",
    srcs: ["llvm/lib/Bitstream/Reader/BitstreamReader.cpp"],
    local_include_dirs: ["llvm/lib/Bitstream/Reader"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMObject_a",
    srcs: ["llvm/lib/Object/*.cpp"],
    local_include_dirs: ["llvm/lib/Object"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMMCParser_a",
    srcs: ["llvm/lib/MC/MCParser/*.cpp"],
    local_include_dirs: ["llvm/lib/MC/MCParser"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMMC_a",
    srcs: ["llvm/lib/MC/*.cpp"],
    local_include_dirs: ["llvm/lib/MC"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMIRReader_a",
    srcs: ["llvm/lib/IRReader/IRReader.cpp"],
    local_include_dirs: ["llvm/lib/IRReader"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMCore_a",
    srcs: ["llvm/lib/IR/*.cpp"],
    local_include_dirs: ["llvm/lib/IR"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMBitReader_a",
    srcs: ["llvm/lib/Bitcode/Reader/*.cpp"],
    local_include_dirs: ["llvm/lib/Bitcode/Reader"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMAsmParser_a",
    srcs: ["llvm/lib/AsmParser/*.cpp"],
    local_include_dirs: ["llvm/lib/AsmParser"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMDebugInfoPDB_a",
    srcs: [
        "llvm/lib/DebugInfo/PDB/*.cpp",
        "llvm/lib/DebugInfo/PDB/Native/*.cpp",
    ],
    local_include_dirs: ["llvm/lib/DebugInfo/PDB"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMDebugInfoMSF_a",
    srcs: ["llvm/lib/DebugInfo/MSF/*.cpp"],
    local_include_dirs: ["llvm/lib/DebugInfo/MSF"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMDebugInfoCodeView_a",
    srcs: ["llvm/lib/DebugInfo/CodeView/*.cpp"],
    local_include_dirs: ["llvm/lib/DebugInfo/CodeView"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMDebugInfoDWARF_a",
    srcs: ["llvm/lib/DebugInfo/DWARF/*.cpp"],
    local_include_dirs: ["llvm/lib/DebugInfo/DWARF"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMDebugInfoBTF_a",
    srcs: ["llvm/lib/DebugInfo/BTF/*.cpp"],
    local_include_dirs: ["llvm/lib/DebugInfo/BTF"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMProfileData_a",
    srcs: ["llvm/lib/ProfileData/*.cpp"],
    local_include_dirs: ["llvm/lib/ProfileData"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMAnalysis_a",
    srcs: ["llvm/lib/Analysis/*.cpp"],
    local_include_dirs: ["llvm/lib/Analysis"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMScalarOpts_a",
    srcs: ["llvm/lib/Transforms/Scalar/*.cpp"],
    local_include_dirs: ["llvm/lib/Transforms/Scalar"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMInstCombine_a",
    srcs: ["llvm/lib/Transforms/InstCombine/*.cpp"],
    local_include_dirs: ["llvm/lib/Transforms/InstCombine"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMAggressiveInstCombine_a",
    srcs: ["llvm/lib/Transforms/AggressiveInstCombine/*.cpp"],
    local_include_dirs: ["llvm/lib/Transforms/AggressiveInstCombine"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMFrontendOpenMP_a",
    srcs: ["llvm/lib/Frontend/OpenMP/*.cpp"],
    local_include_dirs: ["llvm/lib/Frontend/OpenMP"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMFrontendOffloading_a",
    srcs: ["llvm/lib/Frontend/Offloading/*.cpp"],
    local_include_dirs: ["llvm/lib/Frontend/Offloading"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMFrontendAtomic_a",
    srcs: ["llvm/lib/Frontend/Atomic/Atomic.cpp"],
    local_include_dirs: ["llvm/lib/Frontend/Atomic"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libclangEdit_a",
    srcs: ["clang/lib/Edit/*.cpp"],
    local_include_dirs: [
        "clang/include",
        "clang/lib/Edit",
        "cmake_generated/tools/clang/include",
    ],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libclangAST_a",
    srcs: [
        "clang/lib/AST/*.cpp",
        "clang/lib/AST/ByteCode/*.cpp",
    ],
    local_include_dirs: [
        "clang/include",
        "clang/lib/AST",
        "cmake_generated/tools/clang/include",
        "cmake_generated/tools/clang/lib/AST",
    ],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libclangAnalysis_a",
    srcs: ["clang/lib/Analysis/*.cpp"],
    local_include_dirs: [
        "clang/include",
        "clang/lib/Analysis",
        "cmake_generated/tools/clang/include",
    ],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libclangASTMatchers_a",
    srcs: ["clang/lib/ASTMatchers/*.cpp"],
    local_include_dirs: [
        "clang/include",
        "clang/lib/ASTMatchers",
        "cmake_generated/tools/clang/include",
    ],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libclangAPINotes_a",
    srcs: ["clang/lib/APINotes/*.cpp"],
    local_include_dirs: [
        "clang/include",
        "clang/lib/APINotes",
        "cmake_generated/tools/clang/include",
    ],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMFrontendHLSL_a",
    srcs: ["llvm/lib/Frontend/HLSL/HLSLResource.cpp"],
    local_include_dirs: ["llvm/lib/Frontend/HLSL"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libclangParse_a",
    srcs: ["clang/lib/Parse/*.cpp"],
    local_include_dirs: [
        "clang/include",
        "clang/lib/Parse",
        "cmake_generated/tools/clang/include",
    ],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libclangFrontend_a",
    srcs: ["clang/lib/Frontend/*.cpp"],
    local_include_dirs: [
        "clang/include",
        "clang/lib/Frontend",
        "cmake_generated/tools/clang/include",
    ],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libclangDriver_a",
    srcs: [
        "clang/lib/Driver/*.cpp",
        "clang/lib/Driver/ToolChains/*.cpp",
        "clang/lib/Driver/ToolChains/Arch/*.cpp",
    ],
    local_include_dirs: [
        "clang/include",
        "clang/lib/Driver",
        "cmake_generated/tools/clang/include",
    ],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMWindowsDriver_a",
    srcs: ["llvm/lib/WindowsDriver/MSVCPaths.cpp"],
    local_include_dirs: ["llvm/lib/WindowsDriver"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMOption_a",
    srcs: ["llvm/lib/Option/*.cpp"],
    local_include_dirs: ["llvm/lib/Option"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libclangCodeGen_a",
    srcs: [
        "clang/lib/CodeGen/*.cpp",
        "clang/lib/CodeGen/Targets/*.cpp",
    ],
    local_include_dirs: [
        "clang/include",
        "clang/lib/CodeGen",
        "cmake_generated/tools/clang/include",
    ],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMipo_a",
    srcs: ["llvm/lib/Transforms/IPO/*.cpp"],
    local_include_dirs: ["llvm/lib/Transforms/IPO"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMVectorize_a",
    srcs: [
        "llvm/lib/Transforms/Vectorize/*.cpp",
        "llvm/lib/Transforms/Vectorize/SandboxVectorizer/*.cpp",
        "llvm/lib/Transforms/Vectorize/SandboxVectorizer/Passes/*.cpp",
    ],
    local_include_dirs: ["llvm/lib/Transforms/Vectorize"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMSandboxIR_a",
    srcs: ["llvm/lib/SandboxIR/*.cpp"],
    local_include_dirs: ["llvm/lib/SandboxIR"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMLinker_a",
    srcs: ["llvm/lib/Linker/*.cpp"],
    local_include_dirs: ["llvm/lib/Linker"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMInstrumentation_a",
    srcs: ["llvm/lib/Transforms/Instrumentation/*.cpp"],
    local_include_dirs: ["llvm/lib/Transforms/Instrumentation"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMBitWriter_a",
    srcs: ["llvm/lib/Bitcode/Writer/*.cpp"],
    local_include_dirs: ["llvm/lib/Bitcode/Writer"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMTarget_a",
    srcs: ["llvm/lib/Target/*.cpp"],
    local_include_dirs: ["llvm/lib/Target"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMPasses_a",
    srcs: ["llvm/lib/Passes/*.cpp"],
    local_include_dirs: ["llvm/lib/Passes"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMObjCARCOpts_a",
    srcs: ["llvm/lib/Transforms/ObjCARC/*.cpp"],
    local_include_dirs: ["llvm/lib/Transforms/ObjCARC"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMIRPrinter_a",
    srcs: ["llvm/lib/IRPrinter/IRPrintingPasses.cpp"],
    local_include_dirs: ["llvm/lib/IRPrinter"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMHipStdPar_a",
    srcs: ["llvm/lib/Transforms/HipStdPar/HipStdPar.cpp"],
    local_include_dirs: ["llvm/lib/Transforms/HipStdPar"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMCoroutines_a",
    srcs: ["llvm/lib/Transforms/Coroutines/*.cpp"],
    local_include_dirs: ["llvm/lib/Transforms/Coroutines"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMCodeGenTypes_a",
    srcs: ["llvm/lib/CodeGenTypes/LowLevelType.cpp"],
    local_include_dirs: ["llvm/lib/CodeGenTypes"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMCodeGen_a",
    srcs: [
        "llvm/lib/CodeGen/*.cpp",
        "llvm/lib/CodeGen/LiveDebugValues/*.cpp",
    ],
    local_include_dirs: ["llvm/lib/CodeGen"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMCGData_a",
    srcs: ["llvm/lib/CGData/*.cpp"],
    local_include_dirs: ["llvm/lib/CGData"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMCFGuard_a",
    srcs: ["llvm/lib/Transforms/CFGuard/CFGuard.cpp"],
    local_include_dirs: ["llvm/lib/Transforms/CFGuard"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMLTO_a",
    srcs: ["llvm/lib/LTO/*.cpp"],
    local_include_dirs: ["llvm/lib/LTO"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMExtensions_a",
    srcs: ["llvm/lib/Extensions/Extensions.cpp"],
    local_include_dirs: ["llvm/lib/Extensions"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMFrontendDriver_a",
    srcs: ["llvm/lib/Frontend/Driver/CodeGenOptions.cpp"],
    local_include_dirs: ["llvm/lib/Frontend/Driver"],
    defaults: ["llvm-project-defaults"],
}

cc_library_static {
    name: "llvm-project_lib_libLLVMCoverage_a",
    srcs: ["llvm/lib/ProfileData/Coverage/*.cpp"],
    local_include_dirs: ["llvm/lib/ProfileData/Coverage"],
    defaults: ["llvm-project-defaults"],
}

cc_library_headers {
    name: "llvm-includes",
    export_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
    ],
}

cc_library_headers {
    name: "clang-includes",
    export_include_dirs: [
        "clang/include",
        "cmake_generated/tools/clang/include",
    ],
}

cc_defaults {
    name: "llvm-project-defaults",
    local_include_dirs: [
        "cmake_generated/include",
        "llvm/include",
    ],
    defaults: ["llvm-project-raw-defaults"],
}

filegroup {
    name: "ClangHeaders_lib_Headers_opencl-c-base_h",
    srcs: ["clang/lib/Headers/opencl-c-base.h"],
}

filegroup {
    name: "LibclcBins_tools_libclc_clspv--_bc",
    srcs: ["cmake_generated/tools/libclc/clspv--.bc"],
}

filegroup {
    name: "LibclcBins_tools_libclc_clspv64--_bc",
    srcs: ["cmake_generated/tools/libclc/clspv64--.bc"],
}

cc_defaults {
    name: "llvm-project-raw-defaults",
    optimize_for_size: true,
    cflags: [
        "-Wno-error",
        "-Wno-unreachable-code-loop-increment",
    ],
}
