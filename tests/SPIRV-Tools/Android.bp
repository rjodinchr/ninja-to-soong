//
// This file has been auto-generated by ninja-to-soong
//
// ******************************
// *** DO NOT MODIFY MANUALLY ***
// ******************************
//
// https://github.com/rjodinchr/ninja-to-soong
//

package {
    default_visibility: ["//external/clvk"],
    default_applicable_licenses: ["SPIRV-Tools_license"],
}

license {
    name: "SPIRV-Tools_license",
    visibility: [":__subpackages__"],
    license_kinds: ["SPDX-license-identifier-Apache-2.0"],
    license_text: ["LICENSE"],
}

cc_library_static {
    name: "SPIRV-Tools_source_opt_libSPIRV-Tools-opt_a",
    srcs: [
        "source/opt/aggressive_dead_code_elim_pass.cpp",
        "source/opt/amd_ext_to_khr.cpp",
        "source/opt/analyze_live_input_pass.cpp",
        "source/opt/basic_block.cpp",
        "source/opt/block_merge_pass.cpp",
        "source/opt/block_merge_util.cpp",
        "source/opt/build_module.cpp",
        "source/opt/ccp_pass.cpp",
        "source/opt/cfg.cpp",
        "source/opt/cfg_cleanup_pass.cpp",
        "source/opt/code_sink.cpp",
        "source/opt/combine_access_chains.cpp",
        "source/opt/compact_ids_pass.cpp",
        "source/opt/composite.cpp",
        "source/opt/const_folding_rules.cpp",
        "source/opt/constants.cpp",
        "source/opt/control_dependence.cpp",
        "source/opt/convert_to_half_pass.cpp",
        "source/opt/convert_to_sampled_image_pass.cpp",
        "source/opt/copy_prop_arrays.cpp",
        "source/opt/dataflow.cpp",
        "source/opt/dead_branch_elim_pass.cpp",
        "source/opt/dead_insert_elim_pass.cpp",
        "source/opt/dead_variable_elimination.cpp",
        "source/opt/debug_info_manager.cpp",
        "source/opt/decoration_manager.cpp",
        "source/opt/def_use_manager.cpp",
        "source/opt/desc_sroa.cpp",
        "source/opt/desc_sroa_util.cpp",
        "source/opt/dominator_analysis.cpp",
        "source/opt/dominator_tree.cpp",
        "source/opt/eliminate_dead_constant_pass.cpp",
        "source/opt/eliminate_dead_functions_pass.cpp",
        "source/opt/eliminate_dead_functions_util.cpp",
        "source/opt/eliminate_dead_io_components_pass.cpp",
        "source/opt/eliminate_dead_members_pass.cpp",
        "source/opt/eliminate_dead_output_stores_pass.cpp",
        "source/opt/feature_manager.cpp",
        "source/opt/fix_func_call_arguments.cpp",
        "source/opt/fix_storage_class.cpp",
        "source/opt/flatten_decoration_pass.cpp",
        "source/opt/fold.cpp",
        "source/opt/fold_spec_constant_op_and_composite_pass.cpp",
        "source/opt/folding_rules.cpp",
        "source/opt/freeze_spec_constant_value_pass.cpp",
        "source/opt/function.cpp",
        "source/opt/graphics_robust_access_pass.cpp",
        "source/opt/if_conversion.cpp",
        "source/opt/inline_exhaustive_pass.cpp",
        "source/opt/inline_opaque_pass.cpp",
        "source/opt/inline_pass.cpp",
        "source/opt/instruction.cpp",
        "source/opt/instruction_list.cpp",
        "source/opt/interface_var_sroa.cpp",
        "source/opt/interp_fixup_pass.cpp",
        "source/opt/invocation_interlock_placement_pass.cpp",
        "source/opt/ir_context.cpp",
        "source/opt/ir_loader.cpp",
        "source/opt/licm_pass.cpp",
        "source/opt/liveness.cpp",
        "source/opt/local_access_chain_convert_pass.cpp",
        "source/opt/local_redundancy_elimination.cpp",
        "source/opt/local_single_block_elim_pass.cpp",
        "source/opt/local_single_store_elim_pass.cpp",
        "source/opt/loop_dependence.cpp",
        "source/opt/loop_dependence_helpers.cpp",
        "source/opt/loop_descriptor.cpp",
        "source/opt/loop_fission.cpp",
        "source/opt/loop_fusion.cpp",
        "source/opt/loop_fusion_pass.cpp",
        "source/opt/loop_peeling.cpp",
        "source/opt/loop_unroller.cpp",
        "source/opt/loop_unswitch_pass.cpp",
        "source/opt/loop_utils.cpp",
        "source/opt/mem_pass.cpp",
        "source/opt/merge_return_pass.cpp",
        "source/opt/modify_maximal_reconvergence.cpp",
        "source/opt/module.cpp",
        "source/opt/opextinst_forward_ref_fixup_pass.cpp",
        "source/opt/optimizer.cpp",
        "source/opt/pass.cpp",
        "source/opt/pass_manager.cpp",
        "source/opt/private_to_local_pass.cpp",
        "source/opt/propagator.cpp",
        "source/opt/reduce_load_size.cpp",
        "source/opt/redundancy_elimination.cpp",
        "source/opt/register_pressure.cpp",
        "source/opt/relax_float_ops_pass.cpp",
        "source/opt/remove_dontinline_pass.cpp",
        "source/opt/remove_duplicates_pass.cpp",
        "source/opt/remove_unused_interface_variables_pass.cpp",
        "source/opt/replace_desc_array_access_using_var_index.cpp",
        "source/opt/replace_invalid_opc.cpp",
        "source/opt/scalar_analysis.cpp",
        "source/opt/scalar_analysis_simplification.cpp",
        "source/opt/scalar_replacement_pass.cpp",
        "source/opt/set_spec_constant_default_value_pass.cpp",
        "source/opt/simplification_pass.cpp",
        "source/opt/spread_volatile_semantics.cpp",
        "source/opt/ssa_rewrite_pass.cpp",
        "source/opt/strength_reduction_pass.cpp",
        "source/opt/strip_debug_info_pass.cpp",
        "source/opt/strip_nonsemantic_info_pass.cpp",
        "source/opt/struct_cfg_analysis.cpp",
        "source/opt/struct_packing_pass.cpp",
        "source/opt/switch_descriptorset_pass.cpp",
        "source/opt/trim_capabilities_pass.cpp",
        "source/opt/type_manager.cpp",
        "source/opt/types.cpp",
        "source/opt/unify_const_pass.cpp",
        "source/opt/upgrade_memory_model.cpp",
        "source/opt/value_number_table.cpp",
        "source/opt/vector_dce.cpp",
        "source/opt/workaround1209.cpp",
        "source/opt/wrap_opkill.cpp",
    ],
    cflags: ["-Wno-implicit-fallthrough"],
    local_include_dirs: [
        "",
        "include",
    ],
    generated_headers: [
        "SPIRV-Tools_DebugInfo_h",
        "SPIRV-Tools_NonSemanticShaderDebugInfo100_h",
        "SPIRV-Tools_OpenCLDebugInfo100_h",
        "SPIRV-Tools_build-version_inc",
        "SPIRV-Tools_core_insts-unified1_inc",
        "SPIRV-Tools_debuginfo_insts_inc",
        "SPIRV-Tools_extension_enum_inc",
        "SPIRV-Tools_generators_inc",
        "SPIRV-Tools_glsl_std_450_insts_inc",
        "SPIRV-Tools_nonsemantic_clspvreflection_insts_inc",
        "SPIRV-Tools_nonsemantic_shader_debuginfo_100_insts_inc",
        "SPIRV-Tools_nonsemantic_vkspreflection_insts_inc",
        "SPIRV-Tools_opencl_debuginfo_100_insts_inc",
        "SPIRV-Tools_opencl_std_insts_inc",
        "SPIRV-Tools_spv-amd-gcn-shader_insts_inc",
        "SPIRV-Tools_spv-amd-shader-ballot_insts_inc",
        "SPIRV-Tools_spv-amd-shader-explicit-vertex-parameter_insts_inc",
        "SPIRV-Tools_spv-amd-shader-trinary-minmax_insts_inc",
    ],
    header_libs: ["SPIRV-Headers-includes"],
    export_include_dirs: ["include"],
    export_header_lib_headers: ["SPIRV-Headers-includes"],
}

cc_library_static {
    name: "SPIRV-Tools_source_libSPIRV-Tools_a",
    srcs: [
        "source/assembly_grammar.cpp",
        "source/binary.cpp",
        "source/diagnostic.cpp",
        "source/disassemble.cpp",
        "source/enum_string_mapping.cpp",
        "source/ext_inst.cpp",
        "source/extensions.cpp",
        "source/libspirv.cpp",
        "source/name_mapper.cpp",
        "source/opcode.cpp",
        "source/operand.cpp",
        "source/parsed_operand.cpp",
        "source/print.cpp",
        "source/software_version.cpp",
        "source/spirv_endian.cpp",
        "source/spirv_fuzzer_options.cpp",
        "source/spirv_optimizer_options.cpp",
        "source/spirv_reducer_options.cpp",
        "source/spirv_target_env.cpp",
        "source/spirv_validator_options.cpp",
        "source/table.cpp",
        "source/text.cpp",
        "source/text_handler.cpp",
        "source/to_string.cpp",
        "source/util/bit_vector.cpp",
        "source/util/parse_number.cpp",
        "source/util/string_utils.cpp",
        "source/util/timer.cpp",
        "source/val/basic_block.cpp",
        "source/val/construct.cpp",
        "source/val/function.cpp",
        "source/val/instruction.cpp",
        "source/val/validate.cpp",
        "source/val/validate_adjacency.cpp",
        "source/val/validate_annotation.cpp",
        "source/val/validate_arithmetics.cpp",
        "source/val/validate_atomics.cpp",
        "source/val/validate_barriers.cpp",
        "source/val/validate_bitwise.cpp",
        "source/val/validate_builtins.cpp",
        "source/val/validate_capability.cpp",
        "source/val/validate_cfg.cpp",
        "source/val/validate_composites.cpp",
        "source/val/validate_constants.cpp",
        "source/val/validate_conversion.cpp",
        "source/val/validate_debug.cpp",
        "source/val/validate_decorations.cpp",
        "source/val/validate_derivatives.cpp",
        "source/val/validate_execution_limitations.cpp",
        "source/val/validate_extensions.cpp",
        "source/val/validate_function.cpp",
        "source/val/validate_id.cpp",
        "source/val/validate_image.cpp",
        "source/val/validate_instruction.cpp",
        "source/val/validate_interfaces.cpp",
        "source/val/validate_layout.cpp",
        "source/val/validate_literals.cpp",
        "source/val/validate_logicals.cpp",
        "source/val/validate_memory.cpp",
        "source/val/validate_memory_semantics.cpp",
        "source/val/validate_mesh_shading.cpp",
        "source/val/validate_misc.cpp",
        "source/val/validate_mode_setting.cpp",
        "source/val/validate_non_uniform.cpp",
        "source/val/validate_primitives.cpp",
        "source/val/validate_ray_query.cpp",
        "source/val/validate_ray_tracing.cpp",
        "source/val/validate_ray_tracing_reorder.cpp",
        "source/val/validate_scopes.cpp",
        "source/val/validate_small_type_uses.cpp",
        "source/val/validate_tensor_layout.cpp",
        "source/val/validate_type.cpp",
        "source/val/validation_state.cpp",
    ],
    cflags: ["-Wno-implicit-fallthrough"],
    local_include_dirs: [
        "",
        "include",
    ],
    generated_headers: [
        "SPIRV-Tools_DebugInfo_h",
        "SPIRV-Tools_NonSemanticShaderDebugInfo100_h",
        "SPIRV-Tools_OpenCLDebugInfo100_h",
        "SPIRV-Tools_build-version_inc",
        "SPIRV-Tools_core_insts-unified1_inc",
        "SPIRV-Tools_debuginfo_insts_inc",
        "SPIRV-Tools_extension_enum_inc",
        "SPIRV-Tools_generators_inc",
        "SPIRV-Tools_glsl_std_450_insts_inc",
        "SPIRV-Tools_nonsemantic_clspvreflection_insts_inc",
        "SPIRV-Tools_nonsemantic_shader_debuginfo_100_insts_inc",
        "SPIRV-Tools_nonsemantic_vkspreflection_insts_inc",
        "SPIRV-Tools_opencl_debuginfo_100_insts_inc",
        "SPIRV-Tools_opencl_std_insts_inc",
        "SPIRV-Tools_spv-amd-gcn-shader_insts_inc",
        "SPIRV-Tools_spv-amd-shader-ballot_insts_inc",
        "SPIRV-Tools_spv-amd-shader-explicit-vertex-parameter_insts_inc",
        "SPIRV-Tools_spv-amd-shader-trinary-minmax_insts_inc",
    ],
    header_libs: ["SPIRV-Headers-includes"],
    export_include_dirs: ["include"],
    export_header_lib_headers: ["SPIRV-Headers-includes"],
}

cc_genrule {
    name: "SPIRV-Tools_build-version_inc",
    cmd: "$(location utils/update_build_version.py) $(location CHANGES) $(location build-version.inc)",
    srcs: [
        "CHANGES",
        "utils/update_build_version.py",
    ],
    out: ["build-version.inc"],
}

cc_genrule {
    name: "SPIRV-Tools_nonsemantic_vkspreflection_insts_inc",
    cmd: "$(location utils/generate_grammar_tables.py) --extinst-vendor-grammar=$(location :SpirvHeaders_include_spirv_unified1_extinst_nonsemantic_vkspreflection_grammar_json) --vendor-insts-output=$(location nonsemantic.vkspreflection.insts.inc) --vendor-operand-kind-prefix=",
    srcs: [
        ":SpirvHeaders_include_spirv_unified1_extinst_nonsemantic_vkspreflection_grammar_json",
        "utils/generate_grammar_tables.py",
    ],
    out: ["nonsemantic.vkspreflection.insts.inc"],
}

cc_genrule {
    name: "SPIRV-Tools_spv-amd-shader-trinary-minmax_insts_inc",
    cmd: "$(location utils/generate_grammar_tables.py) --extinst-vendor-grammar=$(location :SpirvHeaders_include_spirv_unified1_extinst_spv-amd-shader-trinary-minmax_grammar_json) --vendor-insts-output=$(location spv-amd-shader-trinary-minmax.insts.inc) --vendor-operand-kind-prefix=",
    srcs: [
        ":SpirvHeaders_include_spirv_unified1_extinst_spv-amd-shader-trinary-minmax_grammar_json",
        "utils/generate_grammar_tables.py",
    ],
    out: ["spv-amd-shader-trinary-minmax.insts.inc"],
}

cc_genrule {
    name: "SPIRV-Tools_spv-amd-shader-explicit-vertex-parameter_insts_inc",
    cmd: "$(location utils/generate_grammar_tables.py) --extinst-vendor-grammar=$(location :SpirvHeaders_include_spirv_unified1_extinst_spv-amd-shader-explicit-vertex-parameter_grammar_json) --vendor-insts-output=$(location spv-amd-shader-explicit-vertex-parameter.insts.inc) --vendor-operand-kind-prefix=",
    srcs: [
        ":SpirvHeaders_include_spirv_unified1_extinst_spv-amd-shader-explicit-vertex-parameter_grammar_json",
        "utils/generate_grammar_tables.py",
    ],
    out: ["spv-amd-shader-explicit-vertex-parameter.insts.inc"],
}

cc_genrule {
    name: "SPIRV-Tools_spv-amd-shader-ballot_insts_inc",
    cmd: "$(location utils/generate_grammar_tables.py) --extinst-vendor-grammar=$(location :SpirvHeaders_include_spirv_unified1_extinst_spv-amd-shader-ballot_grammar_json) --vendor-insts-output=$(location spv-amd-shader-ballot.insts.inc) --vendor-operand-kind-prefix=",
    srcs: [
        ":SpirvHeaders_include_spirv_unified1_extinst_spv-amd-shader-ballot_grammar_json",
        "utils/generate_grammar_tables.py",
    ],
    out: ["spv-amd-shader-ballot.insts.inc"],
}

cc_genrule {
    name: "SPIRV-Tools_spv-amd-gcn-shader_insts_inc",
    cmd: "$(location utils/generate_grammar_tables.py) --extinst-vendor-grammar=$(location :SpirvHeaders_include_spirv_unified1_extinst_spv-amd-gcn-shader_grammar_json) --vendor-insts-output=$(location spv-amd-gcn-shader.insts.inc) --vendor-operand-kind-prefix=",
    srcs: [
        ":SpirvHeaders_include_spirv_unified1_extinst_spv-amd-gcn-shader_grammar_json",
        "utils/generate_grammar_tables.py",
    ],
    out: ["spv-amd-gcn-shader.insts.inc"],
}

cc_genrule {
    name: "SPIRV-Tools_nonsemantic_shader_debuginfo_100_insts_inc",
    cmd: "$(location utils/generate_grammar_tables.py) --extinst-vendor-grammar=$(location :SpirvHeaders_include_spirv_unified1_extinst_nonsemantic_shader_debuginfo_100_grammar_json) --vendor-insts-output=$(location nonsemantic.shader.debuginfo.100.insts.inc) --vendor-operand-kind-prefix=SHDEBUG100_",
    srcs: [
        ":SpirvHeaders_include_spirv_unified1_extinst_nonsemantic_shader_debuginfo_100_grammar_json",
        "utils/generate_grammar_tables.py",
    ],
    out: ["nonsemantic.shader.debuginfo.100.insts.inc"],
}

cc_genrule {
    name: "SPIRV-Tools_debuginfo_insts_inc",
    cmd: "$(location utils/generate_grammar_tables.py) --extinst-vendor-grammar=$(location :SpirvHeaders_include_spirv_unified1_extinst_debuginfo_grammar_json) --vendor-insts-output=$(location debuginfo.insts.inc) --vendor-operand-kind-prefix=",
    srcs: [
        ":SpirvHeaders_include_spirv_unified1_extinst_debuginfo_grammar_json",
        "utils/generate_grammar_tables.py",
    ],
    out: ["debuginfo.insts.inc"],
}

cc_genrule {
    name: "SPIRV-Tools_nonsemantic_clspvreflection_insts_inc",
    cmd: "$(location utils/generate_grammar_tables.py) --extinst-vendor-grammar=$(location :SpirvHeaders_include_spirv_unified1_extinst_nonsemantic_clspvreflection_grammar_json) --vendor-insts-output=$(location nonsemantic.clspvreflection.insts.inc) --vendor-operand-kind-prefix=",
    srcs: [
        ":SpirvHeaders_include_spirv_unified1_extinst_nonsemantic_clspvreflection_grammar_json",
        "utils/generate_grammar_tables.py",
    ],
    out: ["nonsemantic.clspvreflection.insts.inc"],
}

cc_genrule {
    name: "SPIRV-Tools_opencl_debuginfo_100_insts_inc",
    cmd: "$(location utils/generate_grammar_tables.py) --extinst-vendor-grammar=$(location :SpirvHeaders_include_spirv_unified1_extinst_opencl_debuginfo_100_grammar_json) --vendor-insts-output=$(location opencl.debuginfo.100.insts.inc) --vendor-operand-kind-prefix=CLDEBUG100_",
    srcs: [
        ":SpirvHeaders_include_spirv_unified1_extinst_opencl_debuginfo_100_grammar_json",
        "utils/generate_grammar_tables.py",
    ],
    out: ["opencl.debuginfo.100.insts.inc"],
}

cc_genrule {
    name: "SPIRV-Tools_OpenCLDebugInfo100_h",
    cmd: "$(location utils/generate_language_headers.py) --extinst-grammar=$(location :SpirvHeaders_include_spirv_unified1_extinst_opencl_debuginfo_100_grammar_json) --extinst-output-path=$(location OpenCLDebugInfo100.h)",
    srcs: [
        ":SpirvHeaders_include_spirv_unified1_extinst_opencl_debuginfo_100_grammar_json",
        "utils/generate_language_headers.py",
    ],
    out: ["OpenCLDebugInfo100.h"],
}

cc_genrule {
    name: "SPIRV-Tools_NonSemanticShaderDebugInfo100_h",
    cmd: "$(location utils/generate_language_headers.py) --extinst-grammar=$(location :SpirvHeaders_include_spirv_unified1_extinst_nonsemantic_shader_debuginfo_100_grammar_json) --extinst-output-path=$(location NonSemanticShaderDebugInfo100.h)",
    srcs: [
        ":SpirvHeaders_include_spirv_unified1_extinst_nonsemantic_shader_debuginfo_100_grammar_json",
        "utils/generate_language_headers.py",
    ],
    out: ["NonSemanticShaderDebugInfo100.h"],
}

cc_genrule {
    name: "SPIRV-Tools_DebugInfo_h",
    cmd: "$(location utils/generate_language_headers.py) --extinst-grammar=$(location :SpirvHeaders_include_spirv_unified1_extinst_debuginfo_grammar_json) --extinst-output-path=$(location DebugInfo.h)",
    srcs: [
        ":SpirvHeaders_include_spirv_unified1_extinst_debuginfo_grammar_json",
        "utils/generate_language_headers.py",
    ],
    out: ["DebugInfo.h"],
}

cc_genrule {
    name: "SPIRV-Tools_opencl_std_insts_inc",
    cmd: "$(location utils/generate_grammar_tables.py) --extinst-opencl-grammar=$(location :SpirvHeaders_include_spirv_unified1_extinst_opencl_std_100_grammar_json) --opencl-insts-output=$(location opencl.std.insts.inc)",
    srcs: [
        ":SpirvHeaders_include_spirv_unified1_extinst_opencl_std_100_grammar_json",
        ":SpirvHeaders_include_spirv_unified1_spirv_core_grammar_json",
        "utils/generate_grammar_tables.py",
    ],
    out: ["opencl.std.insts.inc"],
}

cc_genrule {
    name: "SPIRV-Tools_glsl_std_450_insts_inc",
    cmd: "$(location utils/generate_grammar_tables.py) --extinst-glsl-grammar=$(location :SpirvHeaders_include_spirv_unified1_extinst_glsl_std_450_grammar_json) --glsl-insts-output=$(location glsl.std.450.insts.inc) --output-language=c++",
    srcs: [
        ":SpirvHeaders_include_spirv_unified1_extinst_glsl_std_450_grammar_json",
        ":SpirvHeaders_include_spirv_unified1_spirv_core_grammar_json",
        "utils/generate_grammar_tables.py",
    ],
    out: ["glsl.std.450.insts.inc"],
}

cc_genrule {
    name: "SPIRV-Tools_extension_enum_inc",
    cmd: "$(location utils/generate_grammar_tables.py) --spirv-core-grammar=$(location :SpirvHeaders_include_spirv_unified1_spirv_core_grammar_json) --extinst-debuginfo-grammar=$(location :SpirvHeaders_include_spirv_unified1_extinst_debuginfo_grammar_json) --extinst-cldebuginfo100-grammar=$(location :SpirvHeaders_include_spirv_unified1_extinst_opencl_debuginfo_100_grammar_json) --extension-enum-output=$(location extension_enum.inc) --enum-string-mapping-output=$(location enum_string_mapping.inc) --output-language=c++",
    srcs: [
        ":SpirvHeaders_include_spirv_unified1_extinst_debuginfo_grammar_json",
        ":SpirvHeaders_include_spirv_unified1_extinst_opencl_debuginfo_100_grammar_json",
        ":SpirvHeaders_include_spirv_unified1_spirv_core_grammar_json",
        "utils/generate_grammar_tables.py",
    ],
    out: [
        "enum_string_mapping.inc",
        "extension_enum.inc",
    ],
}

cc_genrule {
    name: "SPIRV-Tools_generators_inc",
    cmd: "$(location utils/generate_registry_tables.py) --xml=$(location :SpirvHeaders_include_spirv_spir-v_xml) --generator-output=$(location generators.inc)",
    srcs: [
        ":SpirvHeaders_include_spirv_spir-v_xml",
        "utils/generate_registry_tables.py",
    ],
    out: ["generators.inc"],
}

cc_genrule {
    name: "SPIRV-Tools_core_insts-unified1_inc",
    cmd: "$(location utils/generate_grammar_tables.py) --spirv-core-grammar=$(location :SpirvHeaders_include_spirv_unified1_spirv_core_grammar_json) --extinst-debuginfo-grammar=$(location :SpirvHeaders_include_spirv_unified1_extinst_debuginfo_grammar_json) --extinst-cldebuginfo100-grammar=$(location :SpirvHeaders_include_spirv_unified1_extinst_opencl_debuginfo_100_grammar_json) --core-insts-output=$(location core.insts-unified1.inc) --operand-kinds-output=$(location operand.kinds-unified1.inc) --output-language=c++",
    srcs: [
        ":SpirvHeaders_include_spirv_unified1_extinst_debuginfo_grammar_json",
        ":SpirvHeaders_include_spirv_unified1_extinst_opencl_debuginfo_100_grammar_json",
        ":SpirvHeaders_include_spirv_unified1_spirv_core_grammar_json",
        "utils/generate_grammar_tables.py",
    ],
    out: [
        "core.insts-unified1.inc",
        "operand.kinds-unified1.inc",
    ],
}

cc_library_static {
    name: "SPIRV-Tools_source_link_libSPIRV-Tools-link_a",
    srcs: ["source/link/linker.cpp"],
    cflags: ["-Wno-implicit-fallthrough"],
    local_include_dirs: [
        "",
        "include",
    ],
    generated_headers: [
        "SPIRV-Tools_DebugInfo_h",
        "SPIRV-Tools_NonSemanticShaderDebugInfo100_h",
        "SPIRV-Tools_OpenCLDebugInfo100_h",
        "SPIRV-Tools_build-version_inc",
        "SPIRV-Tools_core_insts-unified1_inc",
        "SPIRV-Tools_debuginfo_insts_inc",
        "SPIRV-Tools_extension_enum_inc",
        "SPIRV-Tools_generators_inc",
        "SPIRV-Tools_glsl_std_450_insts_inc",
        "SPIRV-Tools_nonsemantic_clspvreflection_insts_inc",
        "SPIRV-Tools_nonsemantic_shader_debuginfo_100_insts_inc",
        "SPIRV-Tools_nonsemantic_vkspreflection_insts_inc",
        "SPIRV-Tools_opencl_debuginfo_100_insts_inc",
        "SPIRV-Tools_opencl_std_insts_inc",
        "SPIRV-Tools_spv-amd-gcn-shader_insts_inc",
        "SPIRV-Tools_spv-amd-shader-ballot_insts_inc",
        "SPIRV-Tools_spv-amd-shader-explicit-vertex-parameter_insts_inc",
        "SPIRV-Tools_spv-amd-shader-trinary-minmax_insts_inc",
    ],
    header_libs: ["SPIRV-Headers-includes"],
    export_include_dirs: ["include"],
    export_header_lib_headers: ["SPIRV-Headers-includes"],
}

cc_library_headers {
    name: "SPIRV-Tools-includes",
    export_include_dirs: ["include"],
}
