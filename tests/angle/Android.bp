//
// This file has been auto-generated by ninja-to-soong
//
// ******************************
// *** DO NOT MODIFY MANUALLY ***
// ******************************
//
// https://github.com/rjodinchr/ninja-to-soong
//

package {
    default_visibility: ["//visibility:public"],
    default_applicable_licenses: ["angle_license"],
}

license {
    name: "angle_license",
    visibility: [":__subpackages__"],
    license_kinds: ["SPDX-license-identifier-Apache-2.0"],
    license_text: ["LICENSE"],
}

cc_library_shared {
    name: "libGLESv1_CM_angle",
    srcs: ["src/libGLESv1_CM/libGLESv1_CM.cpp"],
    cflags: [
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r27_1",
        "-DANGLE_ENABLE_CONTEXT_MUTEX=1",
        "-DANGLE_ENABLE_CONTEXT_MUTEX_RECURSION=1",
        "-DANGLE_ENABLE_GLOBAL_MUTEX_LOAD_TIME_ALLOCATE=1",
        "-DANGLE_ENABLE_GLOBAL_MUTEX_RECURSION=1",
        "-DANGLE_ENABLE_SHARE_CONTEXT_LOCK=1",
        "-DANGLE_TEST_ENABLE_SYSTEM_EGL",
        "-DANGLE_USE_ANDROID_TLS_SLOT=1",
        "-DCR_CLANG_REVISION=\"llvmorg-20-init-13894-g8cb44859-1\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DEGL_EGLEXT_PROTOTYPES",
        "-DEGL_EGL_PROTOTYPES=1",
        "-DGL_API=__attribute__((visibility(\"default\")))",
        "-DGL_APICALL=__attribute__((visibility(\"default\")))",
        "-DGL_GLES_PROTOTYPES=1",
        "-DGL_GLEXT_PROTOTYPES",
        "-DHAVE_SYS_UIO_H",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D_LIBCPP_HARDENING_MODE=_LIBCPP_HARDENING_MODE_NONE",
        "-D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-nullability-completeness",
        "-fvisibility-inlines-hidden",
        "-fvisibility=hidden",
    ],
    shared_libs: ["libGLESv2_angle"],
    local_include_dirs: [
        "include",
        "src",
    ],
    generated_headers: [
        "angle_gen_angle_ANGLEShaderProgramVersion_h",
        "angle_gen_angle_angle_commit_h",
    ],
    use_clang_lld: true,
    stl: "libc++_static",
    arch: {
        arm64: {
            cflags: ["-D__ARM_NEON__=1"],
        },
    },
}

cc_library_shared {
    name: "libGLESv2_angle",
    srcs: [
        "src/common/angle_version_info.cpp",
        "src/common/spirv/angle_spirv_utils.cpp",
        "src/common/spirv/spirv_instruction_builder_autogen.cpp",
        "src/common/spirv/spirv_instruction_parser_autogen.cpp",
        "src/common/third_party/xxhash/xxhash.c",
        "src/common/vulkan/libvulkan_loader.cpp",
        "src/common/vulkan/vulkan_icd.cpp",
        "src/libANGLE/AttributeMap.cpp",
        "src/libANGLE/BlobCache.cpp",
        "src/libANGLE/Buffer.cpp",
        "src/libANGLE/Caps.cpp",
        "src/libANGLE/Compiler.cpp",
        "src/libANGLE/Config.cpp",
        "src/libANGLE/Context.cpp",
        "src/libANGLE/ContextMutex.cpp",
        "src/libANGLE/Context_gles_1_0.cpp",
        "src/libANGLE/Debug.cpp",
        "src/libANGLE/Device.cpp",
        "src/libANGLE/Display.cpp",
        "src/libANGLE/EGLSync.cpp",
        "src/libANGLE/Error.cpp",
        "src/libANGLE/Fence.cpp",
        "src/libANGLE/Framebuffer.cpp",
        "src/libANGLE/FramebufferAttachment.cpp",
        "src/libANGLE/GLES1Renderer.cpp",
        "src/libANGLE/GLES1State.cpp",
        "src/libANGLE/GlobalMutex.cpp",
        "src/libANGLE/HandleAllocator.cpp",
        "src/libANGLE/Image.cpp",
        "src/libANGLE/ImageIndex.cpp",
        "src/libANGLE/IndexRangeCache.cpp",
        "src/libANGLE/LoggingAnnotator.cpp",
        "src/libANGLE/MemoryObject.cpp",
        "src/libANGLE/MemoryProgramCache.cpp",
        "src/libANGLE/MemoryShaderCache.cpp",
        "src/libANGLE/Observer.cpp",
        "src/libANGLE/Overlay.cpp",
        "src/libANGLE/OverlayWidgets.cpp",
        "src/libANGLE/Overlay_autogen.cpp",
        "src/libANGLE/Overlay_font_autogen.cpp",
        "src/libANGLE/PixelLocalStorage.cpp",
        "src/libANGLE/Platform.cpp",
        "src/libANGLE/Program.cpp",
        "src/libANGLE/ProgramExecutable.cpp",
        "src/libANGLE/ProgramLinkedResources.cpp",
        "src/libANGLE/ProgramPipeline.cpp",
        "src/libANGLE/Query.cpp",
        "src/libANGLE/Renderbuffer.cpp",
        "src/libANGLE/ResourceManager.cpp",
        "src/libANGLE/Sampler.cpp",
        "src/libANGLE/Semaphore.cpp",
        "src/libANGLE/Shader.cpp",
        "src/libANGLE/ShareGroup.cpp",
        "src/libANGLE/State.cpp",
        "src/libANGLE/Stream.cpp",
        "src/libANGLE/Surface.cpp",
        "src/libANGLE/Texture.cpp",
        "src/libANGLE/Thread.cpp",
        "src/libANGLE/TransformFeedback.cpp",
        "src/libANGLE/Uniform.cpp",
        "src/libANGLE/VaryingPacking.cpp",
        "src/libANGLE/VertexArray.cpp",
        "src/libANGLE/VertexAttribute.cpp",
        "src/libANGLE/angletypes.cpp",
        "src/libANGLE/capture/FrameCapture_mock.cpp",
        "src/libANGLE/capture/serialize_mock.cpp",
        "src/libANGLE/context_private_call.cpp",
        "src/libANGLE/entry_points_utils.cpp",
        "src/libANGLE/es3_copy_conversion_table_autogen.cpp",
        "src/libANGLE/format_map_autogen.cpp",
        "src/libANGLE/formatutils.cpp",
        "src/libANGLE/gles_extensions_autogen.cpp",
        "src/libANGLE/queryconversions.cpp",
        "src/libANGLE/queryutils.cpp",
        "src/libANGLE/renderer/BufferImpl.cpp",
        "src/libANGLE/renderer/ContextImpl.cpp",
        "src/libANGLE/renderer/DeviceImpl.cpp",
        "src/libANGLE/renderer/DisplayImpl.cpp",
        "src/libANGLE/renderer/EGLReusableSync.cpp",
        "src/libANGLE/renderer/EGLSyncImpl.cpp",
        "src/libANGLE/renderer/Format_table_autogen.cpp",
        "src/libANGLE/renderer/FramebufferImpl.cpp",
        "src/libANGLE/renderer/ImageImpl.cpp",
        "src/libANGLE/renderer/ProgramImpl.cpp",
        "src/libANGLE/renderer/ProgramPipelineImpl.cpp",
        "src/libANGLE/renderer/QueryImpl.cpp",
        "src/libANGLE/renderer/RenderbufferImpl.cpp",
        "src/libANGLE/renderer/ShaderImpl.cpp",
        "src/libANGLE/renderer/SurfaceImpl.cpp",
        "src/libANGLE/renderer/TextureImpl.cpp",
        "src/libANGLE/renderer/TransformFeedbackImpl.cpp",
        "src/libANGLE/renderer/VertexArrayImpl.cpp",
        "src/libANGLE/renderer/driver_utils.cpp",
        "src/libANGLE/renderer/load_functions_table_autogen.cpp",
        "src/libANGLE/renderer/renderer_utils.cpp",
        "src/libANGLE/renderer/vulkan/AllocatorHelperPool.cpp",
        "src/libANGLE/renderer/vulkan/AllocatorHelperRing.cpp",
        "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "src/libANGLE/renderer/vulkan/CommandProcessor.cpp",
        "src/libANGLE/renderer/vulkan/CompilerVk.cpp",
        "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "src/libANGLE/renderer/vulkan/DebugAnnotatorVk.cpp",
        "src/libANGLE/renderer/vulkan/DeviceVk.cpp",
        "src/libANGLE/renderer/vulkan/DisplayVk.cpp",
        "src/libANGLE/renderer/vulkan/FenceNVVk.cpp",
        "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "src/libANGLE/renderer/vulkan/ImageVk.cpp",
        "src/libANGLE/renderer/vulkan/MemoryObjectVk.cpp",
        "src/libANGLE/renderer/vulkan/MemoryTracking.cpp",
        "src/libANGLE/renderer/vulkan/OverlayVk.cpp",
        "src/libANGLE/renderer/vulkan/PersistentCommandPool.cpp",
        "src/libANGLE/renderer/vulkan/ProgramExecutableVk.cpp",
        "src/libANGLE/renderer/vulkan/ProgramPipelineVk.cpp",
        "src/libANGLE/renderer/vulkan/ProgramVk.cpp",
        "src/libANGLE/renderer/vulkan/QueryVk.cpp",
        "src/libANGLE/renderer/vulkan/RenderTargetVk.cpp",
        "src/libANGLE/renderer/vulkan/RenderbufferVk.cpp",
        "src/libANGLE/renderer/vulkan/SamplerVk.cpp",
        "src/libANGLE/renderer/vulkan/SecondaryCommandBuffer.cpp",
        "src/libANGLE/renderer/vulkan/SecondaryCommandPool.cpp",
        "src/libANGLE/renderer/vulkan/SemaphoreVk.cpp",
        "src/libANGLE/renderer/vulkan/ShaderInterfaceVariableInfoMap.cpp",
        "src/libANGLE/renderer/vulkan/ShaderVk.cpp",
        "src/libANGLE/renderer/vulkan/ShareGroupVk.cpp",
        "src/libANGLE/renderer/vulkan/Suballocation.cpp",
        "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "src/libANGLE/renderer/vulkan/SyncVk.cpp",
        "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "src/libANGLE/renderer/vulkan/TransformFeedbackVk.cpp",
        "src/libANGLE/renderer/vulkan/UtilsVk.cpp",
        "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "src/libANGLE/renderer/vulkan/VkImageImageSiblingVk.cpp",
        "src/libANGLE/renderer/vulkan/VulkanSecondaryCommandBuffer.cpp",
        "src/libANGLE/renderer/vulkan/android/AHBFunctions.cpp",
        "src/libANGLE/renderer/vulkan/android/DisplayVkAndroid.cpp",
        "src/libANGLE/renderer/vulkan/android/HardwareBufferImageSiblingVkAndroid.cpp",
        "src/libANGLE/renderer/vulkan/android/WindowSurfaceVkAndroid.cpp",
        "src/libANGLE/renderer/vulkan/android/vk_android_utils.cpp",
        "src/libANGLE/renderer/vulkan/spv_utils.cpp",
        "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "src/libANGLE/renderer/vulkan/vk_caps_utils.cpp",
        "src/libANGLE/renderer/vulkan/vk_format_table_autogen.cpp",
        "src/libANGLE/renderer/vulkan/vk_format_utils.cpp",
        "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "src/libANGLE/renderer/vulkan/vk_internal_shaders_autogen.cpp",
        "src/libANGLE/renderer/vulkan/vk_mandatory_format_support_table_autogen.cpp",
        "src/libANGLE/renderer/vulkan/vk_mem_alloc_wrapper.cpp",
        "src/libANGLE/renderer/vulkan/vk_ref_counted_event.cpp",
        "src/libANGLE/renderer/vulkan/vk_renderer.cpp",
        "src/libANGLE/renderer/vulkan/vk_resource.cpp",
        "src/libANGLE/renderer/vulkan/vk_utils.cpp",
        "src/libANGLE/validationEGL.cpp",
        "src/libANGLE/validationES.cpp",
        "src/libANGLE/validationES1.cpp",
        "src/libANGLE/validationES2.cpp",
        "src/libANGLE/validationES3.cpp",
        "src/libANGLE/validationES31.cpp",
        "src/libANGLE/validationES32.cpp",
        "src/libANGLE/validationESEXT.cpp",
        "src/libGLESv2/egl_ext_stubs.cpp",
        "src/libGLESv2/egl_stubs.cpp",
        "src/libGLESv2/entry_points_egl_autogen.cpp",
        "src/libGLESv2/entry_points_egl_ext_autogen.cpp",
        "src/libGLESv2/entry_points_gles_1_0_autogen.cpp",
        "src/libGLESv2/entry_points_gles_2_0_autogen.cpp",
        "src/libGLESv2/entry_points_gles_3_0_autogen.cpp",
        "src/libGLESv2/entry_points_gles_3_1_autogen.cpp",
        "src/libGLESv2/entry_points_gles_3_2_autogen.cpp",
        "src/libGLESv2/entry_points_gles_ext_autogen.cpp",
        "src/libGLESv2/global_state.cpp",
        "src/libGLESv2/libGLESv2_autogen.cpp",
        "src/libGLESv2/proc_table_egl_autogen.cpp",
        "src/third_party/volk/volk.c",
        "third_party/abseil-cpp/absl/base/internal/cycleclock.cc",
        "third_party/abseil-cpp/absl/base/internal/low_level_alloc.cc",
        "third_party/abseil-cpp/absl/base/internal/raw_logging.cc",
        "third_party/abseil-cpp/absl/base/internal/spinlock.cc",
        "third_party/abseil-cpp/absl/base/internal/spinlock_wait.cc",
        "third_party/abseil-cpp/absl/base/internal/sysinfo.cc",
        "third_party/abseil-cpp/absl/base/internal/thread_identity.cc",
        "third_party/abseil-cpp/absl/base/internal/throw_delegate.cc",
        "third_party/abseil-cpp/absl/base/internal/tracing.cc",
        "third_party/abseil-cpp/absl/base/internal/unscaledcycleclock.cc",
        "third_party/abseil-cpp/absl/base/log_severity.cc",
        "third_party/abseil-cpp/absl/container/internal/hashtablez_sampler.cc",
        "third_party/abseil-cpp/absl/container/internal/hashtablez_sampler_force_weak_definition.cc",
        "third_party/abseil-cpp/absl/container/internal/raw_hash_set.cc",
        "third_party/abseil-cpp/absl/crc/crc32c.cc",
        "third_party/abseil-cpp/absl/crc/internal/cpu_detect.cc",
        "third_party/abseil-cpp/absl/crc/internal/crc.cc",
        "third_party/abseil-cpp/absl/crc/internal/crc_cord_state.cc",
        "third_party/abseil-cpp/absl/crc/internal/crc_memcpy_fallback.cc",
        "third_party/abseil-cpp/absl/crc/internal/crc_memcpy_x86_arm_combined.cc",
        "third_party/abseil-cpp/absl/crc/internal/crc_non_temporal_memcpy.cc",
        "third_party/abseil-cpp/absl/crc/internal/crc_x86_arm_combined.cc",
        "third_party/abseil-cpp/absl/debugging/internal/address_is_readable.cc",
        "third_party/abseil-cpp/absl/debugging/internal/decode_rust_punycode.cc",
        "third_party/abseil-cpp/absl/debugging/internal/demangle.cc",
        "third_party/abseil-cpp/absl/debugging/internal/demangle_rust.cc",
        "third_party/abseil-cpp/absl/debugging/internal/elf_mem_image.cc",
        "third_party/abseil-cpp/absl/debugging/internal/utf8_for_code_point.cc",
        "third_party/abseil-cpp/absl/debugging/internal/vdso_support.cc",
        "third_party/abseil-cpp/absl/debugging/stacktrace.cc",
        "third_party/abseil-cpp/absl/debugging/symbolize.cc",
        "third_party/abseil-cpp/absl/hash/internal/city.cc",
        "third_party/abseil-cpp/absl/hash/internal/hash.cc",
        "third_party/abseil-cpp/absl/hash/internal/low_level_hash.cc",
        "third_party/abseil-cpp/absl/numeric/int128.cc",
        "third_party/abseil-cpp/absl/profiling/internal/exponential_biased.cc",
        "third_party/abseil-cpp/absl/strings/ascii.cc",
        "third_party/abseil-cpp/absl/strings/charconv.cc",
        "third_party/abseil-cpp/absl/strings/cord.cc",
        "third_party/abseil-cpp/absl/strings/cord_analysis.cc",
        "third_party/abseil-cpp/absl/strings/cord_buffer.cc",
        "third_party/abseil-cpp/absl/strings/escaping.cc",
        "third_party/abseil-cpp/absl/strings/internal/charconv_bigint.cc",
        "third_party/abseil-cpp/absl/strings/internal/charconv_parse.cc",
        "third_party/abseil-cpp/absl/strings/internal/cord_internal.cc",
        "third_party/abseil-cpp/absl/strings/internal/cord_rep_btree.cc",
        "third_party/abseil-cpp/absl/strings/internal/cord_rep_btree_navigator.cc",
        "third_party/abseil-cpp/absl/strings/internal/cord_rep_btree_reader.cc",
        "third_party/abseil-cpp/absl/strings/internal/cord_rep_consume.cc",
        "third_party/abseil-cpp/absl/strings/internal/cord_rep_crc.cc",
        "third_party/abseil-cpp/absl/strings/internal/cordz_functions.cc",
        "third_party/abseil-cpp/absl/strings/internal/cordz_handle.cc",
        "third_party/abseil-cpp/absl/strings/internal/cordz_info.cc",
        "third_party/abseil-cpp/absl/strings/internal/damerau_levenshtein_distance.cc",
        "third_party/abseil-cpp/absl/strings/internal/escaping.cc",
        "third_party/abseil-cpp/absl/strings/internal/memutil.cc",
        "third_party/abseil-cpp/absl/strings/internal/ostringstream.cc",
        "third_party/abseil-cpp/absl/strings/internal/str_format/arg.cc",
        "third_party/abseil-cpp/absl/strings/internal/str_format/bind.cc",
        "third_party/abseil-cpp/absl/strings/internal/str_format/extension.cc",
        "third_party/abseil-cpp/absl/strings/internal/str_format/float_conversion.cc",
        "third_party/abseil-cpp/absl/strings/internal/str_format/output.cc",
        "third_party/abseil-cpp/absl/strings/internal/str_format/parser.cc",
        "third_party/abseil-cpp/absl/strings/internal/stringify_sink.cc",
        "third_party/abseil-cpp/absl/strings/internal/utf8.cc",
        "third_party/abseil-cpp/absl/strings/match.cc",
        "third_party/abseil-cpp/absl/strings/numbers.cc",
        "third_party/abseil-cpp/absl/strings/str_cat.cc",
        "third_party/abseil-cpp/absl/strings/str_replace.cc",
        "third_party/abseil-cpp/absl/strings/str_split.cc",
        "third_party/abseil-cpp/absl/strings/string_view.cc",
        "third_party/abseil-cpp/absl/strings/substitute.cc",
        "third_party/abseil-cpp/absl/synchronization/barrier.cc",
        "third_party/abseil-cpp/absl/synchronization/blocking_counter.cc",
        "third_party/abseil-cpp/absl/synchronization/internal/create_thread_identity.cc",
        "third_party/abseil-cpp/absl/synchronization/internal/futex_waiter.cc",
        "third_party/abseil-cpp/absl/synchronization/internal/graphcycles.cc",
        "third_party/abseil-cpp/absl/synchronization/internal/kernel_timeout.cc",
        "third_party/abseil-cpp/absl/synchronization/internal/per_thread_sem.cc",
        "third_party/abseil-cpp/absl/synchronization/internal/pthread_waiter.cc",
        "third_party/abseil-cpp/absl/synchronization/internal/sem_waiter.cc",
        "third_party/abseil-cpp/absl/synchronization/internal/stdcpp_waiter.cc",
        "third_party/abseil-cpp/absl/synchronization/internal/waiter_base.cc",
        "third_party/abseil-cpp/absl/synchronization/internal/win32_waiter.cc",
        "third_party/abseil-cpp/absl/synchronization/mutex.cc",
        "third_party/abseil-cpp/absl/synchronization/notification.cc",
        "third_party/abseil-cpp/absl/time/civil_time.cc",
        "third_party/abseil-cpp/absl/time/clock.cc",
        "third_party/abseil-cpp/absl/time/duration.cc",
        "third_party/abseil-cpp/absl/time/format.cc",
        "third_party/abseil-cpp/absl/time/internal/cctz/src/civil_time_detail.cc",
        "third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_fixed.cc",
        "third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_format.cc",
        "third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_if.cc",
        "third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_impl.cc",
        "third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_info.cc",
        "third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_libc.cc",
        "third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_lookup.cc",
        "third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_posix.cc",
        "third_party/abseil-cpp/absl/time/internal/cctz/src/zone_info_source.cc",
        "third_party/abseil-cpp/absl/time/time.cc",
        "third_party/abseil-cpp/absl/types/bad_optional_access.cc",
        "third_party/abseil-cpp/absl/types/bad_variant_access.cc",
        "third_party/vulkan_memory_allocator/vma.cpp",
    ],
    cflags: [
        "-DABSL_ALLOCATOR_NOTHROW=1",
        "-DADLER32_SIMD_NEON",
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r27_1",
        "-DANGLE_CAPTURE_ENABLED=0",
        "-DANGLE_ENABLE_CONTEXT_MUTEX=1",
        "-DANGLE_ENABLE_CONTEXT_MUTEX_RECURSION=1",
        "-DANGLE_ENABLE_CRC_FOR_PIPELINE_CACHE",
        "-DANGLE_ENABLE_GLOBAL_MUTEX_LOAD_TIME_ALLOCATE=1",
        "-DANGLE_ENABLE_GLOBAL_MUTEX_RECURSION=1",
        "-DANGLE_ENABLE_SHARE_CONTEXT_LOCK=1",
        "-DANGLE_ENABLE_VULKAN",
        "-DANGLE_ENABLE_VULKAN_SHARED_RING_BUFFER_CMD_ALLOC=false",
        "-DANGLE_EXPOSE_NON_CONFORMANT_EXTENSIONS_AND_VERSIONS",
        "-DANGLE_SHARED_LIBVULKAN=1",
        "-DANGLE_TEST_ENABLE_SYSTEM_EGL",
        "-DANGLE_USE_ABSEIL",
        "-DANGLE_USE_ANDROID_TLS_SLOT=1",
        "-DANGLE_USE_CUSTOM_VULKAN_OUTSIDE_RENDER_PASS_CMD_BUFFERS=1",
        "-DANGLE_USE_CUSTOM_VULKAN_RENDER_PASS_CMD_BUFFERS=1",
        "-DANGLE_VK_LAYERS_DIR=\"angledata\"",
        "-DANGLE_VK_MOCK_ICD_JSON=\"angledata/VkICD_mock_icd.json\"",
        "-DARMV8_OS_ANDROID",
        "-DCRC32_ARMV8_CRC32",
        "-DCR_CLANG_REVISION=\"llvmorg-20-init-13894-g8cb44859-1\"",
        "-DDEFLATE_SLIDE_HASH_NEON",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DEGL_EGLEXT_PROTOTYPES",
        "-DEGL_EGL_PROTOTYPES=1",
        "-DGL_API=__attribute__((visibility(\"default\")))",
        "-DGL_APICALL=__attribute__((visibility(\"default\")))",
        "-DGL_GLES_PROTOTYPES=1",
        "-DGL_GLEXT_PROTOTYPES",
        "-DHAVE_STRONG_GETAUXVAL",
        "-DHAVE_SYS_UIO_H",
        "-DINFLATE_CHUNK_READ_64LE",
        "-DINFLATE_CHUNK_SIMD_NEON",
        "-DLIBANGLE_IMPLEMENTATION",
        "-DLIBGLESV2_IMPLEMENTATION",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-DSTACK_LINE_READER_BUFFER_SIZE=1024",
        "-DVK_USE_PLATFORM_ANDROID_KHR",
        "-DVMA_DYNAMIC_VULKAN_FUNCTIONS=0",
        "-DVMA_STATIC_VULKAN_FUNCTIONS=0",
        "-DVMA_USE_STL_CONTAINERS=1",
        "-DZLIB_IMPLEMENTATION",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D_LIBCPP_HARDENING_MODE=_LIBCPP_HARDENING_MODE_NONE",
        "-D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-nullability-completeness",
        "-fvisibility-inlines-hidden",
        "-fvisibility=hidden",
    ],
    shared_libs: [
        "liblog",
        "libnativewindow",
        "libz",
    ],
    static_libs: [
        "SPIRV-Tools_source_libSPIRV-Tools_a",
        "angle_obj_libangle_common_a",
        "angle_obj_libangle_common_shader_state_a",
        "angle_obj_libangle_gpu_info_util_a",
        "angle_obj_libangle_image_util_a",
        "angle_obj_libpreprocessor_a",
        "angle_obj_libtranslator_a",
        "zlib_google_compression_utils_portable",
    ],
    local_include_dirs: [
        "",
        "include",
        "src",
        "src/common/base",
        "src/common/third_party/xxhash",
        "src/third_party/volk",
        "third_party/abseil-cpp",
        "third_party/vulkan-headers/src/include",
        "third_party/vulkan_memory_allocator/include",
    ],
    generated_headers: [
        "angle_gen_angle_ANGLEShaderProgramVersion_h",
        "angle_gen_angle_angle_commit_h",
    ],
    use_clang_lld: true,
    stl: "libc++_static",
    arch: {
        arm64: {
            cflags: ["-D__ARM_NEON__=1"],
        },
    },
}

cc_library_static {
    name: "angle_obj_libangle_common_a",
    srcs: [
        "src/common/Float16ToFloat32.cpp",
        "src/common/MemoryBuffer.cpp",
        "src/common/PackedEGLEnums_autogen.cpp",
        "src/common/PackedEnums.cpp",
        "src/common/PackedGLEnums_autogen.cpp",
        "src/common/PoolAlloc.cpp",
        "src/common/RingBufferAllocator.cpp",
        "src/common/SimpleMutex.cpp",
        "src/common/WorkerThread.cpp",
        "src/common/aligned_memory.cpp",
        "src/common/android_util.cpp",
        "src/common/angleutils.cpp",
        "src/common/backtrace_utils_noop.cpp",
        "src/common/base/anglebase/sha1.cc",
        "src/common/debug.cpp",
        "src/common/entry_points_enum_autogen.cpp",
        "src/common/event_tracer.cpp",
        "src/common/mathutil.cpp",
        "src/common/matrix_utils.cpp",
        "src/common/platform_helpers.cpp",
        "src/common/string_utils.cpp",
        "src/common/system_utils.cpp",
        "src/common/system_utils_linux.cpp",
        "src/common/system_utils_posix.cpp",
        "src/common/tls.cpp",
        "src/common/uniform_type_info_autogen.cpp",
        "src/common/utilities.cpp",
    ],
    cflags: [
        "-DABSL_ALLOCATOR_NOTHROW=1",
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r27_1",
        "-DANGLE_ENABLE_CONTEXT_MUTEX=1",
        "-DANGLE_ENABLE_CONTEXT_MUTEX_RECURSION=1",
        "-DANGLE_ENABLE_GLOBAL_MUTEX_LOAD_TIME_ALLOCATE=1",
        "-DANGLE_ENABLE_GLOBAL_MUTEX_RECURSION=1",
        "-DANGLE_ENABLE_SHARE_CONTEXT_LOCK=1",
        "-DANGLE_EXPOSE_NON_CONFORMANT_EXTENSIONS_AND_VERSIONS",
        "-DANGLE_TEST_ENABLE_SYSTEM_EGL",
        "-DANGLE_USE_ABSEIL",
        "-DANGLE_USE_ANDROID_TLS_SLOT=1",
        "-DCR_CLANG_REVISION=\"llvmorg-20-init-13894-g8cb44859-1\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DHAVE_SYS_UIO_H",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D_LIBCPP_HARDENING_MODE=_LIBCPP_HARDENING_MODE_NONE",
        "-D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-nullability-completeness",
        "-fvisibility-inlines-hidden",
        "-fvisibility=hidden",
    ],
    shared_libs: ["libnativewindow"],
    local_include_dirs: [
        "include",
        "src",
        "src/common/base",
        "src/common/third_party/xxhash",
        "third_party/abseil-cpp",
    ],
    use_clang_lld: true,
    stl: "libc++_static",
    arch: {
        arm64: {
            cflags: ["-D__ARM_NEON__=1"],
        },
    },
}

cc_library_static {
    name: "angle_obj_libpreprocessor_a",
    srcs: [
        "src/compiler/preprocessor/DiagnosticsBase.cpp",
        "src/compiler/preprocessor/DirectiveHandlerBase.cpp",
        "src/compiler/preprocessor/DirectiveParser.cpp",
        "src/compiler/preprocessor/Input.cpp",
        "src/compiler/preprocessor/Lexer.cpp",
        "src/compiler/preprocessor/Macro.cpp",
        "src/compiler/preprocessor/MacroExpander.cpp",
        "src/compiler/preprocessor/Preprocessor.cpp",
        "src/compiler/preprocessor/Token.cpp",
        "src/compiler/preprocessor/preprocessor_lex_autogen.cpp",
        "src/compiler/preprocessor/preprocessor_tab_autogen.cpp",
    ],
    cflags: [
        "-DABSL_ALLOCATOR_NOTHROW=1",
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r27_1",
        "-DANGLE_ENABLE_CONTEXT_MUTEX=1",
        "-DANGLE_ENABLE_CONTEXT_MUTEX_RECURSION=1",
        "-DANGLE_ENABLE_GLOBAL_MUTEX_LOAD_TIME_ALLOCATE=1",
        "-DANGLE_ENABLE_GLOBAL_MUTEX_RECURSION=1",
        "-DANGLE_ENABLE_SHARE_CONTEXT_LOCK=1",
        "-DANGLE_TEST_ENABLE_SYSTEM_EGL",
        "-DANGLE_USE_ABSEIL",
        "-DANGLE_USE_ANDROID_TLS_SLOT=1",
        "-DCR_CLANG_REVISION=\"llvmorg-20-init-13894-g8cb44859-1\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DHAVE_SYS_UIO_H",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D_LIBCPP_HARDENING_MODE=_LIBCPP_HARDENING_MODE_NONE",
        "-D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-nullability-completeness",
        "-fvisibility-inlines-hidden",
        "-fvisibility=hidden",
    ],
    shared_libs: ["libnativewindow"],
    local_include_dirs: [
        "include",
        "src",
        "src/common/base",
        "src/common/third_party/xxhash",
        "third_party/abseil-cpp",
    ],
    use_clang_lld: true,
    stl: "libc++_static",
    arch: {
        arm64: {
            cflags: ["-D__ARM_NEON__=1"],
        },
    },
}

cc_genrule {
    name: "angle_gen_angle_ANGLEShaderProgramVersion_h",
    cmd: "echo \"$(location src/common/BinaryStream.h) $(location src/common/CircularBuffer.h) $(location src/common/Color.h) $(location src/common/Color.inc) $(location src/common/CompiledShaderState.h) $(location src/common/FastVector.h) $(location src/common/FixedQueue.h) $(location src/common/FixedVector.h) $(location src/common/MemoryBuffer.h) $(location src/common/Optional.h) $(location src/common/PackedEGLEnums_autogen.h) $(location src/common/PackedEnums.h) $(location src/common/PackedGLEnums_autogen.h) $(location src/common/PoolAlloc.h) $(location src/common/RingBufferAllocator.h) $(location src/common/SimpleMutex.h) $(location src/common/SynchronizedValue.h) $(location src/common/WorkerThread.h) $(location src/common/aligned_memory.h) $(location src/common/android_util.h) $(location src/common/angleutils.h) $(location src/common/apple_platform_utils.h) $(location src/common/backtrace_utils.h) $(location src/common/base/anglebase/base_export.h) $(location src/common/base/anglebase/containers/mru_cache.h) $(location src/common/base/anglebase/logging.h) $(location src/common/base/anglebase/macros.h) $(location src/common/base/anglebase/no_destructor.h) $(location src/common/base/anglebase/numerics/checked_math.h) $(location src/common/base/anglebase/numerics/checked_math_impl.h) $(location src/common/base/anglebase/numerics/clamped_math.h) $(location src/common/base/anglebase/numerics/clamped_math_impl.h) $(location src/common/base/anglebase/numerics/math_constants.h) $(location src/common/base/anglebase/numerics/ranges.h) $(location src/common/base/anglebase/numerics/safe_conversions.h) $(location src/common/base/anglebase/numerics/safe_conversions_arm_impl.h) $(location src/common/base/anglebase/numerics/safe_conversions_impl.h) $(location src/common/base/anglebase/numerics/safe_math.h) $(location src/common/base/anglebase/numerics/safe_math_arm_impl.h) $(location src/common/base/anglebase/numerics/safe_math_clang_gcc_impl.h) $(location src/common/base/anglebase/numerics/safe_math_shared_impl.h) $(location src/common/base/anglebase/sha1.h) $(location src/common/base/anglebase/sys_byteorder.h) $(location src/common/bitset_utils.h) $(location src/common/debug.h) $(location src/common/entry_points_enum_autogen.h) $(location src/common/event_tracer.h) $(location src/common/hash_containers.h) $(location src/common/hash_utils.h) $(location src/common/log_utils.h) $(location src/common/mathutil.h) $(location src/common/matrix_utils.h) $(location src/common/platform.h) $(location src/common/platform_helpers.h) $(location src/common/string_utils.h) $(location src/common/system_utils.h) $(location src/common/tls.h) $(location src/common/uniform_type_info_autogen.h) $(location src/common/utilities.h) $(location src/common/vector_utils.h) $(location src/common/Float16ToFloat32.cpp) $(location src/common/MemoryBuffer.cpp) $(location src/common/PackedEGLEnums_autogen.cpp) $(location src/common/PackedEnums.cpp) $(location src/common/PackedGLEnums_autogen.cpp) $(location src/common/PoolAlloc.cpp) $(location src/common/RingBufferAllocator.cpp) $(location src/common/SimpleMutex.cpp) $(location src/common/WorkerThread.cpp) $(location src/common/aligned_memory.cpp) $(location src/common/android_util.cpp) $(location src/common/angleutils.cpp) $(location src/common/base/anglebase/sha1.cc) $(location src/common/debug.cpp) $(location src/common/entry_points_enum_autogen.cpp) $(location src/common/event_tracer.cpp) $(location src/common/mathutil.cpp) $(location src/common/matrix_utils.cpp) $(location src/common/platform_helpers.cpp) $(location src/common/string_utils.cpp) $(location src/common/system_utils.cpp) $(location src/common/tls.cpp) $(location src/common/uniform_type_info_autogen.cpp) $(location src/common/utilities.cpp) $(location src/common/backtrace_utils_noop.cpp) $(location src/common/system_utils_linux.cpp) $(location src/common/system_utils_posix.cpp) $(location src/libANGLE/AttributeMap.h) $(location src/libANGLE/BlobCache.h) $(location src/libANGLE/Buffer.h) $(location src/libANGLE/Caps.h) $(location src/libANGLE/CLBitField.h) $(location src/libANGLE/CLRefPointer.h) $(location src/libANGLE/Compiler.h) $(location src/libANGLE/Config.h) $(location src/libANGLE/Constants.h) $(location src/libANGLE/Context.h) $(location src/libANGLE/Context.inl.h) $(location src/libANGLE/Context_gles_1_0_autogen.h) $(location src/libANGLE/Context_gles_2_0_autogen.h) $(location src/libANGLE/Context_gles_3_0_autogen.h) $(location src/libANGLE/Context_gles_3_1_autogen.h) $(location src/libANGLE/Context_gles_3_2_autogen.h) $(location src/libANGLE/Context_gles_ext_autogen.h) $(location src/libANGLE/Debug.h) $(location src/libANGLE/Device.h) $(location src/libANGLE/Display.h) $(location src/libANGLE/EGLSync.h) $(location src/libANGLE/Error.h) $(location src/libANGLE/Error.inc) $(location src/libANGLE/ErrorStrings.h) $(location src/libANGLE/Fence.h) $(location src/libANGLE/Framebuffer.h) $(location src/libANGLE/FramebufferAttachment.h) $(location src/libANGLE/GLES1Renderer.h) $(location src/libANGLE/GLES1Shaders.inc) $(location src/libANGLE/GLES1State.h) $(location src/libANGLE/GlobalMutex.h) $(location src/libANGLE/HandleAllocator.h) $(location src/libANGLE/Image.h) $(location src/libANGLE/ImageIndex.h) $(location src/libANGLE/IndexRangeCache.h) $(location src/libANGLE/InfoLog.h) $(location src/libANGLE/LoggingAnnotator.h) $(location src/libANGLE/MemoryObject.h) $(location src/libANGLE/MemoryProgramCache.h) $(location src/libANGLE/MemoryShaderCache.h) $(location src/libANGLE/Observer.h) $(location src/libANGLE/Overlay.h) $(location src/libANGLE/OverlayWidgets.h) $(location src/libANGLE/Overlay_autogen.h) $(location src/libANGLE/Overlay_font_autogen.h) $(location src/libANGLE/PixelLocalStorage.h) $(location src/libANGLE/Program.h) $(location src/libANGLE/ProgramExecutable.h) $(location src/libANGLE/ProgramLinkedResources.h) $(location src/libANGLE/ProgramPipeline.h) $(location src/libANGLE/Query.h) $(location src/libANGLE/RefCountObject.h) $(location src/libANGLE/Renderbuffer.h) $(location src/libANGLE/ResourceManager.h) $(location src/libANGLE/ResourceMap.h) $(location src/libANGLE/Sampler.h) $(location src/libANGLE/Semaphore.h) $(location src/libANGLE/Shader.h) $(location src/libANGLE/ShareGroup.h) $(location src/libANGLE/ContextMutex.h) $(location src/libANGLE/SizedMRUCache.h) $(location src/libANGLE/State.h) $(location src/libANGLE/Stream.h) $(location src/libANGLE/Surface.h) $(location src/libANGLE/Texture.h) $(location src/libANGLE/Thread.h) $(location src/libANGLE/TransformFeedback.h) $(location src/libANGLE/Uniform.h) $(location src/libANGLE/VaryingPacking.h) $(location src/libANGLE/Version.h) $(location src/libANGLE/Version.inc) $(location src/libANGLE/VertexArray.h) $(location src/libANGLE/VertexAttribute.h) $(location src/libANGLE/VertexAttribute.inc) $(location src/libANGLE/angletypes.h) $(location src/libANGLE/angletypes.inc) $(location src/libANGLE/context_private_call_autogen.h) $(location src/libANGLE/cl_types.h) $(location src/libANGLE/entry_points_utils.cpp) $(location src/libANGLE/entry_points_utils.h) $(location src/libANGLE/features.h) $(location src/libANGLE/formatutils.h) $(location src/libANGLE/gles_extensions_autogen.h) $(location src/libANGLE/histogram_macros.h) $(location src/libANGLE/queryconversions.h) $(location src/libANGLE/queryutils.h) $(location src/libANGLE/trace.h) $(location src/libANGLE/renderer/BufferImpl.h) $(location src/libANGLE/renderer/CompilerImpl.h) $(location src/libANGLE/renderer/ContextImpl.h) $(location src/libANGLE/renderer/driver_utils.h) $(location src/libANGLE/renderer/DeviceImpl.h) $(location src/libANGLE/renderer/DisplayImpl.h) $(location src/libANGLE/renderer/EGLImplFactory.h) $(location src/libANGLE/renderer/EGLReusableSync.h) $(location src/libANGLE/renderer/EGLSyncImpl.h) $(location src/libANGLE/renderer/FenceNVImpl.h) $(location src/libANGLE/renderer/FormatID_autogen.h) $(location src/libANGLE/renderer/Format.h) $(location src/libANGLE/renderer/FramebufferAttachmentObjectImpl.h) $(location src/libANGLE/renderer/FramebufferImpl.h) $(location src/libANGLE/renderer/GLImplFactory.h) $(location src/libANGLE/renderer/gl/functionsgl_enums.h) $(location src/libANGLE/renderer/ImageImpl.h) $(location src/libANGLE/renderer/MemoryObjectImpl.h) $(location src/libANGLE/renderer/OverlayImpl.h) $(location src/libANGLE/renderer/ProgramImpl.h) $(location src/libANGLE/renderer/ProgramExecutableImpl.h) $(location src/libANGLE/renderer/ProgramPipelineImpl.h) $(location src/libANGLE/renderer/QueryImpl.h) $(location src/libANGLE/renderer/RenderbufferImpl.h) $(location src/libANGLE/renderer/RenderTargetCache.h) $(location src/libANGLE/renderer/SamplerImpl.h) $(location src/libANGLE/renderer/SemaphoreImpl.h) $(location src/libANGLE/renderer/ShaderImpl.h) $(location src/libANGLE/renderer/ShareGroupImpl.h) $(location src/libANGLE/renderer/StreamProducerImpl.h) $(location src/libANGLE/renderer/SurfaceImpl.h) $(location src/libANGLE/renderer/SyncImpl.h) $(location src/libANGLE/renderer/TextureImpl.h) $(location src/libANGLE/renderer/TransformFeedbackImpl.h) $(location src/libANGLE/renderer/VertexArrayImpl.h) $(location src/libANGLE/renderer/vulkan/DisplayVk_api.h) $(location src/libANGLE/renderer/copyvertex.h) $(location src/libANGLE/renderer/copyvertex.inc.h) $(location src/libANGLE/renderer/load_functions_table.h) $(location src/libANGLE/renderer/renderer_utils.h) $(location src/libANGLE/renderer/serial_utils.h) $(location src/libANGLE/validationEGL.h) $(location src/libANGLE/validationEGL_autogen.h) $(location src/libANGLE/validationES.h) $(location src/libANGLE/validationES1.h) $(location src/libANGLE/validationES1_autogen.h) $(location src/libANGLE/validationES2.h) $(location src/libANGLE/validationES2_autogen.h) $(location src/libANGLE/validationES3.h) $(location src/libANGLE/validationES31.h) $(location src/libANGLE/validationES31_autogen.h) $(location src/libANGLE/validationES32.h) $(location src/libANGLE/validationES32_autogen.h) $(location src/libANGLE/validationES3_autogen.h) $(location src/libANGLE/validationESEXT.h) $(location src/libANGLE/validationESEXT_autogen.h) $(location src/common/base/anglebase/trace_event/trace_event.h) $(location src/common/PackedCLEnums_autogen.h) $(location src/libANGLE/AttributeMap.cpp) $(location src/libANGLE/BlobCache.cpp) $(location src/libANGLE/Buffer.cpp) $(location src/libANGLE/Caps.cpp) $(location src/libANGLE/Compiler.cpp) $(location src/libANGLE/Config.cpp) $(location src/libANGLE/Context.cpp) $(location src/libANGLE/ContextMutex.cpp) $(location src/libANGLE/Context_gles_1_0.cpp) $(location src/libANGLE/Debug.cpp) $(location src/libANGLE/Device.cpp) $(location src/libANGLE/Display.cpp) $(location src/libANGLE/EGLSync.cpp) $(location src/libANGLE/Error.cpp) $(location src/libANGLE/Fence.cpp) $(location src/libANGLE/Framebuffer.cpp) $(location src/libANGLE/FramebufferAttachment.cpp) $(location src/libANGLE/GLES1Renderer.cpp) $(location src/libANGLE/GLES1State.cpp) $(location src/libANGLE/GlobalMutex.cpp) $(location src/libANGLE/HandleAllocator.cpp) $(location src/libANGLE/Image.cpp) $(location src/libANGLE/ImageIndex.cpp) $(location src/libANGLE/IndexRangeCache.cpp) $(location src/libANGLE/LoggingAnnotator.cpp) $(location src/libANGLE/MemoryObject.cpp) $(location src/libANGLE/MemoryProgramCache.cpp) $(location src/libANGLE/MemoryShaderCache.cpp) $(location src/libANGLE/Observer.cpp) $(location src/libANGLE/Overlay.cpp) $(location src/libANGLE/OverlayWidgets.cpp) $(location src/libANGLE/Overlay_autogen.cpp) $(location src/libANGLE/Overlay_font_autogen.cpp) $(location src/libANGLE/PixelLocalStorage.cpp) $(location src/libANGLE/Platform.cpp) $(location src/libANGLE/Program.cpp) $(location src/libANGLE/ProgramExecutable.cpp) $(location src/libANGLE/ProgramLinkedResources.cpp) $(location src/libANGLE/ProgramPipeline.cpp) $(location src/libANGLE/Query.cpp) $(location src/libANGLE/Renderbuffer.cpp) $(location src/libANGLE/ResourceManager.cpp) $(location src/libANGLE/Sampler.cpp) $(location src/libANGLE/Semaphore.cpp) $(location src/libANGLE/Shader.cpp) $(location src/libANGLE/ShareGroup.cpp) $(location src/libANGLE/State.cpp) $(location src/libANGLE/Stream.cpp) $(location src/libANGLE/Surface.cpp) $(location src/libANGLE/Texture.cpp) $(location src/libANGLE/Thread.cpp) $(location src/libANGLE/TransformFeedback.cpp) $(location src/libANGLE/Uniform.cpp) $(location src/libANGLE/VaryingPacking.cpp) $(location src/libANGLE/VertexArray.cpp) $(location src/libANGLE/VertexAttribute.cpp) $(location src/libANGLE/angletypes.cpp) $(location src/libANGLE/context_private_call.cpp) $(location src/libANGLE/es3_copy_conversion_table_autogen.cpp) $(location src/libANGLE/format_map_autogen.cpp) $(location src/libANGLE/formatutils.cpp) $(location src/libANGLE/gles_extensions_autogen.cpp) $(location src/libANGLE/queryconversions.cpp) $(location src/libANGLE/queryutils.cpp) $(location src/libANGLE/renderer/BufferImpl.cpp) $(location src/libANGLE/renderer/ContextImpl.cpp) $(location src/libANGLE/renderer/DeviceImpl.cpp) $(location src/libANGLE/renderer/DisplayImpl.cpp) $(location src/libANGLE/renderer/EGLReusableSync.cpp) $(location src/libANGLE/renderer/EGLSyncImpl.cpp) $(location src/libANGLE/renderer/Format_table_autogen.cpp) $(location src/libANGLE/renderer/FramebufferImpl.cpp) $(location src/libANGLE/renderer/ImageImpl.cpp) $(location src/libANGLE/renderer/ProgramImpl.cpp) $(location src/libANGLE/renderer/ProgramPipelineImpl.cpp) $(location src/libANGLE/renderer/QueryImpl.cpp) $(location src/libANGLE/renderer/RenderbufferImpl.cpp) $(location src/libANGLE/renderer/ShaderImpl.cpp) $(location src/libANGLE/renderer/SurfaceImpl.cpp) $(location src/libANGLE/renderer/TextureImpl.cpp) $(location src/libANGLE/renderer/TransformFeedbackImpl.cpp) $(location src/libANGLE/renderer/VertexArrayImpl.cpp) $(location src/libANGLE/renderer/driver_utils.cpp) $(location src/libANGLE/renderer/load_functions_table_autogen.cpp) $(location src/libANGLE/renderer/renderer_utils.cpp) $(location src/libANGLE/validationEGL.cpp) $(location src/libANGLE/validationES.cpp) $(location src/libANGLE/validationES1.cpp) $(location src/libANGLE/validationES2.cpp) $(location src/libANGLE/validationES3.cpp) $(location src/libANGLE/validationES31.cpp) $(location src/libANGLE/validationES32.cpp) $(location src/libANGLE/validationESEXT.cpp) $(location src/common/frame_capture_utils.h) $(location src/common/frame_capture_utils_autogen.h) $(location src/common/gl_enum_utils.h) $(location src/common/gl_enum_utils_autogen.h) $(location src/libANGLE/capture/FrameCapture.h) $(location src/libANGLE/capture/capture_egl_autogen.h) $(location src/libANGLE/capture/capture_gles_1_0_autogen.h) $(location src/libANGLE/capture/capture_gles_2_0_autogen.h) $(location src/libANGLE/capture/capture_gles_3_0_autogen.h) $(location src/libANGLE/capture/capture_gles_3_1_autogen.h) $(location src/libANGLE/capture/capture_gles_3_2_autogen.h) $(location src/libANGLE/capture/capture_gles_ext_autogen.h) $(location src/libANGLE/capture/serialize.h) $(location include/angle_gl.h) $(location include/export.h) $(location include/EGL/egl.h) $(location include/EGL/eglext.h) $(location include/EGL/eglext_angle.h) $(location include/EGL/eglplatform.h) $(location include/GLES/gl.h) $(location include/GLES/glplatform.h) $(location include/GLES/glext.h) $(location include/GLES2/gl2.h) $(location include/GLES2/gl2ext.h) $(location include/GLES2/gl2ext_angle.h) $(location include/GLES2/gl2platform.h) $(location include/GLES3/gl3.h) $(location include/GLES3/gl3platform.h) $(location include/GLES3/gl31.h) $(location include/GLES3/gl32.h) $(location include/GLX/glxext.h) $(location include/KHR/khrplatform.h) $(location include/WGL/wgl.h) $(location include/platform/Feature.h) $(location include/platform/autogen/FeaturesD3D_autogen.h) $(location include/platform/autogen/FeaturesGL_autogen.h) $(location include/platform/autogen/FeaturesMtl_autogen.h) $(location include/platform/autogen/FeaturesVk_autogen.h) $(location include/platform/autogen/FrontendFeatures_autogen.h) $(location include/platform/PlatformMethods.h) $(location include/vulkan/vulkan_fuchsia_ext.h) $(location include/GLSLANG/ShaderLang.h) $(location include/GLSLANG/ShaderVars.h) $(location src/compiler/translator/blocklayout.h) $(location src/compiler/translator/hlsl/blocklayoutHLSL.h) $(location include/EGL/egl.h) $(location include/EGL/eglext.h) $(location include/EGL/eglplatform.h) $(location include/GLES2/gl2.h) $(location include/GLES2/gl2ext.h) $(location include/GLES2/gl2platform.h) $(location include/GLES3/gl3.h) $(location include/GLES3/gl31.h) $(location include/GLES3/gl32.h) $(location include/GLES3/gl3platform.h) $(location include/KHR/khrplatform.h) $(location include/angle_gl.h) $(location src/compiler/translator/AsNode.h) $(location src/compiler/translator/BaseTypes.cpp) $(location src/compiler/translator/BaseTypes.h) $(location src/compiler/translator/BuiltInFunctionEmulator.cpp) $(location src/compiler/translator/BuiltInFunctionEmulator.h) $(location src/compiler/translator/CallDAG.cpp) $(location src/compiler/translator/CallDAG.h) $(location src/compiler/translator/CodeGen.cpp) $(location src/compiler/translator/CollectVariables.cpp) $(location src/compiler/translator/CollectVariables.h) $(location src/compiler/translator/Common.h) $(location src/compiler/translator/Compiler.cpp) $(location src/compiler/translator/Compiler.h) $(location src/compiler/translator/ConstantUnion.cpp) $(location src/compiler/translator/ConstantUnion.h) $(location src/compiler/translator/Declarator.cpp) $(location src/compiler/translator/Declarator.h) $(location src/compiler/translator/Diagnostics.cpp) $(location src/compiler/translator/Diagnostics.h) $(location src/compiler/translator/DirectiveHandler.cpp) $(location src/compiler/translator/DirectiveHandler.h) $(location src/compiler/translator/ExtensionBehavior.cpp) $(location src/compiler/translator/ExtensionBehavior.h) $(location src/compiler/translator/FlagStd140Structs.cpp) $(location src/compiler/translator/FlagStd140Structs.h) $(location src/compiler/translator/FunctionLookup.cpp) $(location src/compiler/translator/FunctionLookup.h) $(location src/compiler/translator/HashNames.cpp) $(location src/compiler/translator/HashNames.h) $(location src/compiler/translator/ImmutableString.h) $(location src/compiler/translator/ImmutableStringBuilder.cpp) $(location src/compiler/translator/ImmutableStringBuilder.h) $(location src/compiler/translator/InfoSink.cpp) $(location src/compiler/translator/InfoSink.h) $(location src/compiler/translator/Initialize.cpp) $(location src/compiler/translator/Initialize.h) $(location src/compiler/translator/InitializeDll.cpp) $(location src/compiler/translator/InitializeDll.h) $(location src/compiler/translator/InitializeGlobals.h) $(location src/compiler/translator/IntermNode.cpp) $(location src/compiler/translator/IntermNode.h) $(location src/compiler/translator/IntermRebuild.cpp) $(location src/compiler/translator/IntermRebuild.h) $(location src/compiler/translator/IsASTDepthBelowLimit.cpp) $(location src/compiler/translator/IsASTDepthBelowLimit.h) $(location src/compiler/translator/Name.cpp) $(location src/compiler/translator/Name.h) $(location src/compiler/translator/NodeType.h) $(location src/compiler/translator/Operator.cpp) $(location src/compiler/translator/Operator_autogen.h) $(location src/compiler/translator/OutputTree.cpp) $(location src/compiler/translator/OutputTree.h) $(location src/compiler/translator/ParseContext.cpp) $(location src/compiler/translator/ParseContext.h) $(location src/compiler/translator/PoolAlloc.cpp) $(location src/compiler/translator/PoolAlloc.h) $(location src/compiler/translator/Pragma.h) $(location src/compiler/translator/QualifierTypes.cpp) $(location src/compiler/translator/QualifierTypes.h) $(location src/compiler/translator/Severity.h) $(location src/compiler/translator/ShaderLang.cpp) $(location src/compiler/translator/ShaderVars.cpp) $(location src/compiler/translator/StaticType.h) $(location src/compiler/translator/Symbol.cpp) $(location src/compiler/translator/Symbol.h) $(location src/compiler/translator/SymbolTable.cpp) $(location src/compiler/translator/SymbolTable.h) $(location src/compiler/translator/SymbolTable_autogen.h) $(location src/compiler/translator/SymbolUniqueId.cpp) $(location src/compiler/translator/SymbolUniqueId.h) $(location src/compiler/translator/Types.cpp) $(location src/compiler/translator/Types.h) $(location src/compiler/translator/ValidateAST.cpp) $(location src/compiler/translator/ValidateAST.h) $(location src/compiler/translator/ValidateBarrierFunctionCall.cpp) $(location src/compiler/translator/ValidateBarrierFunctionCall.h) $(location src/compiler/translator/ValidateClipCullDistance.cpp) $(location src/compiler/translator/ValidateClipCullDistance.h) $(location src/compiler/translator/ValidateGlobalInitializer.cpp) $(location src/compiler/translator/ValidateGlobalInitializer.h) $(location src/compiler/translator/ValidateLimitations.cpp) $(location src/compiler/translator/ValidateLimitations.h) $(location src/compiler/translator/ValidateMaxParameters.cpp) $(location src/compiler/translator/ValidateMaxParameters.h) $(location src/compiler/translator/ValidateOutputs.cpp) $(location src/compiler/translator/ValidateOutputs.h) $(location src/compiler/translator/ValidateSwitch.cpp) $(location src/compiler/translator/ValidateSwitch.h) $(location src/compiler/translator/ValidateTypeSizeLimitations.cpp) $(location src/compiler/translator/ValidateTypeSizeLimitations.h) $(location src/compiler/translator/ValidateVaryingLocations.cpp) $(location src/compiler/translator/ValidateVaryingLocations.h) $(location src/compiler/translator/VariablePacker.cpp) $(location src/compiler/translator/VariablePacker.h) $(location src/compiler/translator/blocklayout.cpp) $(location src/compiler/translator/glsl/TranslatorESSL.h) $(location src/compiler/translator/glsl/TranslatorGLSL.h) $(location src/compiler/translator/glsl/VersionGLSL.h) $(location src/compiler/translator/glslang.h) $(location src/compiler/translator/glslang_lex_autogen.cpp) $(location src/compiler/translator/glslang_tab_autogen.cpp) $(location src/compiler/translator/glslang_tab_autogen.h) $(location src/compiler/translator/hlsl/TranslatorHLSL.h) $(location src/compiler/translator/length_limits.h) $(location src/compiler/translator/msl/DriverUniformMetal.h) $(location src/compiler/translator/msl/TranslatorMSL.h) $(location src/compiler/translator/null/TranslatorNULL.h) $(location src/compiler/translator/spirv/TranslatorSPIRV.h) $(location src/compiler/translator/tree_ops/ClampFragDepth.cpp) $(location src/compiler/translator/tree_ops/ClampFragDepth.h) $(location src/compiler/translator/tree_ops/ClampIndirectIndices.cpp) $(location src/compiler/translator/tree_ops/ClampIndirectIndices.h) $(location src/compiler/translator/tree_ops/ClampPointSize.cpp) $(location src/compiler/translator/tree_ops/ClampPointSize.h) $(location src/compiler/translator/tree_ops/DeclareAndInitBuiltinsForInstancedMultiview.cpp) $(location src/compiler/translator/tree_ops/DeclareAndInitBuiltinsForInstancedMultiview.h) $(location src/compiler/translator/tree_ops/DeclarePerVertexBlocks.cpp) $(location src/compiler/translator/tree_ops/DeclarePerVertexBlocks.h) $(location src/compiler/translator/tree_ops/DeferGlobalInitializers.cpp) $(location src/compiler/translator/tree_ops/DeferGlobalInitializers.h) $(location src/compiler/translator/tree_ops/EmulateGLFragColorBroadcast.cpp) $(location src/compiler/translator/tree_ops/EmulateGLFragColorBroadcast.h) $(location src/compiler/translator/tree_ops/EmulateMultiDrawShaderBuiltins.cpp) $(location src/compiler/translator/tree_ops/EmulateMultiDrawShaderBuiltins.h) $(location src/compiler/translator/tree_ops/FoldExpressions.cpp) $(location src/compiler/translator/tree_ops/FoldExpressions.h) $(location src/compiler/translator/tree_ops/ForcePrecisionQualifier.cpp) $(location src/compiler/translator/tree_ops/ForcePrecisionQualifier.h) $(location src/compiler/translator/tree_ops/InitializeVariables.cpp) $(location src/compiler/translator/tree_ops/InitializeVariables.h) $(location src/compiler/translator/tree_ops/MonomorphizeUnsupportedFunctions.cpp) $(location src/compiler/translator/tree_ops/MonomorphizeUnsupportedFunctions.h) $(location src/compiler/translator/tree_ops/PreTransformTextureCubeGradDerivatives.cpp) $(location src/compiler/translator/tree_ops/PreTransformTextureCubeGradDerivatives.h) $(location src/compiler/translator/tree_ops/PruneEmptyCases.cpp) $(location src/compiler/translator/tree_ops/PruneEmptyCases.h) $(location src/compiler/translator/tree_ops/PruneInfiniteLoops.cpp) $(location src/compiler/translator/tree_ops/PruneInfiniteLoops.h) $(location src/compiler/translator/tree_ops/PruneNoOps.cpp) $(location src/compiler/translator/tree_ops/PruneNoOps.h) $(location src/compiler/translator/tree_ops/RecordConstantPrecision.cpp) $(location src/compiler/translator/tree_ops/RecordConstantPrecision.h) $(location src/compiler/translator/tree_ops/RemoveArrayLengthMethod.cpp) $(location src/compiler/translator/tree_ops/RemoveArrayLengthMethod.h) $(location src/compiler/translator/tree_ops/RemoveAtomicCounterBuiltins.cpp) $(location src/compiler/translator/tree_ops/RemoveAtomicCounterBuiltins.h) $(location src/compiler/translator/tree_ops/RemoveDynamicIndexing.cpp) $(location src/compiler/translator/tree_ops/RemoveDynamicIndexing.h) $(location src/compiler/translator/tree_ops/RemoveInactiveInterfaceVariables.cpp) $(location src/compiler/translator/tree_ops/RemoveInactiveInterfaceVariables.h) $(location src/compiler/translator/tree_ops/RemoveInvariantDeclaration.cpp) $(location src/compiler/translator/tree_ops/RemoveInvariantDeclaration.h) $(location src/compiler/translator/tree_ops/RemoveUnreferencedVariables.cpp) $(location src/compiler/translator/tree_ops/RemoveUnreferencedVariables.h) $(location src/compiler/translator/tree_ops/RescopeGlobalVariables.cpp) $(location src/compiler/translator/tree_ops/RescopeGlobalVariables.h) $(location src/compiler/translator/tree_ops/RewriteArrayOfArrayOfOpaqueUniforms.cpp) $(location src/compiler/translator/tree_ops/RewriteArrayOfArrayOfOpaqueUniforms.h) $(location src/compiler/translator/tree_ops/RewriteAtomicCounters.cpp) $(location src/compiler/translator/tree_ops/RewriteAtomicCounters.h) $(location src/compiler/translator/tree_ops/RewriteDfdy.cpp) $(location src/compiler/translator/tree_ops/RewriteDfdy.h) $(location src/compiler/translator/tree_ops/RewritePixelLocalStorage.cpp) $(location src/compiler/translator/tree_ops/RewritePixelLocalStorage.h) $(location src/compiler/translator/tree_ops/RewriteStructSamplers.cpp) $(location src/compiler/translator/tree_ops/RewriteStructSamplers.h) $(location src/compiler/translator/tree_ops/RewriteTexelFetchOffset.cpp) $(location src/compiler/translator/tree_ops/RewriteTexelFetchOffset.h) $(location src/compiler/translator/tree_ops/SeparateDeclarations.cpp) $(location src/compiler/translator/tree_ops/SeparateDeclarations.h) $(location src/compiler/translator/tree_ops/SeparateStructFromUniformDeclarations.cpp) $(location src/compiler/translator/tree_ops/SeparateStructFromUniformDeclarations.h) $(location src/compiler/translator/tree_ops/SimplifyLoopConditions.cpp) $(location src/compiler/translator/tree_ops/SimplifyLoopConditions.h) $(location src/compiler/translator/tree_ops/SplitSequenceOperator.cpp) $(location src/compiler/translator/tree_ops/SplitSequenceOperator.h) $(location src/compiler/translator/tree_ops/glsl/RegenerateStructNames.h) $(location src/compiler/translator/tree_ops/glsl/RewriteRepeatedAssignToSwizzled.h) $(location src/compiler/translator/tree_ops/glsl/ScalarizeVecAndMatConstructorArgs.h) $(location src/compiler/translator/tree_ops/glsl/UseInterfaceBlockFields.h) $(location src/compiler/translator/tree_ops/glsl/apple/AddAndTrueToLoopCondition.h) $(location src/compiler/translator/tree_ops/glsl/apple/RewriteDoWhile.h) $(location src/compiler/translator/tree_ops/glsl/apple/RewriteRowMajorMatrices.h) $(location src/compiler/translator/tree_ops/glsl/apple/RewriteUnaryMinusOperatorFloat.h) $(location src/compiler/translator/tree_ops/glsl/apple/UnfoldShortCircuitAST.h) $(location src/compiler/translator/tree_util/BuiltIn.h) $(location src/compiler/translator/tree_util/BuiltIn_autogen.h) $(location src/compiler/translator/tree_util/DriverUniform.cpp) $(location src/compiler/translator/tree_util/DriverUniform.h) $(location src/compiler/translator/tree_util/FindFunction.cpp) $(location src/compiler/translator/tree_util/FindFunction.h) $(location src/compiler/translator/tree_util/FindMain.cpp) $(location src/compiler/translator/tree_util/FindMain.h) $(location src/compiler/translator/tree_util/FindPreciseNodes.cpp) $(location src/compiler/translator/tree_util/FindPreciseNodes.h) $(location src/compiler/translator/tree_util/FindSymbolNode.cpp) $(location src/compiler/translator/tree_util/FindSymbolNode.h) $(location src/compiler/translator/tree_util/IntermNodePatternMatcher.cpp) $(location src/compiler/translator/tree_util/IntermNodePatternMatcher.h) $(location src/compiler/translator/tree_util/IntermNode_util.cpp) $(location src/compiler/translator/tree_util/IntermNode_util.h) $(location src/compiler/translator/tree_util/IntermTraverse.cpp) $(location src/compiler/translator/tree_util/IntermTraverse.h) $(location src/compiler/translator/tree_util/NodeSearch.h) $(location src/compiler/translator/tree_util/ReplaceArrayOfMatrixVarying.cpp) $(location src/compiler/translator/tree_util/ReplaceArrayOfMatrixVarying.h) $(location src/compiler/translator/tree_util/ReplaceClipCullDistanceVariable.cpp) $(location src/compiler/translator/tree_util/ReplaceClipCullDistanceVariable.h) $(location src/compiler/translator/tree_util/ReplaceShadowingVariables.cpp) $(location src/compiler/translator/tree_util/ReplaceShadowingVariables.h) $(location src/compiler/translator/tree_util/ReplaceVariable.cpp) $(location src/compiler/translator/tree_util/ReplaceVariable.h) $(location src/compiler/translator/tree_util/RewriteSampleMaskVariable.cpp) $(location src/compiler/translator/tree_util/RewriteSampleMaskVariable.h) $(location src/compiler/translator/tree_util/RunAtTheBeginningOfShader.cpp) $(location src/compiler/translator/tree_util/RunAtTheBeginningOfShader.h) $(location src/compiler/translator/tree_util/RunAtTheEndOfShader.cpp) $(location src/compiler/translator/tree_util/RunAtTheEndOfShader.h) $(location src/compiler/translator/tree_util/SpecializationConstant.cpp) $(location src/compiler/translator/tree_util/SpecializationConstant.h) $(location src/compiler/translator/tree_util/Visit.h) $(location src/compiler/translator/util.cpp) $(location src/compiler/translator/util.h) $(location src/compiler/translator/wgsl/TranslatorWGSL.h) $(location src/compiler/translator/glsl/OutputGLSLBase.cpp) $(location src/compiler/translator/glsl/OutputGLSLBase.h) $(location src/compiler/translator/glsl/OutputGLSL.cpp) $(location src/compiler/translator/glsl/OutputGLSL.h) $(location src/compiler/translator/glsl/OutputESSL.cpp) $(location src/compiler/translator/glsl/OutputESSL.h) $(location src/compiler/translator/glsl/TranslatorESSL.cpp) $(location src/compiler/translator/glsl/BuiltInFunctionEmulatorGLSL.cpp) $(location src/compiler/translator/glsl/BuiltInFunctionEmulatorGLSL.h) $(location src/compiler/translator/glsl/ExtensionGLSL.cpp) $(location src/compiler/translator/glsl/ExtensionGLSL.h) $(location src/compiler/translator/glsl/TranslatorGLSL.cpp) $(location src/compiler/translator/glsl/VersionGLSL.cpp) $(location src/compiler/translator/tree_ops/glsl/RegenerateStructNames.cpp) $(location src/compiler/translator/tree_ops/glsl/RewriteRepeatedAssignToSwizzled.cpp) $(location src/compiler/translator/tree_ops/glsl/ScalarizeVecAndMatConstructorArgs.cpp) $(location src/compiler/translator/tree_ops/glsl/UseInterfaceBlockFields.cpp) $(location src/compiler/translator/tree_ops/glsl/apple/AddAndTrueToLoopCondition.cpp) $(location src/compiler/translator/tree_ops/glsl/apple/RewriteDoWhile.cpp) $(location src/compiler/translator/tree_ops/glsl/apple/RewriteRowMajorMatrices.cpp) $(location src/compiler/translator/tree_ops/glsl/apple/RewriteUnaryMinusOperatorFloat.cpp) $(location src/compiler/translator/tree_ops/glsl/apple/UnfoldShortCircuitAST.cpp) $(location src/compiler/translator/hlsl/ASTMetadataHLSL.cpp) $(location src/compiler/translator/hlsl/ASTMetadataHLSL.h) $(location src/compiler/translator/hlsl/AtomicCounterFunctionHLSL.cpp) $(location src/compiler/translator/hlsl/AtomicCounterFunctionHLSL.h) $(location src/compiler/translator/hlsl/BuiltInFunctionEmulatorHLSL.cpp) $(location src/compiler/translator/hlsl/BuiltInFunctionEmulatorHLSL.h) $(location src/compiler/translator/hlsl/ImageFunctionHLSL.cpp) $(location src/compiler/translator/hlsl/ImageFunctionHLSL.h) $(location src/compiler/translator/hlsl/OutputHLSL.cpp) $(location src/compiler/translator/hlsl/OutputHLSL.h) $(location src/compiler/translator/hlsl/ResourcesHLSL.cpp) $(location src/compiler/translator/hlsl/ResourcesHLSL.h) $(location src/compiler/translator/hlsl/ShaderStorageBlockFunctionHLSL.cpp) $(location src/compiler/translator/hlsl/ShaderStorageBlockFunctionHLSL.h) $(location src/compiler/translator/hlsl/ShaderStorageBlockOutputHLSL.cpp) $(location src/compiler/translator/hlsl/ShaderStorageBlockOutputHLSL.h) $(location src/compiler/translator/hlsl/StructureHLSL.cpp) $(location src/compiler/translator/hlsl/StructureHLSL.h) $(location src/compiler/translator/hlsl/TextureFunctionHLSL.cpp) $(location src/compiler/translator/hlsl/TextureFunctionHLSL.h) $(location src/compiler/translator/hlsl/TranslatorHLSL.cpp) $(location src/compiler/translator/hlsl/UtilsHLSL.cpp) $(location src/compiler/translator/hlsl/UtilsHLSL.h) $(location src/compiler/translator/hlsl/blocklayoutHLSL.cpp) $(location src/compiler/translator/hlsl/emulated_builtin_functions_hlsl_autogen.cpp) $(location src/compiler/translator/tree_ops/hlsl/AddDefaultReturnStatements.cpp) $(location src/compiler/translator/tree_ops/hlsl/AddDefaultReturnStatements.h) $(location src/compiler/translator/tree_ops/hlsl/AggregateAssignArraysInSSBOs.cpp) $(location src/compiler/translator/tree_ops/hlsl/AggregateAssignArraysInSSBOs.h) $(location src/compiler/translator/tree_ops/hlsl/AggregateAssignStructsInSSBOs.cpp) $(location src/compiler/translator/tree_ops/hlsl/AggregateAssignStructsInSSBOs.h) $(location src/compiler/translator/tree_ops/hlsl/ArrayReturnValueToOutParameter.cpp) $(location src/compiler/translator/tree_ops/hlsl/ArrayReturnValueToOutParameter.h) $(location src/compiler/translator/tree_ops/hlsl/BreakVariableAliasingInInnerLoops.cpp) $(location src/compiler/translator/tree_ops/hlsl/BreakVariableAliasingInInnerLoops.h) $(location src/compiler/translator/tree_ops/hlsl/ExpandIntegerPowExpressions.cpp) $(location src/compiler/translator/tree_ops/hlsl/ExpandIntegerPowExpressions.h) $(location src/compiler/translator/tree_ops/hlsl/RecordUniformBlocksWithLargeArrayMember.cpp) $(location src/compiler/translator/tree_ops/hlsl/RecordUniformBlocksWithLargeArrayMember.h) $(location src/compiler/translator/tree_ops/hlsl/RemoveSwitchFallThrough.cpp) $(location src/compiler/translator/tree_ops/hlsl/RemoveSwitchFallThrough.h) $(location src/compiler/translator/tree_ops/hlsl/RewriteAtomicFunctionExpressions.cpp) $(location src/compiler/translator/tree_ops/hlsl/RewriteAtomicFunctionExpressions.h) $(location src/compiler/translator/tree_ops/hlsl/RewriteElseBlocks.cpp) $(location src/compiler/translator/tree_ops/hlsl/RewriteElseBlocks.h) $(location src/compiler/translator/tree_ops/hlsl/RewriteExpressionsWithShaderStorageBlock.cpp) $(location src/compiler/translator/tree_ops/hlsl/RewriteExpressionsWithShaderStorageBlock.h) $(location src/compiler/translator/tree_ops/hlsl/RewriteUnaryMinusOperatorInt.cpp) $(location src/compiler/translator/tree_ops/hlsl/RewriteUnaryMinusOperatorInt.h) $(location src/compiler/translator/tree_ops/hlsl/SeparateArrayConstructorStatements.cpp) $(location src/compiler/translator/tree_ops/hlsl/SeparateArrayConstructorStatements.h) $(location src/compiler/translator/tree_ops/hlsl/SeparateArrayInitialization.cpp) $(location src/compiler/translator/tree_ops/hlsl/SeparateArrayInitialization.h) $(location src/compiler/translator/tree_ops/hlsl/SeparateExpressionsReturningArrays.cpp) $(location src/compiler/translator/tree_ops/hlsl/SeparateExpressionsReturningArrays.h) $(location src/compiler/translator/tree_ops/hlsl/UnfoldShortCircuitToIf.cpp) $(location src/compiler/translator/tree_ops/hlsl/UnfoldShortCircuitToIf.h) $(location src/compiler/translator/tree_ops/hlsl/WrapSwitchStatementsInBlocks.cpp) $(location src/compiler/translator/tree_ops/hlsl/WrapSwitchStatementsInBlocks.h) $(location src/compiler/translator/spirv/BuildSPIRV.cpp) $(location src/compiler/translator/spirv/BuildSPIRV.h) $(location src/compiler/translator/spirv/BuiltinsWorkaround.cpp) $(location src/compiler/translator/spirv/BuiltinsWorkaround.h) $(location src/compiler/translator/spirv/OutputSPIRV.cpp) $(location src/compiler/translator/spirv/OutputSPIRV.h) $(location src/compiler/translator/spirv/TranslatorSPIRV.cpp) $(location src/compiler/translator/tree_ops/spirv/ClampGLLayer.cpp) $(location src/compiler/translator/tree_ops/spirv/ClampGLLayer.h) $(location src/compiler/translator/tree_ops/spirv/EmulateAdvancedBlendEquations.cpp) $(location src/compiler/translator/tree_ops/spirv/EmulateAdvancedBlendEquations.h) $(location src/compiler/translator/tree_ops/spirv/EmulateDithering.cpp) $(location src/compiler/translator/tree_ops/spirv/EmulateDithering.h) $(location src/compiler/translator/tree_ops/spirv/EmulateFragColorData.cpp) $(location src/compiler/translator/tree_ops/spirv/EmulateFragColorData.h) $(location src/compiler/translator/tree_ops/spirv/EmulateFramebufferFetch.cpp) $(location src/compiler/translator/tree_ops/spirv/EmulateFramebufferFetch.h) $(location src/compiler/translator/tree_ops/spirv/EmulateYUVBuiltIns.cpp) $(location src/compiler/translator/tree_ops/spirv/EmulateYUVBuiltIns.h) $(location src/compiler/translator/tree_ops/spirv/FlagSamplersWithTexelFetch.cpp) $(location src/compiler/translator/tree_ops/spirv/FlagSamplersWithTexelFetch.h) $(location src/compiler/translator/tree_ops/spirv/ReswizzleYUVOps.cpp) $(location src/compiler/translator/tree_ops/spirv/ReswizzleYUVOps.h) $(location src/compiler/translator/tree_ops/spirv/RewriteInterpolateAtOffset.cpp) $(location src/compiler/translator/tree_ops/spirv/RewriteInterpolateAtOffset.h) $(location src/compiler/translator/tree_ops/spirv/RewriteR32fImages.cpp) $(location src/compiler/translator/tree_ops/spirv/RewriteR32fImages.h) $(location src/compiler/translator/ImmutableString_autogen.cpp) $(location src/compiler/translator/SymbolTable_autogen.cpp) $(location src/compiler/translator/msl/AstHelpers.cpp) $(location src/compiler/translator/msl/AstHelpers.h) $(location src/compiler/translator/msl/ConstantNames.cpp) $(location src/compiler/translator/msl/DebugSink.h) $(location src/compiler/translator/msl/DiscoverDependentFunctions.cpp) $(location src/compiler/translator/msl/DiscoverDependentFunctions.h) $(location src/compiler/translator/msl/DiscoverEnclosingFunctionTraverser.cpp) $(location src/compiler/translator/msl/DiscoverEnclosingFunctionTraverser.h) $(location src/compiler/translator/msl/DriverUniformMetal.cpp) $(location src/compiler/translator/msl/EmitMetal.cpp) $(location src/compiler/translator/msl/EmitMetal.h) $(location src/compiler/translator/msl/IdGen.cpp) $(location src/compiler/translator/msl/IdGen.h) $(location src/compiler/translator/msl/Layout.cpp) $(location src/compiler/translator/msl/Layout.h) $(location src/compiler/translator/msl/MapFunctionsToDefinitions.cpp) $(location src/compiler/translator/msl/MapFunctionsToDefinitions.h) $(location src/compiler/translator/msl/MapSymbols.cpp) $(location src/compiler/translator/msl/MapSymbols.h) $(location src/compiler/translator/msl/ModifyStruct.cpp) $(location src/compiler/translator/msl/ModifyStruct.h) $(location src/compiler/translator/msl/Pipeline.cpp) $(location src/compiler/translator/msl/Pipeline.h) $(location src/compiler/translator/msl/ProgramPrelude.cpp) $(location src/compiler/translator/msl/ProgramPrelude.h) $(location src/compiler/translator/msl/Reference.h) $(location src/compiler/translator/msl/RewritePipelines.cpp) $(location src/compiler/translator/msl/RewritePipelines.h) $(location src/compiler/translator/msl/SkippingTraverser.h) $(location src/compiler/translator/msl/SymbolEnv.cpp) $(location src/compiler/translator/msl/SymbolEnv.h) $(location src/compiler/translator/msl/ToposortStructs.cpp) $(location src/compiler/translator/msl/ToposortStructs.h) $(location src/compiler/translator/msl/TranslatorMSL.cpp) $(location src/compiler/translator/msl/UtilsMSL.cpp) $(location src/compiler/translator/msl/UtilsMSL.h) $(location src/compiler/translator/tree_ops/msl/AddExplicitTypeCasts.cpp) $(location src/compiler/translator/tree_ops/msl/AddExplicitTypeCasts.h) $(location src/compiler/translator/tree_ops/msl/ConvertUnsupportedConstructorsToFunctionCalls.cpp) $(location src/compiler/translator/tree_ops/msl/ConvertUnsupportedConstructorsToFunctionCalls.h) $(location src/compiler/translator/tree_ops/msl/FixTypeConstructors.cpp) $(location src/compiler/translator/tree_ops/msl/FixTypeConstructors.h) $(location src/compiler/translator/tree_ops/msl/GuardFragDepthWrite.cpp) $(location src/compiler/translator/tree_ops/msl/GuardFragDepthWrite.h) $(location src/compiler/translator/tree_ops/msl/HoistConstants.cpp) $(location src/compiler/translator/tree_ops/msl/HoistConstants.h) $(location src/compiler/translator/tree_ops/msl/IntroduceVertexIndexID.cpp) $(location src/compiler/translator/tree_ops/msl/IntroduceVertexIndexID.h) $(location src/compiler/translator/tree_ops/msl/ReduceInterfaceBlocks.cpp) $(location src/compiler/translator/tree_ops/msl/ReduceInterfaceBlocks.h) $(location src/compiler/translator/tree_ops/msl/RewriteCaseDeclarations.cpp) $(location src/compiler/translator/tree_ops/msl/RewriteCaseDeclarations.h) $(location src/compiler/translator/tree_ops/msl/RewriteInterpolants.cpp) $(location src/compiler/translator/tree_ops/msl/RewriteInterpolants.h) $(location src/compiler/translator/tree_ops/msl/RewriteOutArgs.cpp) $(location src/compiler/translator/tree_ops/msl/RewriteOutArgs.h) $(location src/compiler/translator/tree_ops/msl/RewriteUnaddressableReferences.cpp) $(location src/compiler/translator/tree_ops/msl/RewriteUnaddressableReferences.h) $(location src/compiler/translator/tree_ops/msl/SeparateCompoundExpressions.cpp) $(location src/compiler/translator/tree_ops/msl/SeparateCompoundExpressions.h) $(location src/compiler/translator/tree_ops/msl/TransposeRowMajorMatrices.cpp) $(location src/compiler/translator/tree_ops/msl/TransposeRowMajorMatrices.h) $(location src/compiler/translator/tree_ops/msl/WrapMain.cpp) $(location src/compiler/translator/tree_ops/msl/WrapMain.h) $(location src/compiler/translator/wgsl/OutputUniformBlocks.cpp) $(location src/compiler/translator/wgsl/OutputUniformBlocks.h) $(location src/compiler/translator/wgsl/RewritePipelineVariables.cpp) $(location src/compiler/translator/wgsl/RewritePipelineVariables.h) $(location src/compiler/translator/wgsl/TranslatorWGSL.cpp) $(location src/compiler/translator/wgsl/Utils.cpp) $(location src/compiler/translator/wgsl/Utils.h) $(location src/compiler/preprocessor/DiagnosticsBase.cpp) $(location src/compiler/preprocessor/DiagnosticsBase.h) $(location src/compiler/preprocessor/DirectiveHandlerBase.cpp) $(location src/compiler/preprocessor/DirectiveHandlerBase.h) $(location src/compiler/preprocessor/DirectiveParser.cpp) $(location src/compiler/preprocessor/DirectiveParser.h) $(location src/compiler/preprocessor/ExpressionParser.h) $(location src/compiler/preprocessor/Input.cpp) $(location src/compiler/preprocessor/Input.h) $(location src/compiler/preprocessor/Lexer.cpp) $(location src/compiler/preprocessor/Lexer.h) $(location src/compiler/preprocessor/Macro.cpp) $(location src/compiler/preprocessor/Macro.h) $(location src/compiler/preprocessor/MacroExpander.cpp) $(location src/compiler/preprocessor/MacroExpander.h) $(location src/compiler/preprocessor/Preprocessor.cpp) $(location src/compiler/preprocessor/Preprocessor.h) $(location src/compiler/preprocessor/SourceLocation.h) $(location src/compiler/preprocessor/Token.cpp) $(location src/compiler/preprocessor/Token.h) $(location src/compiler/preprocessor/Tokenizer.h) $(location src/compiler/preprocessor/numeric_lex.h) $(location src/compiler/preprocessor/preprocessor_lex_autogen.cpp) $(location src/compiler/preprocessor/preprocessor_tab_autogen.cpp) $(location src/libANGLE/renderer/vulkan/AllocatorHelperPool.cpp) $(location src/libANGLE/renderer/vulkan/AllocatorHelperPool.h) $(location src/libANGLE/renderer/vulkan/AllocatorHelperRing.cpp) $(location src/libANGLE/renderer/vulkan/AllocatorHelperRing.h) $(location src/libANGLE/renderer/vulkan/BufferVk.cpp) $(location src/libANGLE/renderer/vulkan/BufferVk.h) $(location src/libANGLE/renderer/vulkan/CommandProcessor.cpp) $(location src/libANGLE/renderer/vulkan/CommandProcessor.h) $(location src/libANGLE/renderer/vulkan/CompilerVk.cpp) $(location src/libANGLE/renderer/vulkan/CompilerVk.h) $(location src/libANGLE/renderer/vulkan/ContextVk.cpp) $(location src/libANGLE/renderer/vulkan/ContextVk.h) $(location src/libANGLE/renderer/vulkan/DebugAnnotatorVk.cpp) $(location src/libANGLE/renderer/vulkan/DebugAnnotatorVk.h) $(location src/libANGLE/renderer/vulkan/DeviceVk.cpp) $(location src/libANGLE/renderer/vulkan/DeviceVk.h) $(location src/libANGLE/renderer/vulkan/DisplayVk.cpp) $(location src/libANGLE/renderer/vulkan/DisplayVk.h) $(location src/libANGLE/renderer/vulkan/DisplayVk_api.h) $(location src/libANGLE/renderer/vulkan/FenceNVVk.cpp) $(location src/libANGLE/renderer/vulkan/FenceNVVk.h) $(location src/libANGLE/renderer/vulkan/FramebufferVk.cpp) $(location src/libANGLE/renderer/vulkan/FramebufferVk.h) $(location src/libANGLE/renderer/vulkan/ImageVk.cpp) $(location src/libANGLE/renderer/vulkan/ImageVk.h) $(location src/libANGLE/renderer/vulkan/MemoryObjectVk.cpp) $(location src/libANGLE/renderer/vulkan/MemoryObjectVk.h) $(location src/libANGLE/renderer/vulkan/MemoryTracking.cpp) $(location src/libANGLE/renderer/vulkan/MemoryTracking.h) $(location src/libANGLE/renderer/vulkan/OverlayVk.cpp) $(location src/libANGLE/renderer/vulkan/OverlayVk.h) $(location src/libANGLE/renderer/vulkan/PersistentCommandPool.cpp) $(location src/libANGLE/renderer/vulkan/PersistentCommandPool.h) $(location src/libANGLE/renderer/vulkan/ProgramExecutableVk.cpp) $(location src/libANGLE/renderer/vulkan/ProgramExecutableVk.h) $(location src/libANGLE/renderer/vulkan/ProgramPipelineVk.cpp) $(location src/libANGLE/renderer/vulkan/ProgramPipelineVk.h) $(location src/libANGLE/renderer/vulkan/ProgramVk.cpp) $(location src/libANGLE/renderer/vulkan/ProgramVk.h) $(location src/libANGLE/renderer/vulkan/QueryVk.cpp) $(location src/libANGLE/renderer/vulkan/QueryVk.h) $(location src/libANGLE/renderer/vulkan/RenderTargetVk.cpp) $(location src/libANGLE/renderer/vulkan/RenderTargetVk.h) $(location src/libANGLE/renderer/vulkan/RenderbufferVk.cpp) $(location src/libANGLE/renderer/vulkan/RenderbufferVk.h) $(location src/libANGLE/renderer/vulkan/SamplerVk.cpp) $(location src/libANGLE/renderer/vulkan/SamplerVk.h) $(location src/libANGLE/renderer/vulkan/SecondaryCommandBuffer.cpp) $(location src/libANGLE/renderer/vulkan/SecondaryCommandBuffer.h) $(location src/libANGLE/renderer/vulkan/SecondaryCommandPool.cpp) $(location src/libANGLE/renderer/vulkan/SecondaryCommandPool.h) $(location src/libANGLE/renderer/vulkan/SemaphoreVk.cpp) $(location src/libANGLE/renderer/vulkan/SemaphoreVk.h) $(location src/libANGLE/renderer/vulkan/ShaderInterfaceVariableInfoMap.cpp) $(location src/libANGLE/renderer/vulkan/ShaderInterfaceVariableInfoMap.h) $(location src/libANGLE/renderer/vulkan/ShaderVk.cpp) $(location src/libANGLE/renderer/vulkan/ShaderVk.h) $(location src/libANGLE/renderer/vulkan/ShareGroupVk.cpp) $(location src/libANGLE/renderer/vulkan/ShareGroupVk.h) $(location src/libANGLE/renderer/vulkan/Suballocation.cpp) $(location src/libANGLE/renderer/vulkan/Suballocation.h) $(location src/libANGLE/renderer/vulkan/SurfaceVk.cpp) $(location src/libANGLE/renderer/vulkan/SurfaceVk.h) $(location src/libANGLE/renderer/vulkan/SyncVk.cpp) $(location src/libANGLE/renderer/vulkan/SyncVk.h) $(location src/libANGLE/renderer/vulkan/TextureVk.cpp) $(location src/libANGLE/renderer/vulkan/TextureVk.h) $(location src/libANGLE/renderer/vulkan/TransformFeedbackVk.cpp) $(location src/libANGLE/renderer/vulkan/TransformFeedbackVk.h) $(location src/libANGLE/renderer/vulkan/UtilsVk.cpp) $(location src/libANGLE/renderer/vulkan/UtilsVk.h) $(location src/libANGLE/renderer/vulkan/VertexArrayVk.cpp) $(location src/libANGLE/renderer/vulkan/VertexArrayVk.h) $(location src/libANGLE/renderer/vulkan/VkImageImageSiblingVk.cpp) $(location src/libANGLE/renderer/vulkan/VkImageImageSiblingVk.h) $(location src/libANGLE/renderer/vulkan/VulkanSecondaryCommandBuffer.cpp) $(location src/libANGLE/renderer/vulkan/VulkanSecondaryCommandBuffer.h) $(location src/libANGLE/renderer/vulkan/android/vk_android_utils.cpp) $(location src/libANGLE/renderer/vulkan/android/vk_android_utils.h) $(location src/libANGLE/renderer/vulkan/spv_utils.cpp) $(location src/libANGLE/renderer/vulkan/spv_utils.h) $(location src/libANGLE/renderer/vulkan/vk_cache_utils.cpp) $(location src/libANGLE/renderer/vulkan/vk_cache_utils.h) $(location src/libANGLE/renderer/vulkan/vk_caps_utils.cpp) $(location src/libANGLE/renderer/vulkan/vk_caps_utils.h) $(location src/libANGLE/renderer/vulkan/vk_command_buffer_utils.h) $(location src/libANGLE/renderer/vulkan/vk_format_table_autogen.cpp) $(location src/libANGLE/renderer/vulkan/vk_format_utils.cpp) $(location src/libANGLE/renderer/vulkan/vk_format_utils.h) $(location src/libANGLE/renderer/vulkan/vk_helpers.cpp) $(location src/libANGLE/renderer/vulkan/vk_helpers.h) $(location src/libANGLE/renderer/vulkan/vk_internal_shaders_autogen.cpp) $(location src/libANGLE/renderer/vulkan/vk_internal_shaders_autogen.h) $(location src/libANGLE/renderer/vulkan/vk_mandatory_format_support_table_autogen.cpp) $(location src/libANGLE/renderer/vulkan/vk_ref_counted_event.cpp) $(location src/libANGLE/renderer/vulkan/vk_ref_counted_event.h) $(location src/libANGLE/renderer/vulkan/vk_renderer.cpp) $(location src/libANGLE/renderer/vulkan/vk_renderer.h) $(location src/libANGLE/renderer/vulkan/vk_resource.cpp) $(location src/libANGLE/renderer/vulkan/vk_resource.h) $(location src/libANGLE/renderer/vulkan/vk_utils.cpp) $(location src/libANGLE/renderer/vulkan/vk_utils.h) $(location src/libANGLE/renderer/vulkan/vk_wrapper.h) $(location src/libANGLE/renderer/vulkan/android/AHBFunctions.cpp) $(location src/libANGLE/renderer/vulkan/android/AHBFunctions.h) $(location src/libANGLE/renderer/vulkan/android/DisplayVkAndroid.cpp) $(location src/libANGLE/renderer/vulkan/android/DisplayVkAndroid.h) $(location src/libANGLE/renderer/vulkan/android/HardwareBufferImageSiblingVkAndroid.cpp) $(location src/libANGLE/renderer/vulkan/android/HardwareBufferImageSiblingVkAndroid.h) $(location src/libANGLE/renderer/vulkan/android/WindowSurfaceVkAndroid.cpp) $(location src/libANGLE/renderer/vulkan/android/WindowSurfaceVkAndroid.h) $(location src/libANGLE/renderer/gl/BlitGL.cpp) $(location src/libANGLE/renderer/gl/BlitGL.h) $(location src/libANGLE/renderer/gl/BufferGL.cpp) $(location src/libANGLE/renderer/gl/BufferGL.h) $(location src/libANGLE/renderer/gl/ClearMultiviewGL.cpp) $(location src/libANGLE/renderer/gl/ClearMultiviewGL.h) $(location src/libANGLE/renderer/gl/CompilerGL.cpp) $(location src/libANGLE/renderer/gl/CompilerGL.h) $(location src/libANGLE/renderer/gl/ContextGL.cpp) $(location src/libANGLE/renderer/gl/ContextGL.h) $(location src/libANGLE/renderer/gl/DispatchTableGL_autogen.cpp) $(location src/libANGLE/renderer/gl/DispatchTableGL_autogen.h) $(location src/libANGLE/renderer/gl/DisplayGL.cpp) $(location src/libANGLE/renderer/gl/DisplayGL.h) $(location src/libANGLE/renderer/gl/FenceNVGL.cpp) $(location src/libANGLE/renderer/gl/FenceNVGL.h) $(location src/libANGLE/renderer/gl/FramebufferGL.cpp) $(location src/libANGLE/renderer/gl/FramebufferGL.h) $(location src/libANGLE/renderer/gl/FunctionsGL.cpp) $(location src/libANGLE/renderer/gl/FunctionsGL.h) $(location src/libANGLE/renderer/gl/ImageGL.cpp) $(location src/libANGLE/renderer/gl/ImageGL.h) $(location src/libANGLE/renderer/gl/MemoryObjectGL.cpp) $(location src/libANGLE/renderer/gl/MemoryObjectGL.h) $(location src/libANGLE/renderer/gl/ProgramExecutableGL.cpp) $(location src/libANGLE/renderer/gl/ProgramExecutableGL.h) $(location src/libANGLE/renderer/gl/ProgramGL.cpp) $(location src/libANGLE/renderer/gl/ProgramGL.h) $(location src/libANGLE/renderer/gl/ProgramPipelineGL.cpp) $(location src/libANGLE/renderer/gl/ProgramPipelineGL.h) $(location src/libANGLE/renderer/gl/QueryGL.cpp) $(location src/libANGLE/renderer/gl/QueryGL.h) $(location src/libANGLE/renderer/gl/RenderbufferGL.cpp) $(location src/libANGLE/renderer/gl/RenderbufferGL.h) $(location src/libANGLE/renderer/gl/RendererGL.cpp) $(location src/libANGLE/renderer/gl/RendererGL.h) $(location src/libANGLE/renderer/gl/SamplerGL.cpp) $(location src/libANGLE/renderer/gl/SamplerGL.h) $(location src/libANGLE/renderer/gl/SemaphoreGL.cpp) $(location src/libANGLE/renderer/gl/SemaphoreGL.h) $(location src/libANGLE/renderer/gl/ShaderGL.cpp) $(location src/libANGLE/renderer/gl/ShaderGL.h) $(location src/libANGLE/renderer/gl/StateManagerGL.cpp) $(location src/libANGLE/renderer/gl/StateManagerGL.h) $(location src/libANGLE/renderer/gl/SurfaceGL.cpp) $(location src/libANGLE/renderer/gl/SurfaceGL.h) $(location src/libANGLE/renderer/gl/SyncGL.cpp) $(location src/libANGLE/renderer/gl/SyncGL.h) $(location src/libANGLE/renderer/gl/TextureGL.cpp) $(location src/libANGLE/renderer/gl/TextureGL.h) $(location src/libANGLE/renderer/gl/TransformFeedbackGL.cpp) $(location src/libANGLE/renderer/gl/TransformFeedbackGL.h) $(location src/libANGLE/renderer/gl/VertexArrayGL.cpp) $(location src/libANGLE/renderer/gl/VertexArrayGL.h) $(location src/libANGLE/renderer/gl/formatutilsgl.cpp) $(location src/libANGLE/renderer/gl/formatutilsgl.h) $(location src/libANGLE/renderer/gl/functionsgl_enums.h) $(location src/libANGLE/renderer/gl/functionsgl_typedefs.h) $(location src/libANGLE/renderer/gl/renderergl_utils.cpp) $(location src/libANGLE/renderer/gl/renderergl_utils.h) $(location src/libANGLE/renderer/gl/egl/ContextEGL.cpp) $(location src/libANGLE/renderer/gl/egl/ContextEGL.h) $(location src/libANGLE/renderer/gl/egl/DeviceEGL.cpp) $(location src/libANGLE/renderer/gl/egl/DeviceEGL.h) $(location src/libANGLE/renderer/gl/egl/DisplayEGL.cpp) $(location src/libANGLE/renderer/gl/egl/DisplayEGL.h) $(location src/libANGLE/renderer/gl/egl/DmaBufImageSiblingEGL.cpp) $(location src/libANGLE/renderer/gl/egl/DmaBufImageSiblingEGL.h) $(location src/libANGLE/renderer/gl/egl/ExternalImageSiblingEGL.h) $(location src/libANGLE/renderer/gl/egl/FunctionsEGL.cpp) $(location src/libANGLE/renderer/gl/egl/FunctionsEGL.h) $(location src/libANGLE/renderer/gl/egl/FunctionsEGLDL.cpp) $(location src/libANGLE/renderer/gl/egl/FunctionsEGLDL.h) $(location src/libANGLE/renderer/gl/egl/ImageEGL.cpp) $(location src/libANGLE/renderer/gl/egl/ImageEGL.h) $(location src/libANGLE/renderer/gl/egl/PbufferSurfaceEGL.cpp) $(location src/libANGLE/renderer/gl/egl/PbufferSurfaceEGL.h) $(location src/libANGLE/renderer/gl/egl/RendererEGL.cpp) $(location src/libANGLE/renderer/gl/egl/RendererEGL.h) $(location src/libANGLE/renderer/gl/egl/SurfaceEGL.cpp) $(location src/libANGLE/renderer/gl/egl/SurfaceEGL.h) $(location src/libANGLE/renderer/gl/egl/SyncEGL.cpp) $(location src/libANGLE/renderer/gl/egl/SyncEGL.h) $(location src/libANGLE/renderer/gl/egl/WindowSurfaceEGL.cpp) $(location src/libANGLE/renderer/gl/egl/WindowSurfaceEGL.h) $(location src/libANGLE/renderer/gl/egl/egl_utils.cpp) $(location src/libANGLE/renderer/gl/egl/egl_utils.h) $(location src/libANGLE/renderer/gl/egl/functionsegl_typedefs.h) $(location src/libANGLE/renderer/gl/egl/android/DisplayAndroid.cpp) $(location src/libANGLE/renderer/gl/egl/android/DisplayAndroid.h) $(location src/libANGLE/renderer/gl/egl/android/NativeBufferImageSiblingAndroid.cpp) $(location src/libANGLE/renderer/gl/egl/android/NativeBufferImageSiblingAndroid.h) $(location src/libANGLE/renderer/gl/null_functions.cpp) $(location src/libANGLE/renderer/gl/null_functions.h) $(location src/libANGLE/renderer/d3d/BufferD3D.cpp) $(location src/libANGLE/renderer/d3d/BufferD3D.h) $(location src/libANGLE/renderer/d3d/CompilerD3D.cpp) $(location src/libANGLE/renderer/d3d/CompilerD3D.h) $(location src/libANGLE/renderer/d3d/ContextD3D.h) $(location src/libANGLE/renderer/d3d/DisplayD3D.cpp) $(location src/libANGLE/renderer/d3d/DisplayD3D.h) $(location src/libANGLE/renderer/d3d/DynamicHLSL.cpp) $(location src/libANGLE/renderer/d3d/DynamicHLSL.h) $(location src/libANGLE/renderer/d3d/DynamicImage2DHLSL.cpp) $(location src/libANGLE/renderer/d3d/DynamicImage2DHLSL.h) $(location src/libANGLE/renderer/d3d/EGLImageD3D.cpp) $(location src/libANGLE/renderer/d3d/EGLImageD3D.h) $(location src/libANGLE/renderer/d3d/FramebufferD3D.cpp) $(location src/libANGLE/renderer/d3d/FramebufferD3D.h) $(location src/libANGLE/renderer/d3d/HLSLCompiler.cpp) $(location src/libANGLE/renderer/d3d/HLSLCompiler.h) $(location src/libANGLE/renderer/d3d/ImageD3D.cpp) $(location src/libANGLE/renderer/d3d/ImageD3D.h) $(location src/libANGLE/renderer/d3d/IndexBuffer.cpp) $(location src/libANGLE/renderer/d3d/IndexBuffer.h) $(location src/libANGLE/renderer/d3d/IndexDataManager.cpp) $(location src/libANGLE/renderer/d3d/IndexDataManager.h) $(location src/libANGLE/renderer/d3d/NativeWindowD3D.cpp) $(location src/libANGLE/renderer/d3d/NativeWindowD3D.h) $(location src/libANGLE/renderer/d3d/ProgramD3D.cpp) $(location src/libANGLE/renderer/d3d/ProgramD3D.h) $(location src/libANGLE/renderer/d3d/ProgramExecutableD3D.cpp) $(location src/libANGLE/renderer/d3d/ProgramExecutableD3D.h) $(location src/libANGLE/renderer/d3d/RenderTargetD3D.cpp) $(location src/libANGLE/renderer/d3d/RenderTargetD3D.h) $(location src/libANGLE/renderer/d3d/RenderbufferD3D.cpp) $(location src/libANGLE/renderer/d3d/RenderbufferD3D.h) $(location src/libANGLE/renderer/d3d/RendererD3D.cpp) $(location src/libANGLE/renderer/d3d/RendererD3D.h) $(location src/libANGLE/renderer/d3d/SamplerD3D.h) $(location src/libANGLE/renderer/d3d/ShaderD3D.cpp) $(location src/libANGLE/renderer/d3d/ShaderD3D.h) $(location src/libANGLE/renderer/d3d/ShaderExecutableD3D.cpp) $(location src/libANGLE/renderer/d3d/ShaderExecutableD3D.h) $(location src/libANGLE/renderer/d3d/SurfaceD3D.cpp) $(location src/libANGLE/renderer/d3d/SurfaceD3D.h) $(location src/libANGLE/renderer/d3d/SwapChainD3D.cpp) $(location src/libANGLE/renderer/d3d/SwapChainD3D.h) $(location src/libANGLE/renderer/d3d/TextureD3D.cpp) $(location src/libANGLE/renderer/d3d/TextureD3D.h) $(location src/libANGLE/renderer/d3d/TextureStorage.h) $(location src/libANGLE/renderer/d3d/VertexBuffer.cpp) $(location src/libANGLE/renderer/d3d/VertexBuffer.h) $(location src/libANGLE/renderer/d3d/VertexDataManager.cpp) $(location src/libANGLE/renderer/d3d/VertexDataManager.h) $(location src/libANGLE/renderer/d3d/driver_utils_d3d.cpp) $(location src/libANGLE/renderer/d3d/driver_utils_d3d.h) $(location src/libANGLE/renderer/d3d/formatutilsD3D.h) $(location src/libANGLE/renderer/null/BufferNULL.cpp) $(location src/libANGLE/renderer/null/BufferNULL.h) $(location src/libANGLE/renderer/null/CompilerNULL.cpp) $(location src/libANGLE/renderer/null/CompilerNULL.h) $(location src/libANGLE/renderer/null/ContextNULL.cpp) $(location src/libANGLE/renderer/null/ContextNULL.h) $(location src/libANGLE/renderer/null/DeviceNULL.cpp) $(location src/libANGLE/renderer/null/DeviceNULL.h) $(location src/libANGLE/renderer/null/DisplayNULL.cpp) $(location src/libANGLE/renderer/null/DisplayNULL.h) $(location src/libANGLE/renderer/null/FenceNVNULL.cpp) $(location src/libANGLE/renderer/null/FenceNVNULL.h) $(location src/libANGLE/renderer/null/FramebufferNULL.cpp) $(location src/libANGLE/renderer/null/FramebufferNULL.h) $(location src/libANGLE/renderer/null/ImageNULL.cpp) $(location src/libANGLE/renderer/null/ImageNULL.h) $(location src/libANGLE/renderer/null/ProgramExecutableNULL.cpp) $(location src/libANGLE/renderer/null/ProgramExecutableNULL.h) $(location src/libANGLE/renderer/null/ProgramNULL.cpp) $(location src/libANGLE/renderer/null/ProgramNULL.h) $(location src/libANGLE/renderer/null/ProgramPipelineNULL.cpp) $(location src/libANGLE/renderer/null/ProgramPipelineNULL.h) $(location src/libANGLE/renderer/null/QueryNULL.cpp) $(location src/libANGLE/renderer/null/QueryNULL.h) $(location src/libANGLE/renderer/null/RenderbufferNULL.cpp) $(location src/libANGLE/renderer/null/RenderbufferNULL.h) $(location src/libANGLE/renderer/null/SamplerNULL.cpp) $(location src/libANGLE/renderer/null/SamplerNULL.h) $(location src/libANGLE/renderer/null/ShaderNULL.cpp) $(location src/libANGLE/renderer/null/ShaderNULL.h) $(location src/libANGLE/renderer/null/SurfaceNULL.cpp) $(location src/libANGLE/renderer/null/SurfaceNULL.h) $(location src/libANGLE/renderer/null/SyncNULL.cpp) $(location src/libANGLE/renderer/null/SyncNULL.h) $(location src/libANGLE/renderer/null/TextureNULL.cpp) $(location src/libANGLE/renderer/null/TextureNULL.h) $(location src/libANGLE/renderer/null/TransformFeedbackNULL.cpp) $(location src/libANGLE/renderer/null/TransformFeedbackNULL.h) $(location src/libANGLE/renderer/null/VertexArrayNULL.cpp) $(location src/libANGLE/renderer/null/VertexArrayNULL.h)\" > $(genDir)/___angle_program_version_id___build_toolchain_android_android_clang_arm64__rule.rsp && $(location src/program_serialize_data_version.py) $(location ANGLEShaderProgramVersion.h) $(genDir)/___angle_program_version_id___build_toolchain_android_android_clang_arm64__rule.rsp",
    srcs: [
        "include/EGL/egl.h",
        "include/EGL/eglext.h",
        "include/EGL/eglext_angle.h",
        "include/EGL/eglplatform.h",
        "include/GLES/gl.h",
        "include/GLES/glext.h",
        "include/GLES/glplatform.h",
        "include/GLES2/gl2.h",
        "include/GLES2/gl2ext.h",
        "include/GLES2/gl2ext_angle.h",
        "include/GLES2/gl2platform.h",
        "include/GLES3/gl3.h",
        "include/GLES3/gl31.h",
        "include/GLES3/gl32.h",
        "include/GLES3/gl3platform.h",
        "include/GLSLANG/ShaderLang.h",
        "include/GLSLANG/ShaderVars.h",
        "include/GLX/glxext.h",
        "include/KHR/khrplatform.h",
        "include/WGL/wgl.h",
        "include/angle_gl.h",
        "include/export.h",
        "include/platform/Feature.h",
        "include/platform/PlatformMethods.h",
        "include/platform/autogen/FeaturesD3D_autogen.h",
        "include/platform/autogen/FeaturesGL_autogen.h",
        "include/platform/autogen/FeaturesMtl_autogen.h",
        "include/platform/autogen/FeaturesVk_autogen.h",
        "include/platform/autogen/FrontendFeatures_autogen.h",
        "include/vulkan/vulkan_fuchsia_ext.h",
        "src/common/BinaryStream.h",
        "src/common/CircularBuffer.h",
        "src/common/Color.h",
        "src/common/Color.inc",
        "src/common/CompiledShaderState.h",
        "src/common/FastVector.h",
        "src/common/FixedQueue.h",
        "src/common/FixedVector.h",
        "src/common/Float16ToFloat32.cpp",
        "src/common/MemoryBuffer.cpp",
        "src/common/MemoryBuffer.h",
        "src/common/Optional.h",
        "src/common/PackedCLEnums_autogen.h",
        "src/common/PackedEGLEnums_autogen.cpp",
        "src/common/PackedEGLEnums_autogen.h",
        "src/common/PackedEnums.cpp",
        "src/common/PackedEnums.h",
        "src/common/PackedGLEnums_autogen.cpp",
        "src/common/PackedGLEnums_autogen.h",
        "src/common/PoolAlloc.cpp",
        "src/common/PoolAlloc.h",
        "src/common/RingBufferAllocator.cpp",
        "src/common/RingBufferAllocator.h",
        "src/common/SimpleMutex.cpp",
        "src/common/SimpleMutex.h",
        "src/common/SynchronizedValue.h",
        "src/common/WorkerThread.cpp",
        "src/common/WorkerThread.h",
        "src/common/aligned_memory.cpp",
        "src/common/aligned_memory.h",
        "src/common/android_util.cpp",
        "src/common/android_util.h",
        "src/common/angleutils.cpp",
        "src/common/angleutils.h",
        "src/common/apple_platform_utils.h",
        "src/common/backtrace_utils.h",
        "src/common/backtrace_utils_noop.cpp",
        "src/common/base/anglebase/base_export.h",
        "src/common/base/anglebase/containers/mru_cache.h",
        "src/common/base/anglebase/logging.h",
        "src/common/base/anglebase/macros.h",
        "src/common/base/anglebase/no_destructor.h",
        "src/common/base/anglebase/numerics/checked_math.h",
        "src/common/base/anglebase/numerics/checked_math_impl.h",
        "src/common/base/anglebase/numerics/clamped_math.h",
        "src/common/base/anglebase/numerics/clamped_math_impl.h",
        "src/common/base/anglebase/numerics/math_constants.h",
        "src/common/base/anglebase/numerics/ranges.h",
        "src/common/base/anglebase/numerics/safe_conversions.h",
        "src/common/base/anglebase/numerics/safe_conversions_arm_impl.h",
        "src/common/base/anglebase/numerics/safe_conversions_impl.h",
        "src/common/base/anglebase/numerics/safe_math.h",
        "src/common/base/anglebase/numerics/safe_math_arm_impl.h",
        "src/common/base/anglebase/numerics/safe_math_clang_gcc_impl.h",
        "src/common/base/anglebase/numerics/safe_math_shared_impl.h",
        "src/common/base/anglebase/sha1.cc",
        "src/common/base/anglebase/sha1.h",
        "src/common/base/anglebase/sys_byteorder.h",
        "src/common/base/anglebase/trace_event/trace_event.h",
        "src/common/bitset_utils.h",
        "src/common/debug.cpp",
        "src/common/debug.h",
        "src/common/entry_points_enum_autogen.cpp",
        "src/common/entry_points_enum_autogen.h",
        "src/common/event_tracer.cpp",
        "src/common/event_tracer.h",
        "src/common/frame_capture_utils.h",
        "src/common/frame_capture_utils_autogen.h",
        "src/common/gl_enum_utils.h",
        "src/common/gl_enum_utils_autogen.h",
        "src/common/hash_containers.h",
        "src/common/hash_utils.h",
        "src/common/log_utils.h",
        "src/common/mathutil.cpp",
        "src/common/mathutil.h",
        "src/common/matrix_utils.cpp",
        "src/common/matrix_utils.h",
        "src/common/platform.h",
        "src/common/platform_helpers.cpp",
        "src/common/platform_helpers.h",
        "src/common/string_utils.cpp",
        "src/common/string_utils.h",
        "src/common/system_utils.cpp",
        "src/common/system_utils.h",
        "src/common/system_utils_linux.cpp",
        "src/common/system_utils_posix.cpp",
        "src/common/tls.cpp",
        "src/common/tls.h",
        "src/common/uniform_type_info_autogen.cpp",
        "src/common/uniform_type_info_autogen.h",
        "src/common/utilities.cpp",
        "src/common/utilities.h",
        "src/common/vector_utils.h",
        "src/compiler/preprocessor/DiagnosticsBase.cpp",
        "src/compiler/preprocessor/DiagnosticsBase.h",
        "src/compiler/preprocessor/DirectiveHandlerBase.cpp",
        "src/compiler/preprocessor/DirectiveHandlerBase.h",
        "src/compiler/preprocessor/DirectiveParser.cpp",
        "src/compiler/preprocessor/DirectiveParser.h",
        "src/compiler/preprocessor/ExpressionParser.h",
        "src/compiler/preprocessor/Input.cpp",
        "src/compiler/preprocessor/Input.h",
        "src/compiler/preprocessor/Lexer.cpp",
        "src/compiler/preprocessor/Lexer.h",
        "src/compiler/preprocessor/Macro.cpp",
        "src/compiler/preprocessor/Macro.h",
        "src/compiler/preprocessor/MacroExpander.cpp",
        "src/compiler/preprocessor/MacroExpander.h",
        "src/compiler/preprocessor/Preprocessor.cpp",
        "src/compiler/preprocessor/Preprocessor.h",
        "src/compiler/preprocessor/SourceLocation.h",
        "src/compiler/preprocessor/Token.cpp",
        "src/compiler/preprocessor/Token.h",
        "src/compiler/preprocessor/Tokenizer.h",
        "src/compiler/preprocessor/numeric_lex.h",
        "src/compiler/preprocessor/preprocessor_lex_autogen.cpp",
        "src/compiler/preprocessor/preprocessor_tab_autogen.cpp",
        "src/compiler/translator/AsNode.h",
        "src/compiler/translator/BaseTypes.cpp",
        "src/compiler/translator/BaseTypes.h",
        "src/compiler/translator/BuiltInFunctionEmulator.cpp",
        "src/compiler/translator/BuiltInFunctionEmulator.h",
        "src/compiler/translator/CallDAG.cpp",
        "src/compiler/translator/CallDAG.h",
        "src/compiler/translator/CodeGen.cpp",
        "src/compiler/translator/CollectVariables.cpp",
        "src/compiler/translator/CollectVariables.h",
        "src/compiler/translator/Common.h",
        "src/compiler/translator/Compiler.cpp",
        "src/compiler/translator/Compiler.h",
        "src/compiler/translator/ConstantUnion.cpp",
        "src/compiler/translator/ConstantUnion.h",
        "src/compiler/translator/Declarator.cpp",
        "src/compiler/translator/Declarator.h",
        "src/compiler/translator/Diagnostics.cpp",
        "src/compiler/translator/Diagnostics.h",
        "src/compiler/translator/DirectiveHandler.cpp",
        "src/compiler/translator/DirectiveHandler.h",
        "src/compiler/translator/ExtensionBehavior.cpp",
        "src/compiler/translator/ExtensionBehavior.h",
        "src/compiler/translator/FlagStd140Structs.cpp",
        "src/compiler/translator/FlagStd140Structs.h",
        "src/compiler/translator/FunctionLookup.cpp",
        "src/compiler/translator/FunctionLookup.h",
        "src/compiler/translator/HashNames.cpp",
        "src/compiler/translator/HashNames.h",
        "src/compiler/translator/ImmutableString.h",
        "src/compiler/translator/ImmutableStringBuilder.cpp",
        "src/compiler/translator/ImmutableStringBuilder.h",
        "src/compiler/translator/ImmutableString_autogen.cpp",
        "src/compiler/translator/InfoSink.cpp",
        "src/compiler/translator/InfoSink.h",
        "src/compiler/translator/Initialize.cpp",
        "src/compiler/translator/Initialize.h",
        "src/compiler/translator/InitializeDll.cpp",
        "src/compiler/translator/InitializeDll.h",
        "src/compiler/translator/InitializeGlobals.h",
        "src/compiler/translator/IntermNode.cpp",
        "src/compiler/translator/IntermNode.h",
        "src/compiler/translator/IntermRebuild.cpp",
        "src/compiler/translator/IntermRebuild.h",
        "src/compiler/translator/IsASTDepthBelowLimit.cpp",
        "src/compiler/translator/IsASTDepthBelowLimit.h",
        "src/compiler/translator/Name.cpp",
        "src/compiler/translator/Name.h",
        "src/compiler/translator/NodeType.h",
        "src/compiler/translator/Operator.cpp",
        "src/compiler/translator/Operator_autogen.h",
        "src/compiler/translator/OutputTree.cpp",
        "src/compiler/translator/OutputTree.h",
        "src/compiler/translator/ParseContext.cpp",
        "src/compiler/translator/ParseContext.h",
        "src/compiler/translator/PoolAlloc.cpp",
        "src/compiler/translator/PoolAlloc.h",
        "src/compiler/translator/Pragma.h",
        "src/compiler/translator/QualifierTypes.cpp",
        "src/compiler/translator/QualifierTypes.h",
        "src/compiler/translator/Severity.h",
        "src/compiler/translator/ShaderLang.cpp",
        "src/compiler/translator/ShaderVars.cpp",
        "src/compiler/translator/StaticType.h",
        "src/compiler/translator/Symbol.cpp",
        "src/compiler/translator/Symbol.h",
        "src/compiler/translator/SymbolTable.cpp",
        "src/compiler/translator/SymbolTable.h",
        "src/compiler/translator/SymbolTable_autogen.cpp",
        "src/compiler/translator/SymbolTable_autogen.h",
        "src/compiler/translator/SymbolUniqueId.cpp",
        "src/compiler/translator/SymbolUniqueId.h",
        "src/compiler/translator/Types.cpp",
        "src/compiler/translator/Types.h",
        "src/compiler/translator/ValidateAST.cpp",
        "src/compiler/translator/ValidateAST.h",
        "src/compiler/translator/ValidateBarrierFunctionCall.cpp",
        "src/compiler/translator/ValidateBarrierFunctionCall.h",
        "src/compiler/translator/ValidateClipCullDistance.cpp",
        "src/compiler/translator/ValidateClipCullDistance.h",
        "src/compiler/translator/ValidateGlobalInitializer.cpp",
        "src/compiler/translator/ValidateGlobalInitializer.h",
        "src/compiler/translator/ValidateLimitations.cpp",
        "src/compiler/translator/ValidateLimitations.h",
        "src/compiler/translator/ValidateMaxParameters.cpp",
        "src/compiler/translator/ValidateMaxParameters.h",
        "src/compiler/translator/ValidateOutputs.cpp",
        "src/compiler/translator/ValidateOutputs.h",
        "src/compiler/translator/ValidateSwitch.cpp",
        "src/compiler/translator/ValidateSwitch.h",
        "src/compiler/translator/ValidateTypeSizeLimitations.cpp",
        "src/compiler/translator/ValidateTypeSizeLimitations.h",
        "src/compiler/translator/ValidateVaryingLocations.cpp",
        "src/compiler/translator/ValidateVaryingLocations.h",
        "src/compiler/translator/VariablePacker.cpp",
        "src/compiler/translator/VariablePacker.h",
        "src/compiler/translator/blocklayout.cpp",
        "src/compiler/translator/blocklayout.h",
        "src/compiler/translator/glsl/BuiltInFunctionEmulatorGLSL.cpp",
        "src/compiler/translator/glsl/BuiltInFunctionEmulatorGLSL.h",
        "src/compiler/translator/glsl/ExtensionGLSL.cpp",
        "src/compiler/translator/glsl/ExtensionGLSL.h",
        "src/compiler/translator/glsl/OutputESSL.cpp",
        "src/compiler/translator/glsl/OutputESSL.h",
        "src/compiler/translator/glsl/OutputGLSL.cpp",
        "src/compiler/translator/glsl/OutputGLSL.h",
        "src/compiler/translator/glsl/OutputGLSLBase.cpp",
        "src/compiler/translator/glsl/OutputGLSLBase.h",
        "src/compiler/translator/glsl/TranslatorESSL.cpp",
        "src/compiler/translator/glsl/TranslatorESSL.h",
        "src/compiler/translator/glsl/TranslatorGLSL.cpp",
        "src/compiler/translator/glsl/TranslatorGLSL.h",
        "src/compiler/translator/glsl/VersionGLSL.cpp",
        "src/compiler/translator/glsl/VersionGLSL.h",
        "src/compiler/translator/glslang.h",
        "src/compiler/translator/glslang_lex_autogen.cpp",
        "src/compiler/translator/glslang_tab_autogen.cpp",
        "src/compiler/translator/glslang_tab_autogen.h",
        "src/compiler/translator/hlsl/ASTMetadataHLSL.cpp",
        "src/compiler/translator/hlsl/ASTMetadataHLSL.h",
        "src/compiler/translator/hlsl/AtomicCounterFunctionHLSL.cpp",
        "src/compiler/translator/hlsl/AtomicCounterFunctionHLSL.h",
        "src/compiler/translator/hlsl/BuiltInFunctionEmulatorHLSL.cpp",
        "src/compiler/translator/hlsl/BuiltInFunctionEmulatorHLSL.h",
        "src/compiler/translator/hlsl/ImageFunctionHLSL.cpp",
        "src/compiler/translator/hlsl/ImageFunctionHLSL.h",
        "src/compiler/translator/hlsl/OutputHLSL.cpp",
        "src/compiler/translator/hlsl/OutputHLSL.h",
        "src/compiler/translator/hlsl/ResourcesHLSL.cpp",
        "src/compiler/translator/hlsl/ResourcesHLSL.h",
        "src/compiler/translator/hlsl/ShaderStorageBlockFunctionHLSL.cpp",
        "src/compiler/translator/hlsl/ShaderStorageBlockFunctionHLSL.h",
        "src/compiler/translator/hlsl/ShaderStorageBlockOutputHLSL.cpp",
        "src/compiler/translator/hlsl/ShaderStorageBlockOutputHLSL.h",
        "src/compiler/translator/hlsl/StructureHLSL.cpp",
        "src/compiler/translator/hlsl/StructureHLSL.h",
        "src/compiler/translator/hlsl/TextureFunctionHLSL.cpp",
        "src/compiler/translator/hlsl/TextureFunctionHLSL.h",
        "src/compiler/translator/hlsl/TranslatorHLSL.cpp",
        "src/compiler/translator/hlsl/TranslatorHLSL.h",
        "src/compiler/translator/hlsl/UtilsHLSL.cpp",
        "src/compiler/translator/hlsl/UtilsHLSL.h",
        "src/compiler/translator/hlsl/blocklayoutHLSL.cpp",
        "src/compiler/translator/hlsl/blocklayoutHLSL.h",
        "src/compiler/translator/hlsl/emulated_builtin_functions_hlsl_autogen.cpp",
        "src/compiler/translator/length_limits.h",
        "src/compiler/translator/msl/AstHelpers.cpp",
        "src/compiler/translator/msl/AstHelpers.h",
        "src/compiler/translator/msl/ConstantNames.cpp",
        "src/compiler/translator/msl/DebugSink.h",
        "src/compiler/translator/msl/DiscoverDependentFunctions.cpp",
        "src/compiler/translator/msl/DiscoverDependentFunctions.h",
        "src/compiler/translator/msl/DiscoverEnclosingFunctionTraverser.cpp",
        "src/compiler/translator/msl/DiscoverEnclosingFunctionTraverser.h",
        "src/compiler/translator/msl/DriverUniformMetal.cpp",
        "src/compiler/translator/msl/DriverUniformMetal.h",
        "src/compiler/translator/msl/EmitMetal.cpp",
        "src/compiler/translator/msl/EmitMetal.h",
        "src/compiler/translator/msl/IdGen.cpp",
        "src/compiler/translator/msl/IdGen.h",
        "src/compiler/translator/msl/Layout.cpp",
        "src/compiler/translator/msl/Layout.h",
        "src/compiler/translator/msl/MapFunctionsToDefinitions.cpp",
        "src/compiler/translator/msl/MapFunctionsToDefinitions.h",
        "src/compiler/translator/msl/MapSymbols.cpp",
        "src/compiler/translator/msl/MapSymbols.h",
        "src/compiler/translator/msl/ModifyStruct.cpp",
        "src/compiler/translator/msl/ModifyStruct.h",
        "src/compiler/translator/msl/Pipeline.cpp",
        "src/compiler/translator/msl/Pipeline.h",
        "src/compiler/translator/msl/ProgramPrelude.cpp",
        "src/compiler/translator/msl/ProgramPrelude.h",
        "src/compiler/translator/msl/Reference.h",
        "src/compiler/translator/msl/RewritePipelines.cpp",
        "src/compiler/translator/msl/RewritePipelines.h",
        "src/compiler/translator/msl/SkippingTraverser.h",
        "src/compiler/translator/msl/SymbolEnv.cpp",
        "src/compiler/translator/msl/SymbolEnv.h",
        "src/compiler/translator/msl/ToposortStructs.cpp",
        "src/compiler/translator/msl/ToposortStructs.h",
        "src/compiler/translator/msl/TranslatorMSL.cpp",
        "src/compiler/translator/msl/TranslatorMSL.h",
        "src/compiler/translator/msl/UtilsMSL.cpp",
        "src/compiler/translator/msl/UtilsMSL.h",
        "src/compiler/translator/null/TranslatorNULL.h",
        "src/compiler/translator/spirv/BuildSPIRV.cpp",
        "src/compiler/translator/spirv/BuildSPIRV.h",
        "src/compiler/translator/spirv/BuiltinsWorkaround.cpp",
        "src/compiler/translator/spirv/BuiltinsWorkaround.h",
        "src/compiler/translator/spirv/OutputSPIRV.cpp",
        "src/compiler/translator/spirv/OutputSPIRV.h",
        "src/compiler/translator/spirv/TranslatorSPIRV.cpp",
        "src/compiler/translator/spirv/TranslatorSPIRV.h",
        "src/compiler/translator/tree_ops/ClampFragDepth.cpp",
        "src/compiler/translator/tree_ops/ClampFragDepth.h",
        "src/compiler/translator/tree_ops/ClampIndirectIndices.cpp",
        "src/compiler/translator/tree_ops/ClampIndirectIndices.h",
        "src/compiler/translator/tree_ops/ClampPointSize.cpp",
        "src/compiler/translator/tree_ops/ClampPointSize.h",
        "src/compiler/translator/tree_ops/DeclareAndInitBuiltinsForInstancedMultiview.cpp",
        "src/compiler/translator/tree_ops/DeclareAndInitBuiltinsForInstancedMultiview.h",
        "src/compiler/translator/tree_ops/DeclarePerVertexBlocks.cpp",
        "src/compiler/translator/tree_ops/DeclarePerVertexBlocks.h",
        "src/compiler/translator/tree_ops/DeferGlobalInitializers.cpp",
        "src/compiler/translator/tree_ops/DeferGlobalInitializers.h",
        "src/compiler/translator/tree_ops/EmulateGLFragColorBroadcast.cpp",
        "src/compiler/translator/tree_ops/EmulateGLFragColorBroadcast.h",
        "src/compiler/translator/tree_ops/EmulateMultiDrawShaderBuiltins.cpp",
        "src/compiler/translator/tree_ops/EmulateMultiDrawShaderBuiltins.h",
        "src/compiler/translator/tree_ops/FoldExpressions.cpp",
        "src/compiler/translator/tree_ops/FoldExpressions.h",
        "src/compiler/translator/tree_ops/ForcePrecisionQualifier.cpp",
        "src/compiler/translator/tree_ops/ForcePrecisionQualifier.h",
        "src/compiler/translator/tree_ops/InitializeVariables.cpp",
        "src/compiler/translator/tree_ops/InitializeVariables.h",
        "src/compiler/translator/tree_ops/MonomorphizeUnsupportedFunctions.cpp",
        "src/compiler/translator/tree_ops/MonomorphizeUnsupportedFunctions.h",
        "src/compiler/translator/tree_ops/PreTransformTextureCubeGradDerivatives.cpp",
        "src/compiler/translator/tree_ops/PreTransformTextureCubeGradDerivatives.h",
        "src/compiler/translator/tree_ops/PruneEmptyCases.cpp",
        "src/compiler/translator/tree_ops/PruneEmptyCases.h",
        "src/compiler/translator/tree_ops/PruneInfiniteLoops.cpp",
        "src/compiler/translator/tree_ops/PruneInfiniteLoops.h",
        "src/compiler/translator/tree_ops/PruneNoOps.cpp",
        "src/compiler/translator/tree_ops/PruneNoOps.h",
        "src/compiler/translator/tree_ops/RecordConstantPrecision.cpp",
        "src/compiler/translator/tree_ops/RecordConstantPrecision.h",
        "src/compiler/translator/tree_ops/RemoveArrayLengthMethod.cpp",
        "src/compiler/translator/tree_ops/RemoveArrayLengthMethod.h",
        "src/compiler/translator/tree_ops/RemoveAtomicCounterBuiltins.cpp",
        "src/compiler/translator/tree_ops/RemoveAtomicCounterBuiltins.h",
        "src/compiler/translator/tree_ops/RemoveDynamicIndexing.cpp",
        "src/compiler/translator/tree_ops/RemoveDynamicIndexing.h",
        "src/compiler/translator/tree_ops/RemoveInactiveInterfaceVariables.cpp",
        "src/compiler/translator/tree_ops/RemoveInactiveInterfaceVariables.h",
        "src/compiler/translator/tree_ops/RemoveInvariantDeclaration.cpp",
        "src/compiler/translator/tree_ops/RemoveInvariantDeclaration.h",
        "src/compiler/translator/tree_ops/RemoveUnreferencedVariables.cpp",
        "src/compiler/translator/tree_ops/RemoveUnreferencedVariables.h",
        "src/compiler/translator/tree_ops/RescopeGlobalVariables.cpp",
        "src/compiler/translator/tree_ops/RescopeGlobalVariables.h",
        "src/compiler/translator/tree_ops/RewriteArrayOfArrayOfOpaqueUniforms.cpp",
        "src/compiler/translator/tree_ops/RewriteArrayOfArrayOfOpaqueUniforms.h",
        "src/compiler/translator/tree_ops/RewriteAtomicCounters.cpp",
        "src/compiler/translator/tree_ops/RewriteAtomicCounters.h",
        "src/compiler/translator/tree_ops/RewriteDfdy.cpp",
        "src/compiler/translator/tree_ops/RewriteDfdy.h",
        "src/compiler/translator/tree_ops/RewritePixelLocalStorage.cpp",
        "src/compiler/translator/tree_ops/RewritePixelLocalStorage.h",
        "src/compiler/translator/tree_ops/RewriteStructSamplers.cpp",
        "src/compiler/translator/tree_ops/RewriteStructSamplers.h",
        "src/compiler/translator/tree_ops/RewriteTexelFetchOffset.cpp",
        "src/compiler/translator/tree_ops/RewriteTexelFetchOffset.h",
        "src/compiler/translator/tree_ops/SeparateDeclarations.cpp",
        "src/compiler/translator/tree_ops/SeparateDeclarations.h",
        "src/compiler/translator/tree_ops/SeparateStructFromUniformDeclarations.cpp",
        "src/compiler/translator/tree_ops/SeparateStructFromUniformDeclarations.h",
        "src/compiler/translator/tree_ops/SimplifyLoopConditions.cpp",
        "src/compiler/translator/tree_ops/SimplifyLoopConditions.h",
        "src/compiler/translator/tree_ops/SplitSequenceOperator.cpp",
        "src/compiler/translator/tree_ops/SplitSequenceOperator.h",
        "src/compiler/translator/tree_ops/glsl/RegenerateStructNames.cpp",
        "src/compiler/translator/tree_ops/glsl/RegenerateStructNames.h",
        "src/compiler/translator/tree_ops/glsl/RewriteRepeatedAssignToSwizzled.cpp",
        "src/compiler/translator/tree_ops/glsl/RewriteRepeatedAssignToSwizzled.h",
        "src/compiler/translator/tree_ops/glsl/ScalarizeVecAndMatConstructorArgs.cpp",
        "src/compiler/translator/tree_ops/glsl/ScalarizeVecAndMatConstructorArgs.h",
        "src/compiler/translator/tree_ops/glsl/UseInterfaceBlockFields.cpp",
        "src/compiler/translator/tree_ops/glsl/UseInterfaceBlockFields.h",
        "src/compiler/translator/tree_ops/glsl/apple/AddAndTrueToLoopCondition.cpp",
        "src/compiler/translator/tree_ops/glsl/apple/AddAndTrueToLoopCondition.h",
        "src/compiler/translator/tree_ops/glsl/apple/RewriteDoWhile.cpp",
        "src/compiler/translator/tree_ops/glsl/apple/RewriteDoWhile.h",
        "src/compiler/translator/tree_ops/glsl/apple/RewriteRowMajorMatrices.cpp",
        "src/compiler/translator/tree_ops/glsl/apple/RewriteRowMajorMatrices.h",
        "src/compiler/translator/tree_ops/glsl/apple/RewriteUnaryMinusOperatorFloat.cpp",
        "src/compiler/translator/tree_ops/glsl/apple/RewriteUnaryMinusOperatorFloat.h",
        "src/compiler/translator/tree_ops/glsl/apple/UnfoldShortCircuitAST.cpp",
        "src/compiler/translator/tree_ops/glsl/apple/UnfoldShortCircuitAST.h",
        "src/compiler/translator/tree_ops/hlsl/AddDefaultReturnStatements.cpp",
        "src/compiler/translator/tree_ops/hlsl/AddDefaultReturnStatements.h",
        "src/compiler/translator/tree_ops/hlsl/AggregateAssignArraysInSSBOs.cpp",
        "src/compiler/translator/tree_ops/hlsl/AggregateAssignArraysInSSBOs.h",
        "src/compiler/translator/tree_ops/hlsl/AggregateAssignStructsInSSBOs.cpp",
        "src/compiler/translator/tree_ops/hlsl/AggregateAssignStructsInSSBOs.h",
        "src/compiler/translator/tree_ops/hlsl/ArrayReturnValueToOutParameter.cpp",
        "src/compiler/translator/tree_ops/hlsl/ArrayReturnValueToOutParameter.h",
        "src/compiler/translator/tree_ops/hlsl/BreakVariableAliasingInInnerLoops.cpp",
        "src/compiler/translator/tree_ops/hlsl/BreakVariableAliasingInInnerLoops.h",
        "src/compiler/translator/tree_ops/hlsl/ExpandIntegerPowExpressions.cpp",
        "src/compiler/translator/tree_ops/hlsl/ExpandIntegerPowExpressions.h",
        "src/compiler/translator/tree_ops/hlsl/RecordUniformBlocksWithLargeArrayMember.cpp",
        "src/compiler/translator/tree_ops/hlsl/RecordUniformBlocksWithLargeArrayMember.h",
        "src/compiler/translator/tree_ops/hlsl/RemoveSwitchFallThrough.cpp",
        "src/compiler/translator/tree_ops/hlsl/RemoveSwitchFallThrough.h",
        "src/compiler/translator/tree_ops/hlsl/RewriteAtomicFunctionExpressions.cpp",
        "src/compiler/translator/tree_ops/hlsl/RewriteAtomicFunctionExpressions.h",
        "src/compiler/translator/tree_ops/hlsl/RewriteElseBlocks.cpp",
        "src/compiler/translator/tree_ops/hlsl/RewriteElseBlocks.h",
        "src/compiler/translator/tree_ops/hlsl/RewriteExpressionsWithShaderStorageBlock.cpp",
        "src/compiler/translator/tree_ops/hlsl/RewriteExpressionsWithShaderStorageBlock.h",
        "src/compiler/translator/tree_ops/hlsl/RewriteUnaryMinusOperatorInt.cpp",
        "src/compiler/translator/tree_ops/hlsl/RewriteUnaryMinusOperatorInt.h",
        "src/compiler/translator/tree_ops/hlsl/SeparateArrayConstructorStatements.cpp",
        "src/compiler/translator/tree_ops/hlsl/SeparateArrayConstructorStatements.h",
        "src/compiler/translator/tree_ops/hlsl/SeparateArrayInitialization.cpp",
        "src/compiler/translator/tree_ops/hlsl/SeparateArrayInitialization.h",
        "src/compiler/translator/tree_ops/hlsl/SeparateExpressionsReturningArrays.cpp",
        "src/compiler/translator/tree_ops/hlsl/SeparateExpressionsReturningArrays.h",
        "src/compiler/translator/tree_ops/hlsl/UnfoldShortCircuitToIf.cpp",
        "src/compiler/translator/tree_ops/hlsl/UnfoldShortCircuitToIf.h",
        "src/compiler/translator/tree_ops/hlsl/WrapSwitchStatementsInBlocks.cpp",
        "src/compiler/translator/tree_ops/hlsl/WrapSwitchStatementsInBlocks.h",
        "src/compiler/translator/tree_ops/msl/AddExplicitTypeCasts.cpp",
        "src/compiler/translator/tree_ops/msl/AddExplicitTypeCasts.h",
        "src/compiler/translator/tree_ops/msl/ConvertUnsupportedConstructorsToFunctionCalls.cpp",
        "src/compiler/translator/tree_ops/msl/ConvertUnsupportedConstructorsToFunctionCalls.h",
        "src/compiler/translator/tree_ops/msl/FixTypeConstructors.cpp",
        "src/compiler/translator/tree_ops/msl/FixTypeConstructors.h",
        "src/compiler/translator/tree_ops/msl/GuardFragDepthWrite.cpp",
        "src/compiler/translator/tree_ops/msl/GuardFragDepthWrite.h",
        "src/compiler/translator/tree_ops/msl/HoistConstants.cpp",
        "src/compiler/translator/tree_ops/msl/HoistConstants.h",
        "src/compiler/translator/tree_ops/msl/IntroduceVertexIndexID.cpp",
        "src/compiler/translator/tree_ops/msl/IntroduceVertexIndexID.h",
        "src/compiler/translator/tree_ops/msl/ReduceInterfaceBlocks.cpp",
        "src/compiler/translator/tree_ops/msl/ReduceInterfaceBlocks.h",
        "src/compiler/translator/tree_ops/msl/RewriteCaseDeclarations.cpp",
        "src/compiler/translator/tree_ops/msl/RewriteCaseDeclarations.h",
        "src/compiler/translator/tree_ops/msl/RewriteInterpolants.cpp",
        "src/compiler/translator/tree_ops/msl/RewriteInterpolants.h",
        "src/compiler/translator/tree_ops/msl/RewriteOutArgs.cpp",
        "src/compiler/translator/tree_ops/msl/RewriteOutArgs.h",
        "src/compiler/translator/tree_ops/msl/RewriteUnaddressableReferences.cpp",
        "src/compiler/translator/tree_ops/msl/RewriteUnaddressableReferences.h",
        "src/compiler/translator/tree_ops/msl/SeparateCompoundExpressions.cpp",
        "src/compiler/translator/tree_ops/msl/SeparateCompoundExpressions.h",
        "src/compiler/translator/tree_ops/msl/TransposeRowMajorMatrices.cpp",
        "src/compiler/translator/tree_ops/msl/TransposeRowMajorMatrices.h",
        "src/compiler/translator/tree_ops/msl/WrapMain.cpp",
        "src/compiler/translator/tree_ops/msl/WrapMain.h",
        "src/compiler/translator/tree_ops/spirv/ClampGLLayer.cpp",
        "src/compiler/translator/tree_ops/spirv/ClampGLLayer.h",
        "src/compiler/translator/tree_ops/spirv/EmulateAdvancedBlendEquations.cpp",
        "src/compiler/translator/tree_ops/spirv/EmulateAdvancedBlendEquations.h",
        "src/compiler/translator/tree_ops/spirv/EmulateDithering.cpp",
        "src/compiler/translator/tree_ops/spirv/EmulateDithering.h",
        "src/compiler/translator/tree_ops/spirv/EmulateFragColorData.cpp",
        "src/compiler/translator/tree_ops/spirv/EmulateFragColorData.h",
        "src/compiler/translator/tree_ops/spirv/EmulateFramebufferFetch.cpp",
        "src/compiler/translator/tree_ops/spirv/EmulateFramebufferFetch.h",
        "src/compiler/translator/tree_ops/spirv/EmulateYUVBuiltIns.cpp",
        "src/compiler/translator/tree_ops/spirv/EmulateYUVBuiltIns.h",
        "src/compiler/translator/tree_ops/spirv/FlagSamplersWithTexelFetch.cpp",
        "src/compiler/translator/tree_ops/spirv/FlagSamplersWithTexelFetch.h",
        "src/compiler/translator/tree_ops/spirv/ReswizzleYUVOps.cpp",
        "src/compiler/translator/tree_ops/spirv/ReswizzleYUVOps.h",
        "src/compiler/translator/tree_ops/spirv/RewriteInterpolateAtOffset.cpp",
        "src/compiler/translator/tree_ops/spirv/RewriteInterpolateAtOffset.h",
        "src/compiler/translator/tree_ops/spirv/RewriteR32fImages.cpp",
        "src/compiler/translator/tree_ops/spirv/RewriteR32fImages.h",
        "src/compiler/translator/tree_util/BuiltIn.h",
        "src/compiler/translator/tree_util/BuiltIn_autogen.h",
        "src/compiler/translator/tree_util/DriverUniform.cpp",
        "src/compiler/translator/tree_util/DriverUniform.h",
        "src/compiler/translator/tree_util/FindFunction.cpp",
        "src/compiler/translator/tree_util/FindFunction.h",
        "src/compiler/translator/tree_util/FindMain.cpp",
        "src/compiler/translator/tree_util/FindMain.h",
        "src/compiler/translator/tree_util/FindPreciseNodes.cpp",
        "src/compiler/translator/tree_util/FindPreciseNodes.h",
        "src/compiler/translator/tree_util/FindSymbolNode.cpp",
        "src/compiler/translator/tree_util/FindSymbolNode.h",
        "src/compiler/translator/tree_util/IntermNodePatternMatcher.cpp",
        "src/compiler/translator/tree_util/IntermNodePatternMatcher.h",
        "src/compiler/translator/tree_util/IntermNode_util.cpp",
        "src/compiler/translator/tree_util/IntermNode_util.h",
        "src/compiler/translator/tree_util/IntermTraverse.cpp",
        "src/compiler/translator/tree_util/IntermTraverse.h",
        "src/compiler/translator/tree_util/NodeSearch.h",
        "src/compiler/translator/tree_util/ReplaceArrayOfMatrixVarying.cpp",
        "src/compiler/translator/tree_util/ReplaceArrayOfMatrixVarying.h",
        "src/compiler/translator/tree_util/ReplaceClipCullDistanceVariable.cpp",
        "src/compiler/translator/tree_util/ReplaceClipCullDistanceVariable.h",
        "src/compiler/translator/tree_util/ReplaceShadowingVariables.cpp",
        "src/compiler/translator/tree_util/ReplaceShadowingVariables.h",
        "src/compiler/translator/tree_util/ReplaceVariable.cpp",
        "src/compiler/translator/tree_util/ReplaceVariable.h",
        "src/compiler/translator/tree_util/RewriteSampleMaskVariable.cpp",
        "src/compiler/translator/tree_util/RewriteSampleMaskVariable.h",
        "src/compiler/translator/tree_util/RunAtTheBeginningOfShader.cpp",
        "src/compiler/translator/tree_util/RunAtTheBeginningOfShader.h",
        "src/compiler/translator/tree_util/RunAtTheEndOfShader.cpp",
        "src/compiler/translator/tree_util/RunAtTheEndOfShader.h",
        "src/compiler/translator/tree_util/SpecializationConstant.cpp",
        "src/compiler/translator/tree_util/SpecializationConstant.h",
        "src/compiler/translator/tree_util/Visit.h",
        "src/compiler/translator/util.cpp",
        "src/compiler/translator/util.h",
        "src/compiler/translator/wgsl/OutputUniformBlocks.cpp",
        "src/compiler/translator/wgsl/OutputUniformBlocks.h",
        "src/compiler/translator/wgsl/RewritePipelineVariables.cpp",
        "src/compiler/translator/wgsl/RewritePipelineVariables.h",
        "src/compiler/translator/wgsl/TranslatorWGSL.cpp",
        "src/compiler/translator/wgsl/TranslatorWGSL.h",
        "src/compiler/translator/wgsl/Utils.cpp",
        "src/compiler/translator/wgsl/Utils.h",
        "src/libANGLE/AttributeMap.cpp",
        "src/libANGLE/AttributeMap.h",
        "src/libANGLE/BlobCache.cpp",
        "src/libANGLE/BlobCache.h",
        "src/libANGLE/Buffer.cpp",
        "src/libANGLE/Buffer.h",
        "src/libANGLE/CLBitField.h",
        "src/libANGLE/CLRefPointer.h",
        "src/libANGLE/Caps.cpp",
        "src/libANGLE/Caps.h",
        "src/libANGLE/Compiler.cpp",
        "src/libANGLE/Compiler.h",
        "src/libANGLE/Config.cpp",
        "src/libANGLE/Config.h",
        "src/libANGLE/Constants.h",
        "src/libANGLE/Context.cpp",
        "src/libANGLE/Context.h",
        "src/libANGLE/Context.inl.h",
        "src/libANGLE/ContextMutex.cpp",
        "src/libANGLE/ContextMutex.h",
        "src/libANGLE/Context_gles_1_0.cpp",
        "src/libANGLE/Context_gles_1_0_autogen.h",
        "src/libANGLE/Context_gles_2_0_autogen.h",
        "src/libANGLE/Context_gles_3_0_autogen.h",
        "src/libANGLE/Context_gles_3_1_autogen.h",
        "src/libANGLE/Context_gles_3_2_autogen.h",
        "src/libANGLE/Context_gles_ext_autogen.h",
        "src/libANGLE/Debug.cpp",
        "src/libANGLE/Debug.h",
        "src/libANGLE/Device.cpp",
        "src/libANGLE/Device.h",
        "src/libANGLE/Display.cpp",
        "src/libANGLE/Display.h",
        "src/libANGLE/EGLSync.cpp",
        "src/libANGLE/EGLSync.h",
        "src/libANGLE/Error.cpp",
        "src/libANGLE/Error.h",
        "src/libANGLE/Error.inc",
        "src/libANGLE/ErrorStrings.h",
        "src/libANGLE/Fence.cpp",
        "src/libANGLE/Fence.h",
        "src/libANGLE/Framebuffer.cpp",
        "src/libANGLE/Framebuffer.h",
        "src/libANGLE/FramebufferAttachment.cpp",
        "src/libANGLE/FramebufferAttachment.h",
        "src/libANGLE/GLES1Renderer.cpp",
        "src/libANGLE/GLES1Renderer.h",
        "src/libANGLE/GLES1Shaders.inc",
        "src/libANGLE/GLES1State.cpp",
        "src/libANGLE/GLES1State.h",
        "src/libANGLE/GlobalMutex.cpp",
        "src/libANGLE/GlobalMutex.h",
        "src/libANGLE/HandleAllocator.cpp",
        "src/libANGLE/HandleAllocator.h",
        "src/libANGLE/Image.cpp",
        "src/libANGLE/Image.h",
        "src/libANGLE/ImageIndex.cpp",
        "src/libANGLE/ImageIndex.h",
        "src/libANGLE/IndexRangeCache.cpp",
        "src/libANGLE/IndexRangeCache.h",
        "src/libANGLE/InfoLog.h",
        "src/libANGLE/LoggingAnnotator.cpp",
        "src/libANGLE/LoggingAnnotator.h",
        "src/libANGLE/MemoryObject.cpp",
        "src/libANGLE/MemoryObject.h",
        "src/libANGLE/MemoryProgramCache.cpp",
        "src/libANGLE/MemoryProgramCache.h",
        "src/libANGLE/MemoryShaderCache.cpp",
        "src/libANGLE/MemoryShaderCache.h",
        "src/libANGLE/Observer.cpp",
        "src/libANGLE/Observer.h",
        "src/libANGLE/Overlay.cpp",
        "src/libANGLE/Overlay.h",
        "src/libANGLE/OverlayWidgets.cpp",
        "src/libANGLE/OverlayWidgets.h",
        "src/libANGLE/Overlay_autogen.cpp",
        "src/libANGLE/Overlay_autogen.h",
        "src/libANGLE/Overlay_font_autogen.cpp",
        "src/libANGLE/Overlay_font_autogen.h",
        "src/libANGLE/PixelLocalStorage.cpp",
        "src/libANGLE/PixelLocalStorage.h",
        "src/libANGLE/Platform.cpp",
        "src/libANGLE/Program.cpp",
        "src/libANGLE/Program.h",
        "src/libANGLE/ProgramExecutable.cpp",
        "src/libANGLE/ProgramExecutable.h",
        "src/libANGLE/ProgramLinkedResources.cpp",
        "src/libANGLE/ProgramLinkedResources.h",
        "src/libANGLE/ProgramPipeline.cpp",
        "src/libANGLE/ProgramPipeline.h",
        "src/libANGLE/Query.cpp",
        "src/libANGLE/Query.h",
        "src/libANGLE/RefCountObject.h",
        "src/libANGLE/Renderbuffer.cpp",
        "src/libANGLE/Renderbuffer.h",
        "src/libANGLE/ResourceManager.cpp",
        "src/libANGLE/ResourceManager.h",
        "src/libANGLE/ResourceMap.h",
        "src/libANGLE/Sampler.cpp",
        "src/libANGLE/Sampler.h",
        "src/libANGLE/Semaphore.cpp",
        "src/libANGLE/Semaphore.h",
        "src/libANGLE/Shader.cpp",
        "src/libANGLE/Shader.h",
        "src/libANGLE/ShareGroup.cpp",
        "src/libANGLE/ShareGroup.h",
        "src/libANGLE/SizedMRUCache.h",
        "src/libANGLE/State.cpp",
        "src/libANGLE/State.h",
        "src/libANGLE/Stream.cpp",
        "src/libANGLE/Stream.h",
        "src/libANGLE/Surface.cpp",
        "src/libANGLE/Surface.h",
        "src/libANGLE/Texture.cpp",
        "src/libANGLE/Texture.h",
        "src/libANGLE/Thread.cpp",
        "src/libANGLE/Thread.h",
        "src/libANGLE/TransformFeedback.cpp",
        "src/libANGLE/TransformFeedback.h",
        "src/libANGLE/Uniform.cpp",
        "src/libANGLE/Uniform.h",
        "src/libANGLE/VaryingPacking.cpp",
        "src/libANGLE/VaryingPacking.h",
        "src/libANGLE/Version.h",
        "src/libANGLE/Version.inc",
        "src/libANGLE/VertexArray.cpp",
        "src/libANGLE/VertexArray.h",
        "src/libANGLE/VertexAttribute.cpp",
        "src/libANGLE/VertexAttribute.h",
        "src/libANGLE/VertexAttribute.inc",
        "src/libANGLE/angletypes.cpp",
        "src/libANGLE/angletypes.h",
        "src/libANGLE/angletypes.inc",
        "src/libANGLE/capture/FrameCapture.h",
        "src/libANGLE/capture/capture_egl_autogen.h",
        "src/libANGLE/capture/capture_gles_1_0_autogen.h",
        "src/libANGLE/capture/capture_gles_2_0_autogen.h",
        "src/libANGLE/capture/capture_gles_3_0_autogen.h",
        "src/libANGLE/capture/capture_gles_3_1_autogen.h",
        "src/libANGLE/capture/capture_gles_3_2_autogen.h",
        "src/libANGLE/capture/capture_gles_ext_autogen.h",
        "src/libANGLE/capture/serialize.h",
        "src/libANGLE/cl_types.h",
        "src/libANGLE/context_private_call.cpp",
        "src/libANGLE/context_private_call_autogen.h",
        "src/libANGLE/entry_points_utils.cpp",
        "src/libANGLE/entry_points_utils.h",
        "src/libANGLE/es3_copy_conversion_table_autogen.cpp",
        "src/libANGLE/features.h",
        "src/libANGLE/format_map_autogen.cpp",
        "src/libANGLE/formatutils.cpp",
        "src/libANGLE/formatutils.h",
        "src/libANGLE/gles_extensions_autogen.cpp",
        "src/libANGLE/gles_extensions_autogen.h",
        "src/libANGLE/histogram_macros.h",
        "src/libANGLE/queryconversions.cpp",
        "src/libANGLE/queryconversions.h",
        "src/libANGLE/queryutils.cpp",
        "src/libANGLE/queryutils.h",
        "src/libANGLE/renderer/BufferImpl.cpp",
        "src/libANGLE/renderer/BufferImpl.h",
        "src/libANGLE/renderer/CompilerImpl.h",
        "src/libANGLE/renderer/ContextImpl.cpp",
        "src/libANGLE/renderer/ContextImpl.h",
        "src/libANGLE/renderer/DeviceImpl.cpp",
        "src/libANGLE/renderer/DeviceImpl.h",
        "src/libANGLE/renderer/DisplayImpl.cpp",
        "src/libANGLE/renderer/DisplayImpl.h",
        "src/libANGLE/renderer/EGLImplFactory.h",
        "src/libANGLE/renderer/EGLReusableSync.cpp",
        "src/libANGLE/renderer/EGLReusableSync.h",
        "src/libANGLE/renderer/EGLSyncImpl.cpp",
        "src/libANGLE/renderer/EGLSyncImpl.h",
        "src/libANGLE/renderer/FenceNVImpl.h",
        "src/libANGLE/renderer/Format.h",
        "src/libANGLE/renderer/FormatID_autogen.h",
        "src/libANGLE/renderer/Format_table_autogen.cpp",
        "src/libANGLE/renderer/FramebufferAttachmentObjectImpl.h",
        "src/libANGLE/renderer/FramebufferImpl.cpp",
        "src/libANGLE/renderer/FramebufferImpl.h",
        "src/libANGLE/renderer/GLImplFactory.h",
        "src/libANGLE/renderer/ImageImpl.cpp",
        "src/libANGLE/renderer/ImageImpl.h",
        "src/libANGLE/renderer/MemoryObjectImpl.h",
        "src/libANGLE/renderer/OverlayImpl.h",
        "src/libANGLE/renderer/ProgramExecutableImpl.h",
        "src/libANGLE/renderer/ProgramImpl.cpp",
        "src/libANGLE/renderer/ProgramImpl.h",
        "src/libANGLE/renderer/ProgramPipelineImpl.cpp",
        "src/libANGLE/renderer/ProgramPipelineImpl.h",
        "src/libANGLE/renderer/QueryImpl.cpp",
        "src/libANGLE/renderer/QueryImpl.h",
        "src/libANGLE/renderer/RenderTargetCache.h",
        "src/libANGLE/renderer/RenderbufferImpl.cpp",
        "src/libANGLE/renderer/RenderbufferImpl.h",
        "src/libANGLE/renderer/SamplerImpl.h",
        "src/libANGLE/renderer/SemaphoreImpl.h",
        "src/libANGLE/renderer/ShaderImpl.cpp",
        "src/libANGLE/renderer/ShaderImpl.h",
        "src/libANGLE/renderer/ShareGroupImpl.h",
        "src/libANGLE/renderer/StreamProducerImpl.h",
        "src/libANGLE/renderer/SurfaceImpl.cpp",
        "src/libANGLE/renderer/SurfaceImpl.h",
        "src/libANGLE/renderer/SyncImpl.h",
        "src/libANGLE/renderer/TextureImpl.cpp",
        "src/libANGLE/renderer/TextureImpl.h",
        "src/libANGLE/renderer/TransformFeedbackImpl.cpp",
        "src/libANGLE/renderer/TransformFeedbackImpl.h",
        "src/libANGLE/renderer/VertexArrayImpl.cpp",
        "src/libANGLE/renderer/VertexArrayImpl.h",
        "src/libANGLE/renderer/copyvertex.h",
        "src/libANGLE/renderer/copyvertex.inc.h",
        "src/libANGLE/renderer/d3d/BufferD3D.cpp",
        "src/libANGLE/renderer/d3d/BufferD3D.h",
        "src/libANGLE/renderer/d3d/CompilerD3D.cpp",
        "src/libANGLE/renderer/d3d/CompilerD3D.h",
        "src/libANGLE/renderer/d3d/ContextD3D.h",
        "src/libANGLE/renderer/d3d/DisplayD3D.cpp",
        "src/libANGLE/renderer/d3d/DisplayD3D.h",
        "src/libANGLE/renderer/d3d/DynamicHLSL.cpp",
        "src/libANGLE/renderer/d3d/DynamicHLSL.h",
        "src/libANGLE/renderer/d3d/DynamicImage2DHLSL.cpp",
        "src/libANGLE/renderer/d3d/DynamicImage2DHLSL.h",
        "src/libANGLE/renderer/d3d/EGLImageD3D.cpp",
        "src/libANGLE/renderer/d3d/EGLImageD3D.h",
        "src/libANGLE/renderer/d3d/FramebufferD3D.cpp",
        "src/libANGLE/renderer/d3d/FramebufferD3D.h",
        "src/libANGLE/renderer/d3d/HLSLCompiler.cpp",
        "src/libANGLE/renderer/d3d/HLSLCompiler.h",
        "src/libANGLE/renderer/d3d/ImageD3D.cpp",
        "src/libANGLE/renderer/d3d/ImageD3D.h",
        "src/libANGLE/renderer/d3d/IndexBuffer.cpp",
        "src/libANGLE/renderer/d3d/IndexBuffer.h",
        "src/libANGLE/renderer/d3d/IndexDataManager.cpp",
        "src/libANGLE/renderer/d3d/IndexDataManager.h",
        "src/libANGLE/renderer/d3d/NativeWindowD3D.cpp",
        "src/libANGLE/renderer/d3d/NativeWindowD3D.h",
        "src/libANGLE/renderer/d3d/ProgramD3D.cpp",
        "src/libANGLE/renderer/d3d/ProgramD3D.h",
        "src/libANGLE/renderer/d3d/ProgramExecutableD3D.cpp",
        "src/libANGLE/renderer/d3d/ProgramExecutableD3D.h",
        "src/libANGLE/renderer/d3d/RenderTargetD3D.cpp",
        "src/libANGLE/renderer/d3d/RenderTargetD3D.h",
        "src/libANGLE/renderer/d3d/RenderbufferD3D.cpp",
        "src/libANGLE/renderer/d3d/RenderbufferD3D.h",
        "src/libANGLE/renderer/d3d/RendererD3D.cpp",
        "src/libANGLE/renderer/d3d/RendererD3D.h",
        "src/libANGLE/renderer/d3d/SamplerD3D.h",
        "src/libANGLE/renderer/d3d/ShaderD3D.cpp",
        "src/libANGLE/renderer/d3d/ShaderD3D.h",
        "src/libANGLE/renderer/d3d/ShaderExecutableD3D.cpp",
        "src/libANGLE/renderer/d3d/ShaderExecutableD3D.h",
        "src/libANGLE/renderer/d3d/SurfaceD3D.cpp",
        "src/libANGLE/renderer/d3d/SurfaceD3D.h",
        "src/libANGLE/renderer/d3d/SwapChainD3D.cpp",
        "src/libANGLE/renderer/d3d/SwapChainD3D.h",
        "src/libANGLE/renderer/d3d/TextureD3D.cpp",
        "src/libANGLE/renderer/d3d/TextureD3D.h",
        "src/libANGLE/renderer/d3d/TextureStorage.h",
        "src/libANGLE/renderer/d3d/VertexBuffer.cpp",
        "src/libANGLE/renderer/d3d/VertexBuffer.h",
        "src/libANGLE/renderer/d3d/VertexDataManager.cpp",
        "src/libANGLE/renderer/d3d/VertexDataManager.h",
        "src/libANGLE/renderer/d3d/driver_utils_d3d.cpp",
        "src/libANGLE/renderer/d3d/driver_utils_d3d.h",
        "src/libANGLE/renderer/d3d/formatutilsD3D.h",
        "src/libANGLE/renderer/driver_utils.cpp",
        "src/libANGLE/renderer/driver_utils.h",
        "src/libANGLE/renderer/gl/BlitGL.cpp",
        "src/libANGLE/renderer/gl/BlitGL.h",
        "src/libANGLE/renderer/gl/BufferGL.cpp",
        "src/libANGLE/renderer/gl/BufferGL.h",
        "src/libANGLE/renderer/gl/ClearMultiviewGL.cpp",
        "src/libANGLE/renderer/gl/ClearMultiviewGL.h",
        "src/libANGLE/renderer/gl/CompilerGL.cpp",
        "src/libANGLE/renderer/gl/CompilerGL.h",
        "src/libANGLE/renderer/gl/ContextGL.cpp",
        "src/libANGLE/renderer/gl/ContextGL.h",
        "src/libANGLE/renderer/gl/DispatchTableGL_autogen.cpp",
        "src/libANGLE/renderer/gl/DispatchTableGL_autogen.h",
        "src/libANGLE/renderer/gl/DisplayGL.cpp",
        "src/libANGLE/renderer/gl/DisplayGL.h",
        "src/libANGLE/renderer/gl/FenceNVGL.cpp",
        "src/libANGLE/renderer/gl/FenceNVGL.h",
        "src/libANGLE/renderer/gl/FramebufferGL.cpp",
        "src/libANGLE/renderer/gl/FramebufferGL.h",
        "src/libANGLE/renderer/gl/FunctionsGL.cpp",
        "src/libANGLE/renderer/gl/FunctionsGL.h",
        "src/libANGLE/renderer/gl/ImageGL.cpp",
        "src/libANGLE/renderer/gl/ImageGL.h",
        "src/libANGLE/renderer/gl/MemoryObjectGL.cpp",
        "src/libANGLE/renderer/gl/MemoryObjectGL.h",
        "src/libANGLE/renderer/gl/ProgramExecutableGL.cpp",
        "src/libANGLE/renderer/gl/ProgramExecutableGL.h",
        "src/libANGLE/renderer/gl/ProgramGL.cpp",
        "src/libANGLE/renderer/gl/ProgramGL.h",
        "src/libANGLE/renderer/gl/ProgramPipelineGL.cpp",
        "src/libANGLE/renderer/gl/ProgramPipelineGL.h",
        "src/libANGLE/renderer/gl/QueryGL.cpp",
        "src/libANGLE/renderer/gl/QueryGL.h",
        "src/libANGLE/renderer/gl/RenderbufferGL.cpp",
        "src/libANGLE/renderer/gl/RenderbufferGL.h",
        "src/libANGLE/renderer/gl/RendererGL.cpp",
        "src/libANGLE/renderer/gl/RendererGL.h",
        "src/libANGLE/renderer/gl/SamplerGL.cpp",
        "src/libANGLE/renderer/gl/SamplerGL.h",
        "src/libANGLE/renderer/gl/SemaphoreGL.cpp",
        "src/libANGLE/renderer/gl/SemaphoreGL.h",
        "src/libANGLE/renderer/gl/ShaderGL.cpp",
        "src/libANGLE/renderer/gl/ShaderGL.h",
        "src/libANGLE/renderer/gl/StateManagerGL.cpp",
        "src/libANGLE/renderer/gl/StateManagerGL.h",
        "src/libANGLE/renderer/gl/SurfaceGL.cpp",
        "src/libANGLE/renderer/gl/SurfaceGL.h",
        "src/libANGLE/renderer/gl/SyncGL.cpp",
        "src/libANGLE/renderer/gl/SyncGL.h",
        "src/libANGLE/renderer/gl/TextureGL.cpp",
        "src/libANGLE/renderer/gl/TextureGL.h",
        "src/libANGLE/renderer/gl/TransformFeedbackGL.cpp",
        "src/libANGLE/renderer/gl/TransformFeedbackGL.h",
        "src/libANGLE/renderer/gl/VertexArrayGL.cpp",
        "src/libANGLE/renderer/gl/VertexArrayGL.h",
        "src/libANGLE/renderer/gl/egl/ContextEGL.cpp",
        "src/libANGLE/renderer/gl/egl/ContextEGL.h",
        "src/libANGLE/renderer/gl/egl/DeviceEGL.cpp",
        "src/libANGLE/renderer/gl/egl/DeviceEGL.h",
        "src/libANGLE/renderer/gl/egl/DisplayEGL.cpp",
        "src/libANGLE/renderer/gl/egl/DisplayEGL.h",
        "src/libANGLE/renderer/gl/egl/DmaBufImageSiblingEGL.cpp",
        "src/libANGLE/renderer/gl/egl/DmaBufImageSiblingEGL.h",
        "src/libANGLE/renderer/gl/egl/ExternalImageSiblingEGL.h",
        "src/libANGLE/renderer/gl/egl/FunctionsEGL.cpp",
        "src/libANGLE/renderer/gl/egl/FunctionsEGL.h",
        "src/libANGLE/renderer/gl/egl/FunctionsEGLDL.cpp",
        "src/libANGLE/renderer/gl/egl/FunctionsEGLDL.h",
        "src/libANGLE/renderer/gl/egl/ImageEGL.cpp",
        "src/libANGLE/renderer/gl/egl/ImageEGL.h",
        "src/libANGLE/renderer/gl/egl/PbufferSurfaceEGL.cpp",
        "src/libANGLE/renderer/gl/egl/PbufferSurfaceEGL.h",
        "src/libANGLE/renderer/gl/egl/RendererEGL.cpp",
        "src/libANGLE/renderer/gl/egl/RendererEGL.h",
        "src/libANGLE/renderer/gl/egl/SurfaceEGL.cpp",
        "src/libANGLE/renderer/gl/egl/SurfaceEGL.h",
        "src/libANGLE/renderer/gl/egl/SyncEGL.cpp",
        "src/libANGLE/renderer/gl/egl/SyncEGL.h",
        "src/libANGLE/renderer/gl/egl/WindowSurfaceEGL.cpp",
        "src/libANGLE/renderer/gl/egl/WindowSurfaceEGL.h",
        "src/libANGLE/renderer/gl/egl/android/DisplayAndroid.cpp",
        "src/libANGLE/renderer/gl/egl/android/DisplayAndroid.h",
        "src/libANGLE/renderer/gl/egl/android/NativeBufferImageSiblingAndroid.cpp",
        "src/libANGLE/renderer/gl/egl/android/NativeBufferImageSiblingAndroid.h",
        "src/libANGLE/renderer/gl/egl/egl_utils.cpp",
        "src/libANGLE/renderer/gl/egl/egl_utils.h",
        "src/libANGLE/renderer/gl/egl/functionsegl_typedefs.h",
        "src/libANGLE/renderer/gl/formatutilsgl.cpp",
        "src/libANGLE/renderer/gl/formatutilsgl.h",
        "src/libANGLE/renderer/gl/functionsgl_enums.h",
        "src/libANGLE/renderer/gl/functionsgl_typedefs.h",
        "src/libANGLE/renderer/gl/null_functions.cpp",
        "src/libANGLE/renderer/gl/null_functions.h",
        "src/libANGLE/renderer/gl/renderergl_utils.cpp",
        "src/libANGLE/renderer/gl/renderergl_utils.h",
        "src/libANGLE/renderer/load_functions_table.h",
        "src/libANGLE/renderer/load_functions_table_autogen.cpp",
        "src/libANGLE/renderer/null/BufferNULL.cpp",
        "src/libANGLE/renderer/null/BufferNULL.h",
        "src/libANGLE/renderer/null/CompilerNULL.cpp",
        "src/libANGLE/renderer/null/CompilerNULL.h",
        "src/libANGLE/renderer/null/ContextNULL.cpp",
        "src/libANGLE/renderer/null/ContextNULL.h",
        "src/libANGLE/renderer/null/DeviceNULL.cpp",
        "src/libANGLE/renderer/null/DeviceNULL.h",
        "src/libANGLE/renderer/null/DisplayNULL.cpp",
        "src/libANGLE/renderer/null/DisplayNULL.h",
        "src/libANGLE/renderer/null/FenceNVNULL.cpp",
        "src/libANGLE/renderer/null/FenceNVNULL.h",
        "src/libANGLE/renderer/null/FramebufferNULL.cpp",
        "src/libANGLE/renderer/null/FramebufferNULL.h",
        "src/libANGLE/renderer/null/ImageNULL.cpp",
        "src/libANGLE/renderer/null/ImageNULL.h",
        "src/libANGLE/renderer/null/ProgramExecutableNULL.cpp",
        "src/libANGLE/renderer/null/ProgramExecutableNULL.h",
        "src/libANGLE/renderer/null/ProgramNULL.cpp",
        "src/libANGLE/renderer/null/ProgramNULL.h",
        "src/libANGLE/renderer/null/ProgramPipelineNULL.cpp",
        "src/libANGLE/renderer/null/ProgramPipelineNULL.h",
        "src/libANGLE/renderer/null/QueryNULL.cpp",
        "src/libANGLE/renderer/null/QueryNULL.h",
        "src/libANGLE/renderer/null/RenderbufferNULL.cpp",
        "src/libANGLE/renderer/null/RenderbufferNULL.h",
        "src/libANGLE/renderer/null/SamplerNULL.cpp",
        "src/libANGLE/renderer/null/SamplerNULL.h",
        "src/libANGLE/renderer/null/ShaderNULL.cpp",
        "src/libANGLE/renderer/null/ShaderNULL.h",
        "src/libANGLE/renderer/null/SurfaceNULL.cpp",
        "src/libANGLE/renderer/null/SurfaceNULL.h",
        "src/libANGLE/renderer/null/SyncNULL.cpp",
        "src/libANGLE/renderer/null/SyncNULL.h",
        "src/libANGLE/renderer/null/TextureNULL.cpp",
        "src/libANGLE/renderer/null/TextureNULL.h",
        "src/libANGLE/renderer/null/TransformFeedbackNULL.cpp",
        "src/libANGLE/renderer/null/TransformFeedbackNULL.h",
        "src/libANGLE/renderer/null/VertexArrayNULL.cpp",
        "src/libANGLE/renderer/null/VertexArrayNULL.h",
        "src/libANGLE/renderer/renderer_utils.cpp",
        "src/libANGLE/renderer/renderer_utils.h",
        "src/libANGLE/renderer/serial_utils.h",
        "src/libANGLE/renderer/vulkan/AllocatorHelperPool.cpp",
        "src/libANGLE/renderer/vulkan/AllocatorHelperPool.h",
        "src/libANGLE/renderer/vulkan/AllocatorHelperRing.cpp",
        "src/libANGLE/renderer/vulkan/AllocatorHelperRing.h",
        "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "src/libANGLE/renderer/vulkan/BufferVk.h",
        "src/libANGLE/renderer/vulkan/CommandProcessor.cpp",
        "src/libANGLE/renderer/vulkan/CommandProcessor.h",
        "src/libANGLE/renderer/vulkan/CompilerVk.cpp",
        "src/libANGLE/renderer/vulkan/CompilerVk.h",
        "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "src/libANGLE/renderer/vulkan/ContextVk.h",
        "src/libANGLE/renderer/vulkan/DebugAnnotatorVk.cpp",
        "src/libANGLE/renderer/vulkan/DebugAnnotatorVk.h",
        "src/libANGLE/renderer/vulkan/DeviceVk.cpp",
        "src/libANGLE/renderer/vulkan/DeviceVk.h",
        "src/libANGLE/renderer/vulkan/DisplayVk.cpp",
        "src/libANGLE/renderer/vulkan/DisplayVk.h",
        "src/libANGLE/renderer/vulkan/DisplayVk_api.h",
        "src/libANGLE/renderer/vulkan/FenceNVVk.cpp",
        "src/libANGLE/renderer/vulkan/FenceNVVk.h",
        "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "src/libANGLE/renderer/vulkan/FramebufferVk.h",
        "src/libANGLE/renderer/vulkan/ImageVk.cpp",
        "src/libANGLE/renderer/vulkan/ImageVk.h",
        "src/libANGLE/renderer/vulkan/MemoryObjectVk.cpp",
        "src/libANGLE/renderer/vulkan/MemoryObjectVk.h",
        "src/libANGLE/renderer/vulkan/MemoryTracking.cpp",
        "src/libANGLE/renderer/vulkan/MemoryTracking.h",
        "src/libANGLE/renderer/vulkan/OverlayVk.cpp",
        "src/libANGLE/renderer/vulkan/OverlayVk.h",
        "src/libANGLE/renderer/vulkan/PersistentCommandPool.cpp",
        "src/libANGLE/renderer/vulkan/PersistentCommandPool.h",
        "src/libANGLE/renderer/vulkan/ProgramExecutableVk.cpp",
        "src/libANGLE/renderer/vulkan/ProgramExecutableVk.h",
        "src/libANGLE/renderer/vulkan/ProgramPipelineVk.cpp",
        "src/libANGLE/renderer/vulkan/ProgramPipelineVk.h",
        "src/libANGLE/renderer/vulkan/ProgramVk.cpp",
        "src/libANGLE/renderer/vulkan/ProgramVk.h",
        "src/libANGLE/renderer/vulkan/QueryVk.cpp",
        "src/libANGLE/renderer/vulkan/QueryVk.h",
        "src/libANGLE/renderer/vulkan/RenderTargetVk.cpp",
        "src/libANGLE/renderer/vulkan/RenderTargetVk.h",
        "src/libANGLE/renderer/vulkan/RenderbufferVk.cpp",
        "src/libANGLE/renderer/vulkan/RenderbufferVk.h",
        "src/libANGLE/renderer/vulkan/SamplerVk.cpp",
        "src/libANGLE/renderer/vulkan/SamplerVk.h",
        "src/libANGLE/renderer/vulkan/SecondaryCommandBuffer.cpp",
        "src/libANGLE/renderer/vulkan/SecondaryCommandBuffer.h",
        "src/libANGLE/renderer/vulkan/SecondaryCommandPool.cpp",
        "src/libANGLE/renderer/vulkan/SecondaryCommandPool.h",
        "src/libANGLE/renderer/vulkan/SemaphoreVk.cpp",
        "src/libANGLE/renderer/vulkan/SemaphoreVk.h",
        "src/libANGLE/renderer/vulkan/ShaderInterfaceVariableInfoMap.cpp",
        "src/libANGLE/renderer/vulkan/ShaderInterfaceVariableInfoMap.h",
        "src/libANGLE/renderer/vulkan/ShaderVk.cpp",
        "src/libANGLE/renderer/vulkan/ShaderVk.h",
        "src/libANGLE/renderer/vulkan/ShareGroupVk.cpp",
        "src/libANGLE/renderer/vulkan/ShareGroupVk.h",
        "src/libANGLE/renderer/vulkan/Suballocation.cpp",
        "src/libANGLE/renderer/vulkan/Suballocation.h",
        "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "src/libANGLE/renderer/vulkan/SurfaceVk.h",
        "src/libANGLE/renderer/vulkan/SyncVk.cpp",
        "src/libANGLE/renderer/vulkan/SyncVk.h",
        "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "src/libANGLE/renderer/vulkan/TextureVk.h",
        "src/libANGLE/renderer/vulkan/TransformFeedbackVk.cpp",
        "src/libANGLE/renderer/vulkan/TransformFeedbackVk.h",
        "src/libANGLE/renderer/vulkan/UtilsVk.cpp",
        "src/libANGLE/renderer/vulkan/UtilsVk.h",
        "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "src/libANGLE/renderer/vulkan/VertexArrayVk.h",
        "src/libANGLE/renderer/vulkan/VkImageImageSiblingVk.cpp",
        "src/libANGLE/renderer/vulkan/VkImageImageSiblingVk.h",
        "src/libANGLE/renderer/vulkan/VulkanSecondaryCommandBuffer.cpp",
        "src/libANGLE/renderer/vulkan/VulkanSecondaryCommandBuffer.h",
        "src/libANGLE/renderer/vulkan/android/AHBFunctions.cpp",
        "src/libANGLE/renderer/vulkan/android/AHBFunctions.h",
        "src/libANGLE/renderer/vulkan/android/DisplayVkAndroid.cpp",
        "src/libANGLE/renderer/vulkan/android/DisplayVkAndroid.h",
        "src/libANGLE/renderer/vulkan/android/HardwareBufferImageSiblingVkAndroid.cpp",
        "src/libANGLE/renderer/vulkan/android/HardwareBufferImageSiblingVkAndroid.h",
        "src/libANGLE/renderer/vulkan/android/WindowSurfaceVkAndroid.cpp",
        "src/libANGLE/renderer/vulkan/android/WindowSurfaceVkAndroid.h",
        "src/libANGLE/renderer/vulkan/android/vk_android_utils.cpp",
        "src/libANGLE/renderer/vulkan/android/vk_android_utils.h",
        "src/libANGLE/renderer/vulkan/spv_utils.cpp",
        "src/libANGLE/renderer/vulkan/spv_utils.h",
        "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "src/libANGLE/renderer/vulkan/vk_cache_utils.h",
        "src/libANGLE/renderer/vulkan/vk_caps_utils.cpp",
        "src/libANGLE/renderer/vulkan/vk_caps_utils.h",
        "src/libANGLE/renderer/vulkan/vk_command_buffer_utils.h",
        "src/libANGLE/renderer/vulkan/vk_format_table_autogen.cpp",
        "src/libANGLE/renderer/vulkan/vk_format_utils.cpp",
        "src/libANGLE/renderer/vulkan/vk_format_utils.h",
        "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "src/libANGLE/renderer/vulkan/vk_internal_shaders_autogen.cpp",
        "src/libANGLE/renderer/vulkan/vk_internal_shaders_autogen.h",
        "src/libANGLE/renderer/vulkan/vk_mandatory_format_support_table_autogen.cpp",
        "src/libANGLE/renderer/vulkan/vk_ref_counted_event.cpp",
        "src/libANGLE/renderer/vulkan/vk_ref_counted_event.h",
        "src/libANGLE/renderer/vulkan/vk_renderer.cpp",
        "src/libANGLE/renderer/vulkan/vk_renderer.h",
        "src/libANGLE/renderer/vulkan/vk_resource.cpp",
        "src/libANGLE/renderer/vulkan/vk_resource.h",
        "src/libANGLE/renderer/vulkan/vk_utils.cpp",
        "src/libANGLE/renderer/vulkan/vk_utils.h",
        "src/libANGLE/renderer/vulkan/vk_wrapper.h",
        "src/libANGLE/trace.h",
        "src/libANGLE/validationEGL.cpp",
        "src/libANGLE/validationEGL.h",
        "src/libANGLE/validationEGL_autogen.h",
        "src/libANGLE/validationES.cpp",
        "src/libANGLE/validationES.h",
        "src/libANGLE/validationES1.cpp",
        "src/libANGLE/validationES1.h",
        "src/libANGLE/validationES1_autogen.h",
        "src/libANGLE/validationES2.cpp",
        "src/libANGLE/validationES2.h",
        "src/libANGLE/validationES2_autogen.h",
        "src/libANGLE/validationES3.cpp",
        "src/libANGLE/validationES3.h",
        "src/libANGLE/validationES31.cpp",
        "src/libANGLE/validationES31.h",
        "src/libANGLE/validationES31_autogen.h",
        "src/libANGLE/validationES32.cpp",
        "src/libANGLE/validationES32.h",
        "src/libANGLE/validationES32_autogen.h",
        "src/libANGLE/validationES3_autogen.h",
        "src/libANGLE/validationESEXT.cpp",
        "src/libANGLE/validationESEXT.h",
        "src/libANGLE/validationESEXT_autogen.h",
        "src/program_serialize_data_version.py",
    ],
    out: ["ANGLEShaderProgramVersion.h"],
}

cc_genrule {
    name: "angle_gen_angle_angle_commit_h",
    cmd: "$(location src/commit_id.py) gen $(location angle_commit.h)",
    srcs: ["src/commit_id.py"],
    out: ["angle_commit.h"],
}

cc_library_static {
    name: "angle_obj_libtranslator_a",
    srcs: [
        "src/compiler/translator/BaseTypes.cpp",
        "src/compiler/translator/BuiltInFunctionEmulator.cpp",
        "src/compiler/translator/CallDAG.cpp",
        "src/compiler/translator/CodeGen.cpp",
        "src/compiler/translator/CollectVariables.cpp",
        "src/compiler/translator/Compiler.cpp",
        "src/compiler/translator/ConstantUnion.cpp",
        "src/compiler/translator/Declarator.cpp",
        "src/compiler/translator/Diagnostics.cpp",
        "src/compiler/translator/DirectiveHandler.cpp",
        "src/compiler/translator/ExtensionBehavior.cpp",
        "src/compiler/translator/FlagStd140Structs.cpp",
        "src/compiler/translator/FunctionLookup.cpp",
        "src/compiler/translator/HashNames.cpp",
        "src/compiler/translator/ImmutableStringBuilder.cpp",
        "src/compiler/translator/ImmutableString_autogen.cpp",
        "src/compiler/translator/InfoSink.cpp",
        "src/compiler/translator/Initialize.cpp",
        "src/compiler/translator/InitializeDll.cpp",
        "src/compiler/translator/IntermNode.cpp",
        "src/compiler/translator/IntermRebuild.cpp",
        "src/compiler/translator/IsASTDepthBelowLimit.cpp",
        "src/compiler/translator/Name.cpp",
        "src/compiler/translator/Operator.cpp",
        "src/compiler/translator/OutputTree.cpp",
        "src/compiler/translator/ParseContext.cpp",
        "src/compiler/translator/PoolAlloc.cpp",
        "src/compiler/translator/QualifierTypes.cpp",
        "src/compiler/translator/ShaderLang.cpp",
        "src/compiler/translator/ShaderVars.cpp",
        "src/compiler/translator/Symbol.cpp",
        "src/compiler/translator/SymbolTable.cpp",
        "src/compiler/translator/SymbolTable_autogen.cpp",
        "src/compiler/translator/SymbolUniqueId.cpp",
        "src/compiler/translator/Types.cpp",
        "src/compiler/translator/ValidateAST.cpp",
        "src/compiler/translator/ValidateBarrierFunctionCall.cpp",
        "src/compiler/translator/ValidateClipCullDistance.cpp",
        "src/compiler/translator/ValidateGlobalInitializer.cpp",
        "src/compiler/translator/ValidateLimitations.cpp",
        "src/compiler/translator/ValidateMaxParameters.cpp",
        "src/compiler/translator/ValidateOutputs.cpp",
        "src/compiler/translator/ValidateSwitch.cpp",
        "src/compiler/translator/ValidateTypeSizeLimitations.cpp",
        "src/compiler/translator/ValidateVaryingLocations.cpp",
        "src/compiler/translator/VariablePacker.cpp",
        "src/compiler/translator/blocklayout.cpp",
        "src/compiler/translator/glsl/OutputGLSL.cpp",
        "src/compiler/translator/glsl/OutputGLSLBase.cpp",
        "src/compiler/translator/glslang_lex_autogen.cpp",
        "src/compiler/translator/glslang_tab_autogen.cpp",
        "src/compiler/translator/spirv/BuildSPIRV.cpp",
        "src/compiler/translator/spirv/BuiltinsWorkaround.cpp",
        "src/compiler/translator/spirv/OutputSPIRV.cpp",
        "src/compiler/translator/spirv/TranslatorSPIRV.cpp",
        "src/compiler/translator/tree_ops/ClampFragDepth.cpp",
        "src/compiler/translator/tree_ops/ClampIndirectIndices.cpp",
        "src/compiler/translator/tree_ops/ClampPointSize.cpp",
        "src/compiler/translator/tree_ops/DeclareAndInitBuiltinsForInstancedMultiview.cpp",
        "src/compiler/translator/tree_ops/DeclarePerVertexBlocks.cpp",
        "src/compiler/translator/tree_ops/DeferGlobalInitializers.cpp",
        "src/compiler/translator/tree_ops/EmulateGLFragColorBroadcast.cpp",
        "src/compiler/translator/tree_ops/EmulateMultiDrawShaderBuiltins.cpp",
        "src/compiler/translator/tree_ops/FoldExpressions.cpp",
        "src/compiler/translator/tree_ops/ForcePrecisionQualifier.cpp",
        "src/compiler/translator/tree_ops/InitializeVariables.cpp",
        "src/compiler/translator/tree_ops/MonomorphizeUnsupportedFunctions.cpp",
        "src/compiler/translator/tree_ops/PreTransformTextureCubeGradDerivatives.cpp",
        "src/compiler/translator/tree_ops/PruneEmptyCases.cpp",
        "src/compiler/translator/tree_ops/PruneInfiniteLoops.cpp",
        "src/compiler/translator/tree_ops/PruneNoOps.cpp",
        "src/compiler/translator/tree_ops/RecordConstantPrecision.cpp",
        "src/compiler/translator/tree_ops/RemoveArrayLengthMethod.cpp",
        "src/compiler/translator/tree_ops/RemoveAtomicCounterBuiltins.cpp",
        "src/compiler/translator/tree_ops/RemoveDynamicIndexing.cpp",
        "src/compiler/translator/tree_ops/RemoveInactiveInterfaceVariables.cpp",
        "src/compiler/translator/tree_ops/RemoveInvariantDeclaration.cpp",
        "src/compiler/translator/tree_ops/RemoveUnreferencedVariables.cpp",
        "src/compiler/translator/tree_ops/RescopeGlobalVariables.cpp",
        "src/compiler/translator/tree_ops/RewriteArrayOfArrayOfOpaqueUniforms.cpp",
        "src/compiler/translator/tree_ops/RewriteAtomicCounters.cpp",
        "src/compiler/translator/tree_ops/RewriteDfdy.cpp",
        "src/compiler/translator/tree_ops/RewritePixelLocalStorage.cpp",
        "src/compiler/translator/tree_ops/RewriteStructSamplers.cpp",
        "src/compiler/translator/tree_ops/RewriteTexelFetchOffset.cpp",
        "src/compiler/translator/tree_ops/SeparateDeclarations.cpp",
        "src/compiler/translator/tree_ops/SeparateStructFromUniformDeclarations.cpp",
        "src/compiler/translator/tree_ops/SimplifyLoopConditions.cpp",
        "src/compiler/translator/tree_ops/SplitSequenceOperator.cpp",
        "src/compiler/translator/tree_ops/spirv/ClampGLLayer.cpp",
        "src/compiler/translator/tree_ops/spirv/EmulateAdvancedBlendEquations.cpp",
        "src/compiler/translator/tree_ops/spirv/EmulateDithering.cpp",
        "src/compiler/translator/tree_ops/spirv/EmulateFragColorData.cpp",
        "src/compiler/translator/tree_ops/spirv/EmulateFramebufferFetch.cpp",
        "src/compiler/translator/tree_ops/spirv/EmulateYUVBuiltIns.cpp",
        "src/compiler/translator/tree_ops/spirv/FlagSamplersWithTexelFetch.cpp",
        "src/compiler/translator/tree_ops/spirv/ReswizzleYUVOps.cpp",
        "src/compiler/translator/tree_ops/spirv/RewriteInterpolateAtOffset.cpp",
        "src/compiler/translator/tree_ops/spirv/RewriteR32fImages.cpp",
        "src/compiler/translator/tree_util/DriverUniform.cpp",
        "src/compiler/translator/tree_util/FindFunction.cpp",
        "src/compiler/translator/tree_util/FindMain.cpp",
        "src/compiler/translator/tree_util/FindPreciseNodes.cpp",
        "src/compiler/translator/tree_util/FindSymbolNode.cpp",
        "src/compiler/translator/tree_util/IntermNodePatternMatcher.cpp",
        "src/compiler/translator/tree_util/IntermNode_util.cpp",
        "src/compiler/translator/tree_util/IntermTraverse.cpp",
        "src/compiler/translator/tree_util/ReplaceArrayOfMatrixVarying.cpp",
        "src/compiler/translator/tree_util/ReplaceClipCullDistanceVariable.cpp",
        "src/compiler/translator/tree_util/ReplaceShadowingVariables.cpp",
        "src/compiler/translator/tree_util/ReplaceVariable.cpp",
        "src/compiler/translator/tree_util/RewriteSampleMaskVariable.cpp",
        "src/compiler/translator/tree_util/RunAtTheBeginningOfShader.cpp",
        "src/compiler/translator/tree_util/RunAtTheEndOfShader.cpp",
        "src/compiler/translator/tree_util/SpecializationConstant.cpp",
        "src/compiler/translator/util.cpp",
    ],
    cflags: [
        "-DABSL_ALLOCATOR_NOTHROW=1",
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r27_1",
        "-DANGLE_ENABLE_CONTEXT_MUTEX=1",
        "-DANGLE_ENABLE_CONTEXT_MUTEX_RECURSION=1",
        "-DANGLE_ENABLE_GLOBAL_MUTEX_LOAD_TIME_ALLOCATE=1",
        "-DANGLE_ENABLE_GLOBAL_MUTEX_RECURSION=1",
        "-DANGLE_ENABLE_SHARE_CONTEXT_LOCK=1",
        "-DANGLE_ENABLE_VULKAN",
        "-DANGLE_TEST_ENABLE_SYSTEM_EGL",
        "-DANGLE_USE_ABSEIL",
        "-DANGLE_USE_ANDROID_TLS_SLOT=1",
        "-DCR_CLANG_REVISION=\"llvmorg-20-init-13894-g8cb44859-1\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DHAVE_SYS_UIO_H",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D_LIBCPP_HARDENING_MODE=_LIBCPP_HARDENING_MODE_NONE",
        "-D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-nullability-completeness",
        "-fvisibility-inlines-hidden",
        "-fvisibility=hidden",
    ],
    shared_libs: ["libnativewindow"],
    local_include_dirs: [
        "include",
        "src",
        "src/common/base",
        "src/common/third_party/xxhash",
        "third_party/abseil-cpp",
    ],
    header_libs: [
        "SPIRV-Headers-includes",
        "SPIRV-Tools-includes",
    ],
    generated_headers: [
        "angle_gen_angle_ANGLEShaderProgramVersion_h",
        "angle_gen_angle_angle_commit_h",
    ],
    use_clang_lld: true,
    stl: "libc++_static",
    arch: {
        arm64: {
            cflags: ["-D__ARM_NEON__=1"],
        },
    },
}

cc_library_static {
    name: "angle_obj_libangle_common_shader_state_a",
    srcs: ["src/common/CompiledShaderState.cpp"],
    cflags: [
        "-DABSL_ALLOCATOR_NOTHROW=1",
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r27_1",
        "-DANGLE_ENABLE_CONTEXT_MUTEX=1",
        "-DANGLE_ENABLE_CONTEXT_MUTEX_RECURSION=1",
        "-DANGLE_ENABLE_GLOBAL_MUTEX_LOAD_TIME_ALLOCATE=1",
        "-DANGLE_ENABLE_GLOBAL_MUTEX_RECURSION=1",
        "-DANGLE_ENABLE_SHARE_CONTEXT_LOCK=1",
        "-DANGLE_EXPOSE_NON_CONFORMANT_EXTENSIONS_AND_VERSIONS",
        "-DANGLE_TEST_ENABLE_SYSTEM_EGL",
        "-DANGLE_USE_ABSEIL",
        "-DANGLE_USE_ANDROID_TLS_SLOT=1",
        "-DCR_CLANG_REVISION=\"llvmorg-20-init-13894-g8cb44859-1\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DHAVE_SYS_UIO_H",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D_LIBCPP_HARDENING_MODE=_LIBCPP_HARDENING_MODE_NONE",
        "-D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-nullability-completeness",
        "-fvisibility-inlines-hidden",
        "-fvisibility=hidden",
    ],
    shared_libs: ["libnativewindow"],
    local_include_dirs: [
        "include",
        "src",
        "src/common/base",
        "src/common/third_party/xxhash",
        "third_party/abseil-cpp",
    ],
    use_clang_lld: true,
    stl: "libc++_static",
    arch: {
        arm64: {
            cflags: ["-D__ARM_NEON__=1"],
        },
    },
}

cc_library_static {
    name: "angle_obj_libangle_image_util_a",
    srcs: [
        "src/image_util/AstcDecompressorNoOp.cpp",
        "src/image_util/copyimage.cpp",
        "src/image_util/imageformats.cpp",
        "src/image_util/loadimage.cpp",
        "src/image_util/loadimage_astc.cpp",
        "src/image_util/loadimage_etc.cpp",
        "src/image_util/loadimage_paletted.cpp",
        "src/image_util/storeimage_paletted.cpp",
    ],
    cflags: [
        "-DABSL_ALLOCATOR_NOTHROW=1",
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r27_1",
        "-DANGLE_ENABLE_CONTEXT_MUTEX=1",
        "-DANGLE_ENABLE_CONTEXT_MUTEX_RECURSION=1",
        "-DANGLE_ENABLE_GLOBAL_MUTEX_LOAD_TIME_ALLOCATE=1",
        "-DANGLE_ENABLE_GLOBAL_MUTEX_RECURSION=1",
        "-DANGLE_ENABLE_SHARE_CONTEXT_LOCK=1",
        "-DANGLE_TEST_ENABLE_SYSTEM_EGL",
        "-DANGLE_USE_ABSEIL",
        "-DANGLE_USE_ANDROID_TLS_SLOT=1",
        "-DCR_CLANG_REVISION=\"llvmorg-20-init-13894-g8cb44859-1\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DHAVE_SYS_UIO_H",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D_LIBCPP_HARDENING_MODE=_LIBCPP_HARDENING_MODE_NONE",
        "-D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-nullability-completeness",
        "-fvisibility-inlines-hidden",
        "-fvisibility=hidden",
    ],
    shared_libs: ["libnativewindow"],
    local_include_dirs: [
        "include",
        "src",
        "src/common/base",
        "src/common/third_party/xxhash",
        "third_party/abseil-cpp",
    ],
    use_clang_lld: true,
    stl: "libc++_static",
    arch: {
        arm64: {
            cflags: ["-D__ARM_NEON__=1"],
        },
    },
}

cc_library_static {
    name: "angle_obj_libangle_gpu_info_util_a",
    srcs: [
        "src/gpu_info_util/SystemInfo.cpp",
        "src/gpu_info_util/SystemInfo_android.cpp",
        "src/gpu_info_util/SystemInfo_vulkan.cpp",
    ],
    cflags: [
        "-DABSL_ALLOCATOR_NOTHROW=1",
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r27_1",
        "-DANGLE_ENABLE_CONTEXT_MUTEX=1",
        "-DANGLE_ENABLE_CONTEXT_MUTEX_RECURSION=1",
        "-DANGLE_ENABLE_CRC_FOR_PIPELINE_CACHE",
        "-DANGLE_ENABLE_GLOBAL_MUTEX_LOAD_TIME_ALLOCATE=1",
        "-DANGLE_ENABLE_GLOBAL_MUTEX_RECURSION=1",
        "-DANGLE_ENABLE_SHARE_CONTEXT_LOCK=1",
        "-DANGLE_ENABLE_VULKAN",
        "-DANGLE_ENABLE_VULKAN_SHARED_RING_BUFFER_CMD_ALLOC=false",
        "-DANGLE_EXPOSE_NON_CONFORMANT_EXTENSIONS_AND_VERSIONS",
        "-DANGLE_SHARED_LIBVULKAN=1",
        "-DANGLE_TEST_ENABLE_SYSTEM_EGL",
        "-DANGLE_USE_ABSEIL",
        "-DANGLE_USE_ANDROID_TLS_SLOT=1",
        "-DCR_CLANG_REVISION=\"llvmorg-20-init-13894-g8cb44859-1\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DHAVE_SYS_UIO_H",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-DVK_USE_PLATFORM_ANDROID_KHR",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D_LIBCPP_HARDENING_MODE=_LIBCPP_HARDENING_MODE_NONE",
        "-D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-nullability-completeness",
        "-fvisibility-inlines-hidden",
        "-fvisibility=hidden",
    ],
    shared_libs: ["libnativewindow"],
    local_include_dirs: [
        "include",
        "src",
        "src/common/base",
        "src/common/third_party/xxhash",
        "src/third_party/volk",
        "third_party/abseil-cpp",
        "third_party/vulkan-headers/src/include",
    ],
    use_clang_lld: true,
    stl: "libc++_static",
    arch: {
        arm64: {
            cflags: ["-D__ARM_NEON__=1"],
        },
    },
}

cc_library_shared {
    name: "libEGL_angle",
    srcs: [
        "src/common/third_party/xxhash/xxhash.c",
        "src/libEGL/egl_loader_autogen.cpp",
        "src/libEGL/libEGL_autogen.cpp",
        "third_party/abseil-cpp/absl/base/internal/cycleclock.cc",
        "third_party/abseil-cpp/absl/base/internal/low_level_alloc.cc",
        "third_party/abseil-cpp/absl/base/internal/raw_logging.cc",
        "third_party/abseil-cpp/absl/base/internal/spinlock.cc",
        "third_party/abseil-cpp/absl/base/internal/spinlock_wait.cc",
        "third_party/abseil-cpp/absl/base/internal/sysinfo.cc",
        "third_party/abseil-cpp/absl/base/internal/thread_identity.cc",
        "third_party/abseil-cpp/absl/base/internal/throw_delegate.cc",
        "third_party/abseil-cpp/absl/base/internal/tracing.cc",
        "third_party/abseil-cpp/absl/base/internal/unscaledcycleclock.cc",
        "third_party/abseil-cpp/absl/base/log_severity.cc",
        "third_party/abseil-cpp/absl/container/internal/hashtablez_sampler.cc",
        "third_party/abseil-cpp/absl/container/internal/hashtablez_sampler_force_weak_definition.cc",
        "third_party/abseil-cpp/absl/container/internal/raw_hash_set.cc",
        "third_party/abseil-cpp/absl/crc/crc32c.cc",
        "third_party/abseil-cpp/absl/crc/internal/cpu_detect.cc",
        "third_party/abseil-cpp/absl/crc/internal/crc.cc",
        "third_party/abseil-cpp/absl/crc/internal/crc_cord_state.cc",
        "third_party/abseil-cpp/absl/crc/internal/crc_memcpy_fallback.cc",
        "third_party/abseil-cpp/absl/crc/internal/crc_memcpy_x86_arm_combined.cc",
        "third_party/abseil-cpp/absl/crc/internal/crc_non_temporal_memcpy.cc",
        "third_party/abseil-cpp/absl/crc/internal/crc_x86_arm_combined.cc",
        "third_party/abseil-cpp/absl/debugging/internal/address_is_readable.cc",
        "third_party/abseil-cpp/absl/debugging/internal/decode_rust_punycode.cc",
        "third_party/abseil-cpp/absl/debugging/internal/demangle.cc",
        "third_party/abseil-cpp/absl/debugging/internal/demangle_rust.cc",
        "third_party/abseil-cpp/absl/debugging/internal/elf_mem_image.cc",
        "third_party/abseil-cpp/absl/debugging/internal/utf8_for_code_point.cc",
        "third_party/abseil-cpp/absl/debugging/internal/vdso_support.cc",
        "third_party/abseil-cpp/absl/debugging/stacktrace.cc",
        "third_party/abseil-cpp/absl/debugging/symbolize.cc",
        "third_party/abseil-cpp/absl/hash/internal/city.cc",
        "third_party/abseil-cpp/absl/hash/internal/hash.cc",
        "third_party/abseil-cpp/absl/hash/internal/low_level_hash.cc",
        "third_party/abseil-cpp/absl/numeric/int128.cc",
        "third_party/abseil-cpp/absl/profiling/internal/exponential_biased.cc",
        "third_party/abseil-cpp/absl/strings/ascii.cc",
        "third_party/abseil-cpp/absl/strings/charconv.cc",
        "third_party/abseil-cpp/absl/strings/cord.cc",
        "third_party/abseil-cpp/absl/strings/cord_analysis.cc",
        "third_party/abseil-cpp/absl/strings/cord_buffer.cc",
        "third_party/abseil-cpp/absl/strings/escaping.cc",
        "third_party/abseil-cpp/absl/strings/internal/charconv_bigint.cc",
        "third_party/abseil-cpp/absl/strings/internal/charconv_parse.cc",
        "third_party/abseil-cpp/absl/strings/internal/cord_internal.cc",
        "third_party/abseil-cpp/absl/strings/internal/cord_rep_btree.cc",
        "third_party/abseil-cpp/absl/strings/internal/cord_rep_btree_navigator.cc",
        "third_party/abseil-cpp/absl/strings/internal/cord_rep_btree_reader.cc",
        "third_party/abseil-cpp/absl/strings/internal/cord_rep_consume.cc",
        "third_party/abseil-cpp/absl/strings/internal/cord_rep_crc.cc",
        "third_party/abseil-cpp/absl/strings/internal/cordz_functions.cc",
        "third_party/abseil-cpp/absl/strings/internal/cordz_handle.cc",
        "third_party/abseil-cpp/absl/strings/internal/cordz_info.cc",
        "third_party/abseil-cpp/absl/strings/internal/damerau_levenshtein_distance.cc",
        "third_party/abseil-cpp/absl/strings/internal/escaping.cc",
        "third_party/abseil-cpp/absl/strings/internal/memutil.cc",
        "third_party/abseil-cpp/absl/strings/internal/ostringstream.cc",
        "third_party/abseil-cpp/absl/strings/internal/str_format/arg.cc",
        "third_party/abseil-cpp/absl/strings/internal/str_format/bind.cc",
        "third_party/abseil-cpp/absl/strings/internal/str_format/extension.cc",
        "third_party/abseil-cpp/absl/strings/internal/str_format/float_conversion.cc",
        "third_party/abseil-cpp/absl/strings/internal/str_format/output.cc",
        "third_party/abseil-cpp/absl/strings/internal/str_format/parser.cc",
        "third_party/abseil-cpp/absl/strings/internal/stringify_sink.cc",
        "third_party/abseil-cpp/absl/strings/internal/utf8.cc",
        "third_party/abseil-cpp/absl/strings/match.cc",
        "third_party/abseil-cpp/absl/strings/numbers.cc",
        "third_party/abseil-cpp/absl/strings/str_cat.cc",
        "third_party/abseil-cpp/absl/strings/str_replace.cc",
        "third_party/abseil-cpp/absl/strings/str_split.cc",
        "third_party/abseil-cpp/absl/strings/string_view.cc",
        "third_party/abseil-cpp/absl/strings/substitute.cc",
        "third_party/abseil-cpp/absl/synchronization/barrier.cc",
        "third_party/abseil-cpp/absl/synchronization/blocking_counter.cc",
        "third_party/abseil-cpp/absl/synchronization/internal/create_thread_identity.cc",
        "third_party/abseil-cpp/absl/synchronization/internal/futex_waiter.cc",
        "third_party/abseil-cpp/absl/synchronization/internal/graphcycles.cc",
        "third_party/abseil-cpp/absl/synchronization/internal/kernel_timeout.cc",
        "third_party/abseil-cpp/absl/synchronization/internal/per_thread_sem.cc",
        "third_party/abseil-cpp/absl/synchronization/internal/pthread_waiter.cc",
        "third_party/abseil-cpp/absl/synchronization/internal/sem_waiter.cc",
        "third_party/abseil-cpp/absl/synchronization/internal/stdcpp_waiter.cc",
        "third_party/abseil-cpp/absl/synchronization/internal/waiter_base.cc",
        "third_party/abseil-cpp/absl/synchronization/internal/win32_waiter.cc",
        "third_party/abseil-cpp/absl/synchronization/mutex.cc",
        "third_party/abseil-cpp/absl/synchronization/notification.cc",
        "third_party/abseil-cpp/absl/time/civil_time.cc",
        "third_party/abseil-cpp/absl/time/clock.cc",
        "third_party/abseil-cpp/absl/time/duration.cc",
        "third_party/abseil-cpp/absl/time/format.cc",
        "third_party/abseil-cpp/absl/time/internal/cctz/src/civil_time_detail.cc",
        "third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_fixed.cc",
        "third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_format.cc",
        "third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_if.cc",
        "third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_impl.cc",
        "third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_info.cc",
        "third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_libc.cc",
        "third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_lookup.cc",
        "third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_posix.cc",
        "third_party/abseil-cpp/absl/time/internal/cctz/src/zone_info_source.cc",
        "third_party/abseil-cpp/absl/time/time.cc",
        "third_party/abseil-cpp/absl/types/bad_optional_access.cc",
        "third_party/abseil-cpp/absl/types/bad_variant_access.cc",
    ],
    cflags: [
        "-DABSL_ALLOCATOR_NOTHROW=1",
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r27_1",
        "-DANGLE_DISPATCH_LIBRARY=\"libGLESv2_angle\"",
        "-DANGLE_EGL_LIBRARY_NAME=\"libEGL_angle\"",
        "-DANGLE_ENABLE_CONTEXT_MUTEX=1",
        "-DANGLE_ENABLE_CONTEXT_MUTEX_RECURSION=1",
        "-DANGLE_ENABLE_GLOBAL_MUTEX_LOAD_TIME_ALLOCATE=1",
        "-DANGLE_ENABLE_GLOBAL_MUTEX_RECURSION=1",
        "-DANGLE_ENABLE_SHARE_CONTEXT_LOCK=1",
        "-DANGLE_EXPOSE_NON_CONFORMANT_EXTENSIONS_AND_VERSIONS",
        "-DANGLE_GLESV2_LIBRARY_NAME=\"libGLESv2_angle\"",
        "-DANGLE_MESA_EGL_LIBRARY_NAME=\"mesa/src/egl/libEGL\"",
        "-DANGLE_MESA_GLESV2_LIBRARY_NAME=\"mesa/src/mapi/es2api/libGLESv2\"",
        "-DANGLE_TEST_ENABLE_SYSTEM_EGL",
        "-DANGLE_USE_ABSEIL",
        "-DANGLE_USE_ANDROID_TLS_SLOT=1",
        "-DANGLE_USE_EGL_LOADER",
        "-DANGLE_VULKAN_SECONDARIES_EGL_LIBRARY_NAME=\"libEGL_vulkan_secondaries_angle\"",
        "-DANGLE_VULKAN_SECONDARIES_GLESV2_LIBRARY_NAME=\"libGLESv2_vulkan_secondaries_angle\"",
        "-DCR_CLANG_REVISION=\"llvmorg-20-init-13894-g8cb44859-1\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DEGLAPI=__attribute__((visibility(\"default\")))",
        "-DEGL_EGLEXT_PROTOTYPES",
        "-DEGL_EGL_PROTOTYPES=1",
        "-DGL_GLES_PROTOTYPES=1",
        "-DGL_GLEXT_PROTOTYPES",
        "-DHAVE_SYS_UIO_H",
        "-DLIBEGL_IMPLEMENTATION",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D_LIBCPP_HARDENING_MODE=_LIBCPP_HARDENING_MODE_NONE",
        "-D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-nullability-completeness",
        "-fvisibility-inlines-hidden",
        "-fvisibility=hidden",
    ],
    shared_libs: [
        "liblog",
        "libnativewindow",
    ],
    static_libs: ["angle_obj_libangle_common_a"],
    local_include_dirs: [
        "",
        "include",
        "src",
        "src/common/base",
        "src/common/third_party/xxhash",
        "third_party/abseil-cpp",
    ],
    generated_headers: [
        "angle_gen_angle_ANGLEShaderProgramVersion_h",
        "angle_gen_angle_angle_commit_h",
    ],
    use_clang_lld: true,
    stl: "libc++_static",
    arch: {
        arm64: {
            cflags: ["-D__ARM_NEON__=1"],
        },
    },
}
