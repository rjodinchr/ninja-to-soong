//
// This file has been auto-generated by ninja-to-soong
//
// ******************************
// *** DO NOT MODIFY MANUALLY ***
// ******************************
//
// https://github.com/rjodinchr/ninja-to-soong
//

package {
    default_visibility: ["//visibility:public"],
    default_applicable_licenses: ["clvk_license"],
}

license {
    name: "clvk_license",
    visibility: [":__subpackages__"],
    license_kinds: ["SPDX-license-identifier-Apache-2.0"],
    license_text: ["LICENSE"],
}

cc_library_shared {
    name: "clvk_libOpenCL_so",
    stem: "libclvk",
    version_script: "src/exports.map",
    srcs: [
        "src/api.cpp",
        "src/config.cpp",
        "src/context.cpp",
        "src/device.cpp",
        "src/device_properties.cpp",
        "src/event.cpp",
        "src/image_format.cpp",
        "src/init.cpp",
        "src/kernel.cpp",
        "src/log.cpp",
        "src/memory.cpp",
        "src/printf.cpp",
        "src/program.cpp",
        "src/queue.cpp",
        "src/queue_controller.cpp",
        "src/semaphore.cpp",
        "src/sha1.cpp",
        "src/tracing.cpp",
        "src/unit.cpp",
        "src/utils.cpp",
    ],
    cflags: [
        "-DCLSPV_ONLINE_COMPILER=1",
        "-DCOMPILER_AVAILABLE=1",
    ],
    ldflags: ["-Wl,-Bsymbolic"],
    shared_libs: ["libvulkan"],
    static_libs: [
        "SPIRV-Tools_source_libSPIRV-Tools_a",
        "SPIRV-Tools_source_link_libSPIRV-Tools-link_a",
        "SPIRV-Tools_source_opt_libSPIRV-Tools-opt_a",
        "clspv_lib_libclspv_core_a",
        "llvm-project_lib_libLLVMAggressiveInstCombine_a",
        "llvm-project_lib_libLLVMAnalysis_a",
        "llvm-project_lib_libLLVMAsmParser_a",
        "llvm-project_lib_libLLVMBinaryFormat_a",
        "llvm-project_lib_libLLVMBitReader_a",
        "llvm-project_lib_libLLVMBitWriter_a",
        "llvm-project_lib_libLLVMBitstreamReader_a",
        "llvm-project_lib_libLLVMCFGuard_a",
        "llvm-project_lib_libLLVMCGData_a",
        "llvm-project_lib_libLLVMCodeGenTypes_a",
        "llvm-project_lib_libLLVMCodeGen_a",
        "llvm-project_lib_libLLVMCore_a",
        "llvm-project_lib_libLLVMCoroutines_a",
        "llvm-project_lib_libLLVMCoverage_a",
        "llvm-project_lib_libLLVMDebugInfoBTF_a",
        "llvm-project_lib_libLLVMDebugInfoCodeView_a",
        "llvm-project_lib_libLLVMDebugInfoDWARF_a",
        "llvm-project_lib_libLLVMDebugInfoMSF_a",
        "llvm-project_lib_libLLVMDebugInfoPDB_a",
        "llvm-project_lib_libLLVMDemangle_a",
        "llvm-project_lib_libLLVMExtensions_a",
        "llvm-project_lib_libLLVMFrontendDriver_a",
        "llvm-project_lib_libLLVMFrontendHLSL_a",
        "llvm-project_lib_libLLVMFrontendOffloading_a",
        "llvm-project_lib_libLLVMFrontendOpenMP_a",
        "llvm-project_lib_libLLVMHipStdPar_a",
        "llvm-project_lib_libLLVMIRPrinter_a",
        "llvm-project_lib_libLLVMIRReader_a",
        "llvm-project_lib_libLLVMInstCombine_a",
        "llvm-project_lib_libLLVMInstrumentation_a",
        "llvm-project_lib_libLLVMLTO_a",
        "llvm-project_lib_libLLVMLinker_a",
        "llvm-project_lib_libLLVMMCParser_a",
        "llvm-project_lib_libLLVMMC_a",
        "llvm-project_lib_libLLVMObjCARCOpts_a",
        "llvm-project_lib_libLLVMObject_a",
        "llvm-project_lib_libLLVMOption_a",
        "llvm-project_lib_libLLVMPasses_a",
        "llvm-project_lib_libLLVMProfileData_a",
        "llvm-project_lib_libLLVMRemarks_a",
        "llvm-project_lib_libLLVMSandboxIR_a",
        "llvm-project_lib_libLLVMScalarOpts_a",
        "llvm-project_lib_libLLVMSupport_a",
        "llvm-project_lib_libLLVMSymbolize_a",
        "llvm-project_lib_libLLVMTargetParser_a",
        "llvm-project_lib_libLLVMTarget_a",
        "llvm-project_lib_libLLVMTextAPI_a",
        "llvm-project_lib_libLLVMTransformUtils_a",
        "llvm-project_lib_libLLVMVectorize_a",
        "llvm-project_lib_libLLVMWindowsDriver_a",
        "llvm-project_lib_libLLVMipo_a",
        "llvm-project_lib_libclangAPINotes_a",
        "llvm-project_lib_libclangASTMatchers_a",
        "llvm-project_lib_libclangAST_a",
        "llvm-project_lib_libclangAnalysis_a",
        "llvm-project_lib_libclangBasic_a",
        "llvm-project_lib_libclangCodeGen_a",
        "llvm-project_lib_libclangDriver_a",
        "llvm-project_lib_libclangEdit_a",
        "llvm-project_lib_libclangFrontend_a",
        "llvm-project_lib_libclangLex_a",
        "llvm-project_lib_libclangParse_a",
        "llvm-project_lib_libclangSema_a",
        "llvm-project_lib_libclangSerialization_a",
        "llvm-project_lib_libclangSupport_a",
    ],
    header_libs: [
        "OpenCL-Headers",
        "SPIRV-Headers-includes",
        "SPIRV-Tools-includes",
        "clspv-includes",
    ],
    use_clang_lld: true,
}
